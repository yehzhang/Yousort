// Generated by purs bundle 0.12.0
var PS = {};
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];                 
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Prelude = PS["Prelude"];                 
  var IsString = function (fromString) {
      this.fromString = fromString;
  };
  var isStringString = new IsString(Control_Category.identity(Control_Category.categoryFn));
  var fromString = function (dict) {
      return dict.fromString;
  };
  exports["fromString"] = fromString;
  exports["IsString"] = IsString;
  exports["isStringString"] = isStringString;
})(PS["CSS.String"] = PS["CSS.String"] || {});
(function(exports) {
    "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
    "use strict";

  exports.ordArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        var i = 0;
        var xlen = xs.length;
        var ylen = ys.length;
        while (i < xlen && i < ylen) {
          var x = xs[i];
          var y = ys[i];
          var o = f(x)(y);
          if (o !== 0) {
            return o;
          }
          i++;
        }
        if (xlen === ylen) {
          return 0;
        } else if (xlen > ylen) {
          return -1;
        } else {
          return 1;
        }
      };
    };
  };
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs === ys) return true;
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Show = function (show) {
      this.show = show;
  };
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_Row = PS["Type.Data.Row"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return new HeytingAlgebra(function (f) {
          return function (g) {
              return function (a) {
                  return conj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (g) {
              return function (a) {
                  return disj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (v) {
          return ff(dictHeytingAlgebra);
      }, function (f) {
          return function (g) {
              return function (a) {
                  return implies(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (a) {
              return not(dictHeytingAlgebra)(f(a));
          };
      }, function (v) {
          return tt(dictHeytingAlgebra);
      });
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Show = PS["Data.Show"];
  var absurd = function (a) {
      var spin = function ($copy_v) {
          var $tco_result;
          function $tco_loop(v) {
              $copy_v = v;
              return;
          };
          while (!false) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return spin(a);
  };
  exports["absurd"] = absurd;
})(PS["Data.Void"] = PS["Data.Void"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.refEq);
  var eqNumber = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq);
  var eqChar = new Eq($foreign.refEq);
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return new Eq($foreign.eqArrayImpl(eq(dictEq)));
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqArray"] = eqArray;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];                 
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];                 
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
    "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  exports.numAdd = function (n1) {
    return function (n2) {
      return n1 + n2;
    };
  };

  exports.numMul = function (n1) {
    return function (n2) {
      return n1 * n2;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Semiring"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_Row = PS["Type.Data.Row"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  }; 
  var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringInt"] = semiringInt;
  exports["semiringNumber"] = semiringNumber;
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };
  var sub = function (dict) {
      return dict.sub;
  };                  
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  exports["Ring"] = Ring;
  exports["sub"] = sub;
  exports["ringInt"] = ringInt;
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordNumber = new Ord(function () {
      return Data_Eq.eqNumber;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return y;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord line 128, column 3 - line 131, column 12: " + [ v.constructor.name ]);
          };
      };
  };
  var min = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return x;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return y;
              };
              throw new Error("Failed pattern match at Data.Ord line 119, column 3 - line 122, column 12: " + [ v.constructor.name ]);
          };
      };
  };
  var ordArray = function (dictOrd) {
      return new Ord(function () {
          return Data_Eq.eqArray(dictOrd.Eq0());
      }, (function () {
          var toDelta = function (x) {
              return function (y) {
                  var v = compare(dictOrd)(x)(y);
                  if (v instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if (v instanceof Data_Ordering.LT) {
                      return 1;
                  };
                  if (v instanceof Data_Ordering.GT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.Ord line 66, column 7 - line 71, column 1: " + [ v.constructor.name ]);
              };
          };
          return function (xs) {
              return function (ys) {
                  return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
              };
          };
      })());
  };
  var clamp = function (dictOrd) {
      return function (low) {
          return function (hi) {
              return function (x) {
                  return min(dictOrd)(hi)(max(dictOrd)(low)(x));
              };
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["min"] = min;
  exports["max"] = max;
  exports["clamp"] = clamp;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
  exports["ordArray"] = ordArray;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];                 
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidLeft = function (dictFunctor) {
      return function (f) {
          return function (x) {
              return map(dictFunctor)(Data_Function["const"](x))(f);
          };
      };
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["voidLeft"] = voidLeft;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];                 
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  var applyFirst = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
          };
      };
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applyFirst"] = applyFirst;
  exports["applySecond"] = applySecond;
  exports["applyArray"] = applyArray;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  }; 
  var applicativeArray = new Applicative(function () {
      return Control_Apply.applyArray;
  }, function (x) {
      return [ x ];
  });
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["when"] = when;
  exports["applicativeArray"] = applicativeArray;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
    "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var Discard = function (discard) {
      this.discard = discard;
  };
  var discard = function (dict) {
      return dict.discard;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  var join = function (dictBind) {
      return function (m) {
          return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["Discard"] = Discard;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];                 
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };
  var altArray = new Alt(function () {
      return Data_Functor.functorArray;
  }, Data_Semigroup.append(Data_Semigroup.semigroupArray));
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
  exports["altArray"] = altArray;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Data_Functor = PS["Data.Functor"];                 
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };
  var plusArray = new Plus(function () {
      return Control_Alt.altArray;
  }, [  ]);
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
  exports["plusArray"] = plusArray;
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];                 
  var Alternative = function (Applicative0, Plus1) {
      this.Applicative0 = Applicative0;
      this.Plus1 = Plus1;
  };
  var alternativeArray = new Alternative(function () {
      return Control_Applicative.applicativeArray;
  }, function () {
      return Control_Plus.plusArray;
  });
  exports["Alternative"] = Alternative;
  exports["alternativeArray"] = alternativeArray;
})(PS["Control.Alternative"] = PS["Control.Alternative"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Bounded"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Unit = PS["Data.Unit"];                 
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
      return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var MonadZero = function (Alternative1, Monad0) {
      this.Alternative1 = Alternative1;
      this.Monad0 = Monad0;
  }; 
  var guard = function (dictMonadZero) {
      return function (v) {
          if (v) {
              return Control_Applicative.pure((dictMonadZero.Alternative1()).Applicative0())(Data_Unit.unit);
          };
          if (!v) {
              return Control_Plus.empty((dictMonadZero.Alternative1()).Plus1());
          };
          throw new Error("Failed pattern match at Control.MonadZero line 54, column 1 - line 54, column 52: " + [ v.constructor.name ]);
      };
  };
  exports["MonadZero"] = MonadZero;
  exports["guard"] = guard;
})(PS["Control.MonadZero"] = PS["Control.MonadZero"] || {});
(function(exports) {
    "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];                 
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["CommutativeRing"] = CommutativeRing;
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS["Data.CommutativeRing"] = PS["Data.CommutativeRing"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.EuclideanRing"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];                 
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  var degree = function (dict) {
      return dict.degree;
  };
  exports["EuclideanRing"] = EuclideanRing;
  exports["degree"] = degree;
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");                    
  var monoidArray = new Monoid(function () {
      return Data_Semigroup.semigroupArray;
  }, [  ]);
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var semigroupMaybe = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              if (v instanceof Nothing) {
                  return v1;
              };
              if (v1 instanceof Nothing) {
                  return v;
              };
              if (v instanceof Just && v1 instanceof Just) {
                  return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
              };
              throw new Error("Failed pattern match at Data.Maybe line 175, column 1 - line 175, column 62: " + [ v.constructor.name, v1.constructor.name ]);
          };
      });
  };
  var monoidMaybe = function (dictSemigroup) {
      return new Data_Monoid.Monoid(function () {
          return semigroupMaybe(dictSemigroup);
      }, Nothing.value);
  };
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 218, column 1 - line 218, column 51: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          var $__unused = function (dictPartial1) {
              return function ($dollar35) {
                  return $dollar35;
              };
          };
          return $__unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 269, column 1 - line 269, column 46: " + [ v.constructor.name ]);
          })());
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 67, column 1 - line 67, column 35: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 126, column 1 - line 126, column 33: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var monadMaybe = new Control_Monad.Monad(function () {
      return applicativeMaybe;
  }, function () {
      return bindMaybe;
  });
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  var plusMaybe = new Control_Plus.Plus(function () {
      return altMaybe;
  }, Nothing.value);
  var alternativeMaybe = new Control_Alternative.Alternative(function () {
      return applicativeMaybe;
  }, function () {
      return plusMaybe;
  });
  var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
      return alternativeMaybe;
  }, function () {
      return monadMaybe;
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["plusMaybe"] = plusMaybe;
  exports["alternativeMaybe"] = alternativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["monadMaybe"] = monadMaybe;
  exports["monadZeroMaybe"] = monadZeroMaybe;
  exports["semigroupMaybe"] = semigroupMaybe;
  exports["monoidMaybe"] = monoidMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var Endo = function (x) {
      return x;
  };
  var semigroupEndo = function (dictSemigroupoid) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Control_Semigroupoid.compose(dictSemigroupoid)(v)(v1);
          };
      });
  };
  var monoidEndo = function (dictCategory) {
      return new Data_Monoid.Monoid(function () {
          return semigroupEndo(dictCategory.Semigroupoid0());
      }, Control_Category.identity(dictCategory));
  };
  exports["Endo"] = Endo;
  exports["semigroupEndo"] = semigroupEndo;
  exports["monoidEndo"] = monoidEndo;
})(PS["Data.Monoid.Endo"] = PS["Data.Monoid.Endo"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Semigroup_First = PS["Data.Semigroup.First"];
  var Data_Semigroup_Last = PS["Data.Semigroup.Last"];
  var Prelude = PS["Prelude"];                 
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };                             
  var newtypeEndo = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Endo.Endo);
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["newtypeEndo"] = newtypeEndo;
})(PS["Data.Newtype"] = PS["Data.Newtype"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var First = function (x) {
      return x;
  };
  var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just) {
              return v;
          };
          return v1;
      };
  });                                  
  var newtypeFirst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, First);
  var monoidFirst = new Data_Monoid.Monoid(function () {
      return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["First"] = First;
  exports["newtypeFirst"] = newtypeFirst;
  exports["semigroupFirst"] = semigroupFirst;
  exports["monoidFirst"] = monoidFirst;
})(PS["Data.Maybe.First"] = PS["Data.Maybe.First"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var $$null = function (dictFoldable) {
      return foldr(dictFoldable)(function (v) {
          return function (v1) {
              return false;
          };
      })(true);
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($195) {
                  return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var sequence_ = function (dictApplicative) {
      return function (dictFoldable) {
          return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  };
  var length = function (dictFoldable) {
      return function (dictSemiring) {
          return foldl(dictFoldable)(function (c) {
              return function (v) {
                  return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
              };
          })(Data_Semiring.zero(dictSemiring));
      };
  };
  var product = function (dictFoldable) {
      return function (dictSemiring) {
          return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMapDefaultL = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldl(dictFoldable)(function (acc) {
                  return function (x) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var foldrDefault = function (dictFoldable) {
      return function (c) {
          return function (u) {
              return function (xs) {
                  return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function ($198) {
                      return Data_Monoid_Endo.Endo(c($198));
                  })(xs))(u);
              };
          };
      };
  };
  var fold = function (dictFoldable) {
      return function (dictMonoid) {
          return foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldrDefault"] = foldrDefault;
  exports["foldMapDefaultL"] = foldMapDefaultL;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["fold"] = fold;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["sequence_"] = sequence_;
  exports["intercalate"] = intercalate;
  exports["product"] = product;
  exports["null"] = $$null;
  exports["length"] = length;
  exports["foldableArray"] = foldableArray;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Traversable_Accum = PS["Data.Traversable.Accum"];
  var Data_Traversable_Accum_Internal = PS["Data.Traversable.Accum.Internal"];
  var Prelude = PS["Prelude"];                 
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traversableArray"] = traversableArray;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];                 
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 220, column 1 - line 220, column 64: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["hush"] = hush;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];                 
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];                 
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS["Effect"] = PS["Effect"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
    "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith(dictPartial)(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Ref = PS["Effect.Ref"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  var tailRec = function (f) {
      var go = function ($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
              if (v instanceof Loop) {
                  $copy_v = f(v.value0);
                  return;
              };
              if (v instanceof Done) {
                  $tco_done = true;
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class line 91, column 3 - line 91, column 25: " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return function ($53) {
          return go(f($53));
      };
  }; 
  var monadRecIdentity = new MonadRec(function () {
      return Data_Identity.monadIdentity;
  }, function (f) {
      var runIdentity = function (v) {
          return v;
      };
      return function ($54) {
          return Data_Identity.Identity(tailRec(function ($55) {
              return runIdentity(f($55));
          })($54));
      };
  });
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRec"] = tailRec;
  exports["tailRecM"] = tailRecM;
  exports["monadRecIdentity"] = monadRecIdentity;
})(PS["Control.Monad.Rec.Class"] = PS["Control.Monad.Rec.Class"] || {});
(function(exports) {
    "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };                                                                                             

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.drop = function (n) {
    return function (l) {
      return n < 1 ? l : l.slice(n);
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.pure_ = function (a) {
    return function () {
      return a;
    };
  };

  exports.bind_ = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.run = function (f) {
    return f();
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Control.Monad.ST.Internal"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var functorST = new Data_Functor.Functor($foreign.map_);
  var monadST = new Control_Monad.Monad(function () {
      return applicativeST;
  }, function () {
      return bindST;
  });
  var bindST = new Control_Bind.Bind(function () {
      return applyST;
  }, $foreign.bind_);
  var applyST = new Control_Apply.Apply(function () {
      return functorST;
  }, Control_Monad.ap(monadST));
  var applicativeST = new Control_Applicative.Applicative(function () {
      return applyST;
  }, $foreign.pure_);
  exports["functorST"] = functorST;
  exports["applyST"] = applyST;
  exports["applicativeST"] = applicativeST;
  exports["bindST"] = bindST;
  exports["monadST"] = monadST;
  exports["run"] = $foreign.run;
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function(exports) {
    "use strict";

  exports.peekImpl = function (just) {
    return function (nothing) {
      return function (i) {
        return function (xs) {
          return function () {
            return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
          };
        };
      };
    };
  };

  exports.poke = function (i) {
    return function (a) {
      return function (xs) {
        return function () {
          var ret = i >= 0 && i < xs.length;
          if (ret) xs[i] = a;
          return ret;
        };
      };
    };
  };

  exports.copyImpl = function (xs) {
    return function () {
      return xs.slice();
    };
  };
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Array.ST"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var unsafeFreeze = function ($12) {
      return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)($12);
  };
  var thaw = $foreign.copyImpl;
  var withArray = function (f) {
      return function (xs) {
          return Control_Bind.bind(Control_Monad_ST_Internal.bindST)(thaw(xs))(function (v) {
              return Control_Bind.bind(Control_Monad_ST_Internal.bindST)(f(v))(function (v1) {
                  return unsafeFreeze(v);
              });
          });
      };
  };
  var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["withArray"] = withArray;
  exports["peek"] = peek;
  exports["thaw"] = thaw;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["poke"] = $foreign.poke;
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var TypeEquals = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var to = function (dict) {
      return dict.to;
  };
  var refl = new TypeEquals(function (a) {
      return a;
  }, function (a) {
      return a;
  });
  var from = function (dict) {
      return dict.from;
  };
  exports["TypeEquals"] = TypeEquals;
  exports["to"] = to;
  exports["from"] = from;
  exports["refl"] = refl;
})(PS["Type.Equality"] = PS["Type.Equality"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Distributive = PS["Data.Distributive"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Type_Equality = PS["Type.Equality"];                 
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var snd = function (v) {
      return v.value1;
  };
  var lookup = function (dictFoldable) {
      return function (dictEq) {
          return function (a) {
              return function ($266) {
                  return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                      var $149 = Data_Eq.eq(dictEq)(a)(v.value0);
                      if ($149) {
                          return new Data_Maybe.Just(v.value1);
                      };
                      return Data_Maybe.Nothing.value;
                  })($266));
              };
          };
      };
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new Tuple(m.value0, f(m.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["uncurry"] = uncurry;
  exports["lookup"] = lookup;
  exports["functorTuple"] = functorTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
    "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
    "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Unfoldable1"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  };
  var unfoldr1 = function (dict) {
      return dict.unfoldr1;
  };
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable1"] = Unfoldable1;
  exports["unfoldr1"] = unfoldr1;
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Unfoldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Array"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_NonEmpty_Internal = PS["Data.Array.NonEmpty.Internal"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = PS["Data.Array.ST.Iterator"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x,
              tail: xs
          });
      };
  });
  var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
      return function (xs) {
          return new Data_Maybe.Just(xs);
      };
  });
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var v = comp(x)(y);
                  if (v instanceof Data_Ordering.GT) {
                      return 1;
                  };
                  if (v instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if (v instanceof Data_Ordering.LT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.Array line 702, column 15 - line 707, column 1: " + [ v.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var sort = function (dictOrd) {
      return function (xs) {
          return sortBy(Data_Ord.compare(dictOrd))(xs);
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap(function ($114) {
          return Data_Maybe.maybe([  ])(singleton)(f($114));
      });
  };
  var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["null"] = $$null;
  exports["head"] = head;
  exports["tail"] = tail;
  exports["uncons"] = uncons;
  exports["index"] = index;
  exports["concatMap"] = concatMap;
  exports["mapMaybe"] = mapMaybe;
  exports["catMaybes"] = catMaybes;
  exports["sort"] = sort;
  exports["sortBy"] = sortBy;
  exports["range"] = $foreign.range;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["snoc"] = $foreign.snoc;
  exports["drop"] = $foreign.drop;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
      this.Foldable0 = Foldable0;
      this.foldMapWithIndex = foldMapWithIndex;
      this.foldlWithIndex = foldlWithIndex;
      this.foldrWithIndex = foldrWithIndex;
  };
  var foldrWithIndex = function (dict) {
      return dict.foldrWithIndex;
  };
  var traverseWithIndex_ = function (dictApplicative) {
      return function (dictFoldableWithIndex) {
          return function (f) {
              return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                  return function ($46) {
                      return Control_Apply.applySecond(dictApplicative.Apply0())(f(i)($46));
                  };
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var forWithIndex_ = function (dictApplicative) {
      return function (dictFoldableWithIndex) {
          return Data_Function.flip(traverseWithIndex_(dictApplicative)(dictFoldableWithIndex));
      };
  };
  var foldlWithIndex = function (dict) {
      return dict.foldlWithIndex;
  };
  var foldMapWithIndex = function (dict) {
      return dict.foldMapWithIndex;
  };
  exports["FoldableWithIndex"] = FoldableWithIndex;
  exports["foldrWithIndex"] = foldrWithIndex;
  exports["foldlWithIndex"] = foldlWithIndex;
  exports["foldMapWithIndex"] = foldMapWithIndex;
  exports["traverseWithIndex_"] = traverseWithIndex_;
  exports["forWithIndex_"] = forWithIndex_;
})(PS["Data.FoldableWithIndex"] = PS["Data.FoldableWithIndex"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var oneOf = function (dictAlternative) {
      return function (v) {
          return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Control_Applicative.pure(dictAlternative.Applicative0())(v.value0))(v.value1);
      };
  };
  var functorNonEmpty = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (m) {
              return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
          };
      });
  };
  var foldl1 = function (dictFoldable) {
      return function (f) {
          return function (v) {
              return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
          };
      };
  };
  var foldableNonEmpty = function (dictFoldable) {
      return new Data_Foldable.Foldable(function (dictMonoid) {
          return function (f) {
              return function (v) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
              };
          };
      }, function (f) {
          return function (b) {
              return function (v) {
                  return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
              };
          };
      }, function (f) {
          return function (b) {
              return function (v) {
                  return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
              };
          };
      });
  };
  exports["NonEmpty"] = NonEmpty;
  exports["foldl1"] = foldl1;
  exports["oneOf"] = oneOf;
  exports["functorNonEmpty"] = functorNonEmpty;
  exports["foldableNonEmpty"] = foldableNonEmpty;
})(PS["Data.NonEmpty"] = PS["Data.NonEmpty"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_NonEmpty_Internal = PS["Data.Array.NonEmpty.Internal"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];         
  var toArray = Unsafe_Coerce.unsafeCoerce;
  var adaptMaybe = function (f) {
      return function ($52) {
          return Data_Maybe.fromJust()(f(toArray($52)));
      };
  };                                     
  var tail = adaptMaybe(Data_Array.tail);
  exports["toArray"] = toArray;
  exports["tail"] = tail;
})(PS["Data.Array.NonEmpty"] = PS["Data.Array.NonEmpty"] || {});
(function(exports) {
    "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.pow = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return Math.pow(x,y) | 0;
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Global"];
  exports["infinity"] = $foreign.infinity;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
    "use strict";

  // module Math

  exports.abs = Math.abs;

  exports.floor = Math.floor;

  exports.remainder = function (n) {
    return function (m) {
      return n % m;
    };
  };

  exports.round = Math.round;

  exports.sqrt = Math.sqrt;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Math"];
  exports["abs"] = $foreign.abs;
  exports["floor"] = $foreign.floor;
  exports["round"] = $foreign.round;
  exports["sqrt"] = $foreign.sqrt;
  exports["remainder"] = $foreign.remainder;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Int"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_DivisionRing = PS["Data.DivisionRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Global = PS["Global"];
  var $$Math = PS["Math"];
  var Prelude = PS["Prelude"];      
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int line 66, column 1 - line 66, column 29: " + [ x.constructor.name ]);
  };
  var round = function ($23) {
      return unsafeClamp($$Math.round($23));
  };
  var floor = function ($24) {
      return unsafeClamp($$Math.floor($24));
  };
  exports["fromNumber"] = fromNumber;
  exports["floor"] = floor;
  exports["round"] = round;
  exports["toNumber"] = $foreign.toNumber;
  exports["pow"] = $foreign.pow;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
    "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
    "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Enum"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Enum = function (Ord0, pred, succ) {
      this.Ord0 = Ord0;
      this.pred = pred;
      this.succ = succ;
  };
  var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
      this.Bounded0 = Bounded0;
      this.Enum1 = Enum1;
      this.cardinality = cardinality;
      this.fromEnum = fromEnum;
      this.toEnum = toEnum;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };
  var succ = function (dict) {
      return dict.succ;
  }; 
  var pred = function (dict) {
      return dict.pred;
  };              
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $51 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($51) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum line 158, column 33 - line 160, column 62: " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = new Enum(function () {
      return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var cardinality = function (dict) {
      return dict.cardinality;
  }; 
  var boundedEnumChar = new BoundedEnum(function () {
      return Data_Bounded.boundedChar;
  }, function () {
      return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["Enum"] = Enum;
  exports["succ"] = succ;
  exports["pred"] = pred;
  exports["BoundedEnum"] = BoundedEnum;
  exports["cardinality"] = cardinality;
  exports["toEnum"] = toEnum;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["defaultSucc"] = defaultSucc;
  exports["defaultPred"] = defaultPred;
  exports["enumChar"] = enumChar;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function(exports) {
    "use strict";

  exports.singleton = function (c) {
    return c;
  };

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function(exports) {
    "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.String.CodeUnits"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var uncons = function (v) {
      if (v === "") {
          return Data_Maybe.Nothing.value;
      };
      return new Data_Maybe.Just({
          head: Data_String_Unsafe.charAt(0)(v),
          tail: $foreign.drop(1)(v)
      });
  };                                                                                          
  var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["charAt"] = charAt;
  exports["uncons"] = uncons;
  exports["indexOf"] = indexOf;
  exports["singleton"] = $foreign.singleton;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function(exports) {
    "use strict";

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.String.Common"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Prelude = PS["Prelude"];                 
  var $$null = function (s) {
      return s === "";
  };
  exports["null"] = $$null;
  exports["split"] = $foreign.split;
  exports["joinWith"] = $foreign.joinWith;
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.String.CodePoints"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  }; 
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && isTrail(cu1);
      if ($25) {
          return unsurrogate(cu0)(cu1);
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign._unsafeCodePointAt0(unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign._toCodePointArray(toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($51) {
      return Data_Array.length(toCodePointArray($51));
  };
  var indexOf = function (p) {
      return function (s) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
              return length(Data_String_CodeUnits.take(i)(s));
          })(Data_String_CodeUnits.indexOf(p)(s));
      };
  };
  var fromCharCode = function ($52) {
      return Data_String_CodeUnits.singleton(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar))($52));
  };
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                       
  var singleton = $foreign._singleton(singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign._take(takeFallback);
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  exports["singleton"] = singleton;
  exports["toCodePointArray"] = toCodePointArray;
  exports["uncons"] = uncons;
  exports["length"] = length;
  exports["indexOf"] = indexOf;
  exports["take"] = take;
  exports["drop"] = drop;
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
    "use strict";

  exports["regex'"] = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports._match = function (just) {
    return function (nothing) {
      return function (r) {
        return function (s) {
          var m = s.match(r);
          if (m == null || m.length === 0) {
            return nothing;
          } else {
            for (var i = 0; i < m.length; i++) {
              m[i] = m[i] == null ? nothing : just(m[i]);
            }
            return just(m);
          }
        };
      };
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var Prelude = PS["Prelude"];                 
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var noFlags = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  exports["RegexFlags"] = RegexFlags;
  exports["noFlags"] = noFlags;
})(PS["Data.String.Regex.Flags"] = PS["Data.String.Regex.Flags"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.String.Regex"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_NonEmpty = PS["Data.Array.NonEmpty"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Prelude = PS["Prelude"];                                                    
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          return "";
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          return "";
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          return "";
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          return "";
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          return "";
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  var match = $foreign._match(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["regex"] = regex;
  exports["renderFlags"] = renderFlags;
  exports["match"] = match;
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_NonEmpty = PS["Data.Array.NonEmpty"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_CodePoints = PS["Data.String.CodePoints"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var HSLA = (function () {
      function HSLA(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      HSLA.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new HSLA(value0, value1, value2, value3);
                  };
              };
          };
      };
      return HSLA;
  })();
  var modPos = function (x) {
      return function (y) {
          return $$Math.remainder($$Math.remainder(x)(y) + y)(y);
      };
  };
  var rgba = function (red$prime) {
      return function (green$prime) {
          return function (blue$prime) {
              return function (alpha) {
                  var red = Data_Ord.clamp(Data_Ord.ordInt)(0)(255)(red$prime);
                  var r = Data_Int.toNumber(red) / 255.0;
                  var green = Data_Ord.clamp(Data_Ord.ordInt)(0)(255)(green$prime);
                  var g = Data_Int.toNumber(green) / 255.0;
                  var blue = Data_Ord.clamp(Data_Ord.ordInt)(0)(255)(blue$prime);
                  var maxChroma = Data_Ord.max(Data_Ord.ordInt)(Data_Ord.max(Data_Ord.ordInt)(red)(green))(blue);
                  var minChroma = Data_Ord.min(Data_Ord.ordInt)(Data_Ord.min(Data_Ord.ordInt)(red)(green))(blue);
                  var chroma = maxChroma - minChroma | 0;
                  var chroma$prime = Data_Int.toNumber(chroma) / 255.0;
                  var lightness = Data_Int.toNumber(maxChroma + minChroma | 0) / (255.0 * 2.0);
                  var saturation = (function () {
                      if (chroma === 0) {
                          return 0.0;
                      };
                      if (Data_Boolean.otherwise) {
                          return chroma$prime / (1.0 - $$Math.abs(2.0 * lightness - 1.0));
                      };
                      throw new Error("Failed pattern match at Color line 157, column 5 - line 158, column 75: " + [  ]);
                  })();
                  var b = Data_Int.toNumber(blue) / 255.0;
                  var hue$prime = function (v) {
                      if (v === 0) {
                          return 0.0;
                      };
                      if (maxChroma === red) {
                          return modPos((g - b) / chroma$prime)(6.0);
                      };
                      if (maxChroma === green) {
                          return (b - r) / chroma$prime + 2.0;
                      };
                      if (Data_Boolean.otherwise) {
                          return (r - g) / chroma$prime + 4.0;
                      };
                      throw new Error("Failed pattern match at Color line 148, column 5 - line 149, column 5: " + [ v.constructor.name ]);
                  };
                  var hue = 60.0 * hue$prime(chroma);
                  return new HSLA(hue, saturation, lightness, alpha);
              };
          };
      };
  };
  var rgb = function (r) {
      return function (g) {
          return function (b) {
              return rgba(r)(g)(b)(1.0);
          };
      };
  };
  var hsla = function (h) {
      return function (s) {
          return function (l) {
              return function (a) {
                  var s$prime = Data_Ord.clamp(Data_Ord.ordNumber)(0.0)(1.0)(s);
                  var l$prime = Data_Ord.clamp(Data_Ord.ordNumber)(0.0)(1.0)(l);
                  var a$prime = Data_Ord.clamp(Data_Ord.ordNumber)(0.0)(1.0)(a);
                  return new HSLA(h, s$prime, l$prime, a$prime);
              };
          };
      };
  };
  var hsl = function (h) {
      return function (s) {
          return function (l) {
              return hsla(h)(s)(l)(1.0);
          };
      };
  };
  var white = hsl(0.0)(0.0)(1.0);
  var fromInt = function (m) {
      var n = Data_Ord.clamp(Data_Ord.ordInt)(0)(16777215)(m);
      var r = n >> 16 & 255;
      var g = n >> 8 & 255;
      var b = n & 255;
      return rgb(r)(g)(b);
  };
  var cssStringHSLA = function (v) {
      var toString = function (n) {
          return Data_Show.show(Data_Show.showNumber)(Data_Int.toNumber(Data_Int.round(100.0 * n)) / 100.0);
      };
      var saturation = toString(v.value1 * 100.0) + "%";
      var lightness = toString(v.value2 * 100.0) + "%";
      var hue = toString(v.value0);
      var alpha = Data_Show.show(Data_Show.showNumber)(v.value3);
      var $69 = v.value3 === 1.0;
      if ($69) {
          return "hsl(" + (hue + (", " + (saturation + (", " + (lightness + ")")))));
      };
      return "hsla(" + (hue + (", " + (saturation + (", " + (lightness + (", " + (alpha + ")")))))));
  };
  exports["rgba"] = rgba;
  exports["rgb"] = rgb;
  exports["hsla"] = hsla;
  exports["hsl"] = hsl;
  exports["fromInt"] = fromInt;
  exports["cssStringHSLA"] = cssStringHSLA;
  exports["white"] = white;
})(PS["Color"] = PS["Color"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Maybe = PS["Data.Maybe"];                 
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var to = function (dict) {
      return dict.to;
  }; 
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
})(PS["Data.Generic.Rep"] = PS["Data.Generic.Rep"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];                 
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return function ($9) {
                  return c2d(b2c(a2b($9)));
              };
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  var lcmap = function (dictProfunctor) {
      return function (a2b) {
          return dimap(dictProfunctor)(a2b)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["dimap"] = dimap;
  exports["Profunctor"] = Profunctor;
  exports["lcmap"] = lcmap;
  exports["profunctorFn"] = profunctorFn;
})(PS["Data.Profunctor"] = PS["Data.Profunctor"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var Strong = function (Profunctor0, first, second) {
      this.Profunctor0 = Profunctor0;
      this.first = first;
      this.second = second;
  };
  var strongFn = new Strong(function () {
      return Data_Profunctor.profunctorFn;
  }, function (a2b) {
      return function (v) {
          return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
      };
  }, Data_Functor.map(Data_Tuple.functorTuple));
  var second = function (dict) {
      return dict.second;
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["first"] = first;
  exports["second"] = second;
  exports["Strong"] = Strong;
  exports["strongFn"] = strongFn;
})(PS["Data.Profunctor.Strong"] = PS["Data.Profunctor.Strong"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_String = PS["CSS.String"];
  var Color = PS["Color"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var Prefixed = (function () {
      function Prefixed(value0) {
          this.value0 = value0;
      };
      Prefixed.create = function (value0) {
          return new Prefixed(value0);
      };
      return Prefixed;
  })();
  var Plain = (function () {
      function Plain(value0) {
          this.value0 = value0;
      };
      Plain.create = function (value0) {
          return new Plain(value0);
      };
      return Plain;
  })();
  var Value = function (x) {
      return x;
  };
  var Key = function (x) {
      return x;
  };
  var Val = function (value) {
      this.value = value;
  };
  var value = function (dict) {
      return dict.value;
  };                                                                             
  var semigroupPrefixed = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof Plain && v1 instanceof Plain) {
              return Plain.create(v.value0 + v1.value0);
          };
          if (v instanceof Plain && v1 instanceof Prefixed) {
              return Prefixed.create(Data_Functor.map(Data_Functor.functorArray)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(function (v2) {
                  return v.value0 + v2;
              }))(v1.value0));
          };
          if (v instanceof Prefixed && v1 instanceof Plain) {
              return Prefixed.create(Data_Functor.map(Data_Functor.functorArray)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(function (v2) {
                  return v1.value0 + v2;
              }))(v.value0));
          };
          if (v instanceof Prefixed && v1 instanceof Prefixed) {
              return Prefixed.create(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.value0)(v1.value0));
          };
          throw new Error("Failed pattern match at CSS.Property line 25, column 1 - line 25, column 49: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var semigroupValue = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return Value(Data_Semigroup.append(semigroupPrefixed)(v)(v1));
      };
  });
  var plain = function (v) {
      if (v instanceof Prefixed) {
          return Data_Maybe.fromMaybe("")(Data_Tuple.lookup(Data_Foldable.foldableArray)(Data_Eq.eqString)("")(v.value0));
      };
      if (v instanceof Plain) {
          return v.value0;
      };
      throw new Error("Failed pattern match at CSS.Property line 34, column 1 - line 34, column 28: " + [ v.constructor.name ]);
  };                                     
  var isStringPrefixed = new CSS_String.IsString(Plain.create);
  var isStringValue = new CSS_String.IsString(function ($123) {
      return Value(CSS_String.fromString(isStringPrefixed)($123));
  });
  var valColor = new Val(function ($125) {
      return CSS_String.fromString(isStringValue)(Color.cssStringHSLA($125));
  });
  var valNumber = new Val(function ($128) {
      return CSS_String.fromString(isStringValue)(Data_Show.show(Data_Show.showNumber)($128));
  });
  var valString = new Val(CSS_String.fromString(isStringValue));
  var valTuple = function (dictVal) {
      return function (dictVal1) {
          return new Val(function (v) {
              return Data_Semigroup.append(semigroupValue)(value(dictVal)(v.value0))(Data_Semigroup.append(semigroupValue)(CSS_String.fromString(isStringValue)(" "))(value(dictVal1)(v.value1)));
          });
      };
  };
  var valUnit = new Val(function (u) {
      return CSS_String.fromString(isStringValue)("");
  });
  var isStringKey = new CSS_String.IsString(function ($129) {
      return Key(CSS_String.fromString(isStringPrefixed)($129));
  });
  var cast = function (v) {
      return v;
  };
  exports["value"] = value;
  exports["Prefixed"] = Prefixed;
  exports["Plain"] = Plain;
  exports["plain"] = plain;
  exports["Key"] = Key;
  exports["cast"] = cast;
  exports["Value"] = Value;
  exports["Val"] = Val;
  exports["isStringPrefixed"] = isStringPrefixed;
  exports["semigroupPrefixed"] = semigroupPrefixed;
  exports["isStringKey"] = isStringKey;
  exports["isStringValue"] = isStringValue;
  exports["semigroupValue"] = semigroupValue;
  exports["valString"] = valString;
  exports["valUnit"] = valUnit;
  exports["valTuple"] = valTuple;
  exports["valNumber"] = valNumber;
  exports["valColor"] = valColor;
})(PS["CSS.Property"] = PS["CSS.Property"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];
  var Control_Category = PS["Control.Category"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var browsers = new CSS_Property.Prefixed([ new Data_Tuple.Tuple("-webkit-", ""), new Data_Tuple.Tuple("-moz-", ""), new Data_Tuple.Tuple("-ms-", ""), new Data_Tuple.Tuple("-o-", ""), new Data_Tuple.Tuple("", "") ]);
  exports["browsers"] = browsers;
})(PS["CSS.Common"] = PS["CSS.Common"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Common = PS["CSS.Common"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];                 
  var Size = function (x) {
      return x;
  };
  var vh = function (i) {
      return Data_Semigroup.append(CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("vh"));
  };
  var valSize = new CSS_Property.Val(function (v) {
      return v;
  });
  var px = function (i) {
      return Data_Semigroup.append(CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("px"));
  };
  var pct = function (i) {
      return Data_Semigroup.append(CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("%"));
  };
  var nil = Size(CSS_String.fromString(CSS_Property.isStringValue)("0"));
  exports["Size"] = Size;
  exports["nil"] = nil;
  exports["px"] = px;
  exports["pct"] = pct;
  exports["vh"] = vh;
  exports["valSize"] = valSize;
})(PS["CSS.Size"] = PS["CSS.Size"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_String = PS["CSS.String"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_String = PS["Data.String"];
  var Data_String_CodePoints = PS["Data.String.CodePoints"];
  var Prelude = PS["Prelude"];                 
  var Id = (function () {
      function Id(value0) {
          this.value0 = value0;
      };
      Id.create = function (value0) {
          return new Id(value0);
      };
      return Id;
  })();
  var Class = (function () {
      function Class(value0) {
          this.value0 = value0;
      };
      Class.create = function (value0) {
          return new Class(value0);
      };
      return Class;
  })();
  var Attr = (function () {
      function Attr(value0) {
          this.value0 = value0;
      };
      Attr.create = function (value0) {
          return new Attr(value0);
      };
      return Attr;
  })();
  var AttrVal = (function () {
      function AttrVal(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrVal.create = function (value0) {
          return function (value1) {
              return new AttrVal(value0, value1);
          };
      };
      return AttrVal;
  })();
  var AttrBegins = (function () {
      function AttrBegins(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrBegins.create = function (value0) {
          return function (value1) {
              return new AttrBegins(value0, value1);
          };
      };
      return AttrBegins;
  })();
  var AttrEnds = (function () {
      function AttrEnds(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrEnds.create = function (value0) {
          return function (value1) {
              return new AttrEnds(value0, value1);
          };
      };
      return AttrEnds;
  })();
  var AttrContains = (function () {
      function AttrContains(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrContains.create = function (value0) {
          return function (value1) {
              return new AttrContains(value0, value1);
          };
      };
      return AttrContains;
  })();
  var AttrSpace = (function () {
      function AttrSpace(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrSpace.create = function (value0) {
          return function (value1) {
              return new AttrSpace(value0, value1);
          };
      };
      return AttrSpace;
  })();
  var AttrHyph = (function () {
      function AttrHyph(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrHyph.create = function (value0) {
          return function (value1) {
              return new AttrHyph(value0, value1);
          };
      };
      return AttrHyph;
  })();
  var Pseudo = (function () {
      function Pseudo(value0) {
          this.value0 = value0;
      };
      Pseudo.create = function (value0) {
          return new Pseudo(value0);
      };
      return Pseudo;
  })();
  var PseudoFunc = (function () {
      function PseudoFunc(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      PseudoFunc.create = function (value0) {
          return function (value1) {
              return new PseudoFunc(value0, value1);
          };
      };
      return PseudoFunc;
  })();
  var Star = (function () {
      function Star() {

      };
      Star.value = new Star();
      return Star;
  })();
  var Elem = (function () {
      function Elem(value0) {
          this.value0 = value0;
      };
      Elem.create = function (value0) {
          return new Elem(value0);
      };
      return Elem;
  })();
  var PathChild = (function () {
      function PathChild(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      PathChild.create = function (value0) {
          return function (value1) {
              return new PathChild(value0, value1);
          };
      };
      return PathChild;
  })();
  var Deep = (function () {
      function Deep(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Deep.create = function (value0) {
          return function (value1) {
              return new Deep(value0, value1);
          };
      };
      return Deep;
  })();
  var Adjacent = (function () {
      function Adjacent(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Adjacent.create = function (value0) {
          return function (value1) {
              return new Adjacent(value0, value1);
          };
      };
      return Adjacent;
  })();
  var Combined = (function () {
      function Combined(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Combined.create = function (value0) {
          return function (value1) {
              return new Combined(value0, value1);
          };
      };
      return Combined;
  })();
  var Selector = (function () {
      function Selector(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Selector.create = function (value0) {
          return function (value1) {
              return new Selector(value0, value1);
          };
      };
      return Selector;
  })();
  var $$with = function (v) {
      return function (v1) {
          return new Selector(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.value0)(v1), v.value1);
      };
  };
  var star = new Selector([  ], Star.value);
  var isStringSelector = new CSS_String.IsString(function (s) {
      var v = Data_String_CodePoints.take(1)(s);
      if (v === "#") {
          return new Selector([ Id.create(Data_String_CodePoints.drop(1)(s)) ], Star.value);
      };
      if (v === ".") {
          return new Selector([ Class.create(Data_String_CodePoints.drop(1)(s)) ], Star.value);
      };
      return new Selector([  ], new Elem(s));
  });
  var eqPredicate = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Id && y instanceof Id) {
              return x.value0 === y.value0;
          };
          if (x instanceof Class && y instanceof Class) {
              return x.value0 === y.value0;
          };
          if (x instanceof Attr && y instanceof Attr) {
              return x.value0 === y.value0;
          };
          if (x instanceof AttrVal && y instanceof AttrVal) {
              return x.value0 === y.value0 && x.value1 === y.value1;
          };
          if (x instanceof AttrBegins && y instanceof AttrBegins) {
              return x.value0 === y.value0 && x.value1 === y.value1;
          };
          if (x instanceof AttrEnds && y instanceof AttrEnds) {
              return x.value0 === y.value0 && x.value1 === y.value1;
          };
          if (x instanceof AttrContains && y instanceof AttrContains) {
              return x.value0 === y.value0 && x.value1 === y.value1;
          };
          if (x instanceof AttrSpace && y instanceof AttrSpace) {
              return x.value0 === y.value0 && x.value1 === y.value1;
          };
          if (x instanceof AttrHyph && y instanceof AttrHyph) {
              return x.value0 === y.value0 && x.value1 === y.value1;
          };
          if (x instanceof Pseudo && y instanceof Pseudo) {
              return x.value0 === y.value0;
          };
          if (x instanceof PseudoFunc && y instanceof PseudoFunc) {
              return x.value0 === y.value0 && Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(x.value1)(y.value1);
          };
          return false;
      };
  });
  var ordPredicate = new Data_Ord.Ord(function () {
      return eqPredicate;
  }, function (x) {
      return function (y) {
          if (x instanceof Id && y instanceof Id) {
              return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
          };
          if (x instanceof Id) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Id) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Class && y instanceof Class) {
              return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
          };
          if (x instanceof Class) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Class) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Attr && y instanceof Attr) {
              return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
          };
          if (x instanceof Attr) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Attr) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof AttrVal && y instanceof AttrVal) {
              var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
              if (v instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
          };
          if (x instanceof AttrVal) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof AttrVal) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof AttrBegins && y instanceof AttrBegins) {
              var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
              if (v instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
          };
          if (x instanceof AttrBegins) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof AttrBegins) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof AttrEnds && y instanceof AttrEnds) {
              var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
              if (v instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
          };
          if (x instanceof AttrEnds) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof AttrEnds) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof AttrContains && y instanceof AttrContains) {
              var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
              if (v instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
          };
          if (x instanceof AttrContains) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof AttrContains) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof AttrSpace && y instanceof AttrSpace) {
              var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
              if (v instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
          };
          if (x instanceof AttrSpace) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof AttrSpace) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof AttrHyph && y instanceof AttrHyph) {
              var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
              if (v instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
          };
          if (x instanceof AttrHyph) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof AttrHyph) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Pseudo && y instanceof Pseudo) {
              return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
          };
          if (x instanceof Pseudo) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Pseudo) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof PseudoFunc && y instanceof PseudoFunc) {
              var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
              if (v instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Data_Ord.ordArray(Data_Ord.ordString))(x.value1)(y.value1);
          };
          throw new Error("Failed pattern match at CSS.Selector line 24, column 8 - line 24, column 46: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var element = function (e) {
      return new Selector([  ], new Elem(e));
  };
  var deep = function (a) {
      return function (b) {
          return new Selector([  ], new Deep(a, b));
      };
  };
  var child = function (a) {
      return function (b) {
          return new Selector([  ], new PathChild(a, b));
      };
  };
  exports["Id"] = Id;
  exports["Class"] = Class;
  exports["Attr"] = Attr;
  exports["AttrVal"] = AttrVal;
  exports["AttrBegins"] = AttrBegins;
  exports["AttrEnds"] = AttrEnds;
  exports["AttrContains"] = AttrContains;
  exports["AttrSpace"] = AttrSpace;
  exports["AttrHyph"] = AttrHyph;
  exports["Pseudo"] = Pseudo;
  exports["PseudoFunc"] = PseudoFunc;
  exports["Star"] = Star;
  exports["Elem"] = Elem;
  exports["PathChild"] = PathChild;
  exports["Deep"] = Deep;
  exports["Adjacent"] = Adjacent;
  exports["Combined"] = Combined;
  exports["Selector"] = Selector;
  exports["star"] = star;
  exports["element"] = element;
  exports["deep"] = deep;
  exports["child"] = child;
  exports["with"] = $$with;
  exports["eqPredicate"] = eqPredicate;
  exports["ordPredicate"] = ordPredicate;
  exports["isStringSelector"] = isStringSelector;
})(PS["CSS.Selector"] = PS["CSS.Selector"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var MonadTell = function (Monad0, tell) {
      this.Monad0 = Monad0;
      this.tell = tell;
  };
  var tell = function (dict) {
      return dict.tell;
  };
  exports["tell"] = tell;
  exports["MonadTell"] = MonadTell;
})(PS["Control.Monad.Writer.Class"] = PS["Control.Monad.Writer.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var MonadState = function (Monad0, state) {
      this.Monad0 = Monad0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  exports["state"] = state;
  exports["MonadState"] = MonadState;
})(PS["Control.Monad.State.Class"] = PS["Control.Monad.State.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Effect = PS["Effect"];                 
  var MonadEffect = function (Monad0, liftEffect) {
      this.Monad0 = Monad0;
      this.liftEffect = liftEffect;
  };                                                         
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
})(PS["Effect.Class"] = PS["Effect.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Class = PS["Effect.Class"];
  var Prelude = PS["Prelude"];                 
  var WriterT = function (x) {
      return x;
  };
  var runWriterT = function (v) {
      return v;
  };
  var mapWriterT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorWriterT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
              return new Data_Tuple.Tuple(f(v.value0), v.value1);
          }));
      });
  };
  var applyWriterT = function (dictSemigroup) {
      return function (dictApply) {
          return new Control_Apply.Apply(function () {
              return functorWriterT(dictApply.Functor0());
          }, function (v) {
              return function (v1) {
                  var k = function (v3) {
                      return function (v4) {
                          return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
                      };
                  };
                  return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
              };
          });
      };
  };
  var bindWriterT = function (dictSemigroup) {
      return function (dictBind) {
          return new Control_Bind.Bind(function () {
              return applyWriterT(dictSemigroup)(dictBind.Apply0());
          }, function (v) {
              return function (k) {
                  return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
                      var v2 = k(v1.value0);
                      return Data_Functor.map((dictBind.Apply0()).Functor0())(function (v3) {
                          return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
                      })(v2);
                  }));
              };
          });
      };
  };
  var applicativeWriterT = function (dictMonoid) {
      return function (dictApplicative) {
          return new Control_Applicative.Applicative(function () {
              return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
          }, function (a) {
              return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
          });
      };
  };
  var monadWriterT = function (dictMonoid) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
          }, function () {
              return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
          });
      };
  };
  var monadTellWriterT = function (dictMonoid) {
      return function (dictMonad) {
          return new Control_Monad_Writer_Class.MonadTell(function () {
              return monadWriterT(dictMonoid)(dictMonad);
          }, function ($124) {
              return WriterT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Tuple.Tuple.create(Data_Unit.unit)($124)));
          });
      };
  };
  exports["WriterT"] = WriterT;
  exports["runWriterT"] = runWriterT;
  exports["mapWriterT"] = mapWriterT;
  exports["functorWriterT"] = functorWriterT;
  exports["applyWriterT"] = applyWriterT;
  exports["applicativeWriterT"] = applicativeWriterT;
  exports["bindWriterT"] = bindWriterT;
  exports["monadWriterT"] = monadWriterT;
  exports["monadTellWriterT"] = monadTellWriterT;
})(PS["Control.Monad.Writer.Trans"] = PS["Control.Monad.Writer.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var runWriter = function ($1) {
      return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Writer_Trans.runWriterT($1));
  };
  var execWriter = function (m) {
      return Data_Tuple.snd(runWriter(m));
  };
  exports["runWriter"] = runWriter;
  exports["execWriter"] = execWriter;
})(PS["Control.Monad.Writer"] = PS["Control.Monad.Writer"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Property = PS["CSS.Property"];
  var CSS_Selector = PS["CSS.Selector"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Writer = PS["Control.Monad.Writer"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Self = (function () {
      function Self(value0) {
          this.value0 = value0;
      };
      Self.create = function (value0) {
          return new Self(value0);
      };
      return Self;
  })();
  var Root = (function () {
      function Root(value0) {
          this.value0 = value0;
      };
      Root.create = function (value0) {
          return new Root(value0);
      };
      return Root;
  })();
  var Pop = (function () {
      function Pop(value0) {
          this.value0 = value0;
      };
      Pop.create = function (value0) {
          return new Pop(value0);
      };
      return Pop;
  })();
  var Child = (function () {
      function Child(value0) {
          this.value0 = value0;
      };
      Child.create = function (value0) {
          return new Child(value0);
      };
      return Child;
  })();
  var Sub = (function () {
      function Sub(value0) {
          this.value0 = value0;
      };
      Sub.create = function (value0) {
          return new Sub(value0);
      };
      return Sub;
  })();
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var Nested = (function () {
      function Nested(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Nested.create = function (value0) {
          return function (value1) {
              return new Nested(value0, value1);
          };
      };
      return Nested;
  })();
  var Query = (function () {
      function Query(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Query.create = function (value0) {
          return function (value1) {
              return new Query(value0, value1);
          };
      };
      return Query;
  })();
  var Face = (function () {
      function Face(value0) {
          this.value0 = value0;
      };
      Face.create = function (value0) {
          return new Face(value0);
      };
      return Face;
  })();
  var Keyframe = (function () {
      function Keyframe(value0) {
          this.value0 = value0;
      };
      Keyframe.create = function (value0) {
          return new Keyframe(value0);
      };
      return Keyframe;
  })();
  var Import = (function () {
      function Import(value0) {
          this.value0 = value0;
      };
      Import.create = function (value0) {
          return new Import(value0);
      };
      return Import;
  })();
  var S = function (x) {
      return x;
  };
  var runS = function (v) {
      return Control_Monad_Writer.execWriter(v);
  };
  var rule = function ($403) {
      return S(Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadTellWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))(Data_Array.singleton($403)));
  };
  var select = function (sel) {
      return function (rs) {
          return rule(new Nested(new Sub(sel), runS(rs)));
      };
  };
  var key = function (dictVal) {
      return function (k) {
          return function (v) {
              return rule(new Property(CSS_Property.cast(k), CSS_Property.value(dictVal)(v)));
          };
      };
  };
  var prefixed = function (dictVal) {
      return function (xs) {
          return key(dictVal)(xs);
      };
  }; 
  var functorStyleM = new Data_Functor.Functor(function (f) {
      return function (v) {
          return S(Data_Functor.map(Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity))(f)(v));
      };
  });
  var applyStyleM = new Control_Apply.Apply(function () {
      return functorStyleM;
  }, function (v) {
      return function (v1) {
          return S(Control_Apply.apply(Control_Monad_Writer_Trans.applyWriterT(Data_Semigroup.semigroupArray)(Data_Identity.applyIdentity))(v)(v1));
      };
  });
  var bindStyleM = new Control_Bind.Bind(function () {
      return applyStyleM;
  }, function (v) {
      return function (f) {
          return S(Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(v)(function ($407) {
              return (function (v1) {
                  return v1;
              })(f($407));
          }));
      };
  });
  exports["Self"] = Self;
  exports["Root"] = Root;
  exports["Pop"] = Pop;
  exports["Child"] = Child;
  exports["Sub"] = Sub;
  exports["Property"] = Property;
  exports["Nested"] = Nested;
  exports["Query"] = Query;
  exports["Face"] = Face;
  exports["Keyframe"] = Keyframe;
  exports["Import"] = Import;
  exports["S"] = S;
  exports["runS"] = runS;
  exports["rule"] = rule;
  exports["key"] = key;
  exports["prefixed"] = prefixed;
  exports["select"] = select;
  exports["functorStyleM"] = functorStyleM;
  exports["applyStyleM"] = applyStyleM;
  exports["bindStyleM"] = bindStyleM;
})(PS["CSS.Stylesheet"] = PS["CSS.Stylesheet"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var tuple4 = function (a) {
      return function (b) {
          return function (c) {
              return function (d) {
                  return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, Data_Unit.unit))));
              };
          };
      };
  };
  var tuple3 = function (a) {
      return function (b) {
          return function (c) {
              return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, Data_Unit.unit)));
          };
      };
  };
  exports["tuple3"] = tuple3;
  exports["tuple4"] = tuple4;
})(PS["Data.Tuple.Nested"] = PS["Data.Tuple.Nested"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Color = PS["CSS.Color"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Prelude = PS["Prelude"];                 
  var Stroke = function (x) {
      return x;
  };                                                                           
  var valStroke = new CSS_Property.Val(function (v) {
      return v;
  });
  var solid = Stroke(CSS_String.fromString(CSS_Property.isStringValue)("solid"));
  var borderRadius = function (a) {
      return function (b) {
          return function (c) {
              return function (d) {
                  return CSS_Stylesheet.key(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valUnit)))))(CSS_String.fromString(CSS_Property.isStringKey)("border-radius"))(Data_Tuple_Nested.tuple4(a)(b)(c)(d));
              };
          };
      };
  };                                                                                                                           
  var borderBottom = function (a) {
      return function (b) {
          return function (c) {
              return CSS_Stylesheet.key(CSS_Property.valTuple(valStroke)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valTuple(CSS_Property.valColor)(CSS_Property.valUnit))))(CSS_String.fromString(CSS_Property.isStringKey)("border-bottom"))(Data_Tuple_Nested.tuple3(a)(b)(c));
          };
      };
  };
  var border = function (a) {
      return function (b) {
          return function (c) {
              return CSS_Stylesheet.key(CSS_Property.valTuple(valStroke)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valTuple(CSS_Property.valColor)(CSS_Property.valUnit))))(CSS_String.fromString(CSS_Property.isStringKey)("border"))(Data_Tuple_Nested.tuple3(a)(b)(c));
          };
      };
  };
  exports["Stroke"] = Stroke;
  exports["solid"] = solid;
  exports["border"] = border;
  exports["borderBottom"] = borderBottom;
  exports["borderRadius"] = borderRadius;
  exports["valStroke"] = valStroke;
})(PS["CSS.Border"] = PS["CSS.Border"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Border = PS["CSS.Border"];
  var CSS_Color = PS["CSS.Color"];
  var CSS_Common = PS["CSS.Common"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                                                                                  
  var boxShadow = function (x) {
      return function (y) {
          return function (w) {
              return function (c) {
                  return CSS_Stylesheet.prefixed(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valColor))))(Data_Semigroup.append(CSS_Property.semigroupPrefixed)(CSS_Common.browsers)(CSS_String.fromString(CSS_Property.isStringPrefixed)("box-shadow")))(new Data_Tuple.Tuple(x, new Data_Tuple.Tuple(y, new Data_Tuple.Tuple(w, c))));
              };
          };
      };
  };
  exports["boxShadow"] = boxShadow;
})(PS["CSS.Box"] = PS["CSS.Box"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Box = PS["CSS.Box"];
  var CSS_Color = PS["CSS.Color"];
  var CSS_Common = PS["CSS.Common"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                                                                                 
  var backgroundColor = CSS_Stylesheet.key(CSS_Property.valColor)(CSS_String.fromString(CSS_Property.isStringKey)("background-color"));
  exports["backgroundColor"] = backgroundColor;
})(PS["CSS.Background"] = PS["CSS.Background"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Common = PS["CSS.Common"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Prelude = PS["Prelude"];                 
  var Position = function (x) {
      return x;
  };
  var FloatLeft = (function () {
      function FloatLeft() {

      };
      FloatLeft.value = new FloatLeft();
      return FloatLeft;
  })();
  var FloatRight = (function () {
      function FloatRight() {

      };
      FloatRight.value = new FloatRight();
      return FloatRight;
  })();
  var FloatNone = (function () {
      function FloatNone() {

      };
      FloatNone.value = new FloatNone();
      return FloatNone;
  })();
  var Display = function (x) {
      return x;
  };
  var valPosition = new CSS_Property.Val(function (v) {
      return v;
  });
  var valFloat = new CSS_Property.Val(function (v) {
      if (v instanceof FloatLeft) {
          return CSS_String.fromString(CSS_Property.isStringValue)("left");
      };
      if (v instanceof FloatRight) {
          return CSS_String.fromString(CSS_Property.isStringValue)("right");
      };
      if (v instanceof FloatNone) {
          return CSS_String.fromString(CSS_Property.isStringValue)("none");
      };
      throw new Error("Failed pattern match at CSS.Display line 119, column 1 - line 119, column 33: " + [ v.constructor.name ]);
  });
  var valDisplay = new CSS_Property.Val(function (v) {
      return v;
  });                                                                                    
  var position = CSS_Stylesheet.key(valPosition)(CSS_String.fromString(CSS_Property.isStringKey)("position"));
  var floatRight = FloatRight.value;
  var floatLeft = FloatLeft.value;
  var $$float = CSS_Stylesheet.key(valFloat)(CSS_String.fromString(CSS_Property.isStringKey)("float"));
  var flex = Display(CSS_String.fromString(CSS_Property.isStringValue)("flex"));             
  var display = CSS_Stylesheet.key(valDisplay)(CSS_String.fromString(CSS_Property.isStringKey)("display"));
  var absolute = Position(CSS_String.fromString(CSS_Property.isStringValue)("absolute"));
  exports["Position"] = Position;
  exports["position"] = position;
  exports["absolute"] = absolute;
  exports["Display"] = Display;
  exports["flex"] = flex;
  exports["display"] = display;
  exports["FloatLeft"] = FloatLeft;
  exports["FloatRight"] = FloatRight;
  exports["FloatNone"] = FloatNone;
  exports["floatLeft"] = floatLeft;
  exports["floatRight"] = floatRight;
  exports["float"] = $$float;
  exports["valPosition"] = valPosition;
  exports["valDisplay"] = valDisplay;
  exports["valFloat"] = valFloat;
})(PS["CSS.Display"] = PS["CSS.Display"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Common = PS["CSS.Common"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var AlignSelfValue = function (x) {
      return x;
  };
  var FlexEnd = function (flexEnd) {
      this.flexEnd = flexEnd;
  }; 
  var valAlignSelfValue = new CSS_Property.Val(function (v) {
      return v;
  });                                                                                                                         
  var isStringAlignSelfValue = new CSS_String.IsString(function ($109) {
      return AlignSelfValue(CSS_String.fromString(CSS_Property.isStringValue)($109));
  });                                                                                                          
  var flexEndAlignSelfValue = new FlexEnd(CSS_String.fromString(isStringAlignSelfValue)("flex-end"));      
  var flexEnd = function (dict) {
      return dict.flexEnd;
  };                                                                                                  
  var alignSelf = CSS_Stylesheet.key(valAlignSelfValue)(CSS_String.fromString(CSS_Property.isStringKey)("align-self"));
  exports["flexEnd"] = flexEnd;
  exports["FlexEnd"] = FlexEnd;
  exports["AlignSelfValue"] = AlignSelfValue;
  exports["alignSelf"] = alignSelf;
  exports["isStringAlignSelfValue"] = isStringAlignSelfValue;
  exports["valAlignSelfValue"] = valAlignSelfValue;
  exports["flexEndAlignSelfValue"] = flexEndAlignSelfValue;
})(PS["CSS.Flexbox"] = PS["CSS.Flexbox"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Color = PS["CSS.Color"];
  var CSS_Common = PS["CSS.Common"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];
  var FontWeight = function (x) {
      return x;
  };
  var weight = function (i) {
      return FontWeight(CSS_Property.value(CSS_Property.valNumber)(i));
  }; 
  var valFontWeight = new CSS_Property.Val(function (v) {
      return v;
  });
  var fontWeight = CSS_Stylesheet.key(valFontWeight)(CSS_String.fromString(CSS_Property.isStringKey)("font-weight"));
  var fontSize = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("font-size"));
  var color = CSS_Stylesheet.key(CSS_Property.valColor)(CSS_String.fromString(CSS_Property.isStringKey)("color"));
  exports["color"] = color;
  exports["fontSize"] = fontSize;
  exports["FontWeight"] = FontWeight;
  exports["weight"] = weight;
  exports["fontWeight"] = fontWeight;
  exports["valFontWeight"] = valFontWeight;
})(PS["CSS.Font"] = PS["CSS.Font"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Property = PS["CSS.Property"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Data_Function = PS["Data.Function"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];                 
  var width = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("width"));
  var top = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("top"));
  var right = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("right"));           
  var paddingRight = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("padding-right"));
  var paddingLeft = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("padding-left"));
  var minHeight = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("min-height"));
  var maxWidth = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("max-width"));
  var maxHeight = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("max-height"));
  var marginRight = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("margin-right"));
  var marginLeft = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("margin-left"));
  var marginBottom = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("margin-bottom"));
  var lineHeight = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("line-height"));
  var left = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("left"));
  exports["width"] = width;
  exports["minHeight"] = minHeight;
  exports["maxWidth"] = maxWidth;
  exports["maxHeight"] = maxHeight;
  exports["top"] = top;
  exports["left"] = left;
  exports["right"] = right;
  exports["paddingLeft"] = paddingLeft;
  exports["paddingRight"] = paddingRight;
  exports["marginBottom"] = marginBottom;
  exports["marginLeft"] = marginLeft;
  exports["marginRight"] = marginRight;
  exports["lineHeight"] = lineHeight;
})(PS["CSS.Geometry"] = PS["CSS.Geometry"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];                 
  var Overflow = function (x) {
      return x;
  };                                                                                   
  var valOverflow = new CSS_Property.Val(function (v) {
      return v;
  });
  var scroll = Overflow(CSS_String.fromString(CSS_Property.isStringValue)("scroll"));    
  var overflow = CSS_Stylesheet.key(valOverflow)(CSS_String.fromString(CSS_Property.isStringKey)("overflow"));
  var hidden = Overflow(CSS_String.fromString(CSS_Property.isStringValue)("hidden"));
  exports["Overflow"] = Overflow;
  exports["overflow"] = overflow;
  exports["hidden"] = hidden;
  exports["scroll"] = scroll;
  exports["valOverflow"] = valOverflow;
})(PS["CSS.Overflow"] = PS["CSS.Overflow"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var This = (function () {
      function This(value0) {
          this.value0 = value0;
      };
      This.create = function (value0) {
          return new This(value0);
      };
      return This;
  })();
  var That = (function () {
      function That(value0) {
          this.value0 = value0;
      };
      That.create = function (value0) {
          return new That(value0);
      };
      return That;
  })();
  var Both = (function () {
      function Both(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Both.create = function (value0) {
          return function (value1) {
              return new Both(value0, value1);
          };
      };
      return Both;
  })();
  var theseRight = function (v) {
      if (v instanceof Both) {
          return new Data_Maybe.Just(v.value1);
      };
      if (v instanceof That) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var theseLeft = function (v) {
      if (v instanceof Both) {
          return new Data_Maybe.Just(v.value0);
      };
      if (v instanceof This) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var semigroupThese = function (dictSemigroup) {
      return function (dictSemigroup1) {
          return new Data_Semigroup.Semigroup(function (v) {
              return function (v1) {
                  if (v instanceof This && v1 instanceof This) {
                      return new This(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
                  };
                  if (v instanceof This && v1 instanceof That) {
                      return new Both(v.value0, v1.value0);
                  };
                  if (v instanceof This && v1 instanceof Both) {
                      return new Both(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v1.value1);
                  };
                  if (v instanceof That && v1 instanceof This) {
                      return new Both(v1.value0, v.value0);
                  };
                  if (v instanceof That && v1 instanceof That) {
                      return new That(Data_Semigroup.append(dictSemigroup1)(v.value0)(v1.value0));
                  };
                  if (v instanceof That && v1 instanceof Both) {
                      return new Both(v1.value0, Data_Semigroup.append(dictSemigroup1)(v.value0)(v1.value1));
                  };
                  if (v instanceof Both && v1 instanceof This) {
                      return new Both(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1);
                  };
                  if (v instanceof Both && v1 instanceof That) {
                      return new Both(v.value0, Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value0));
                  };
                  if (v instanceof Both && v1 instanceof Both) {
                      return new Both(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
                  };
                  throw new Error("Failed pattern match at Data.These line 21, column 1 - line 21, column 79: " + [ v.constructor.name, v1.constructor.name ]);
              };
          });
      };
  };
  exports["This"] = This;
  exports["That"] = That;
  exports["Both"] = Both;
  exports["theseLeft"] = theseLeft;
  exports["theseRight"] = theseRight;
  exports["semigroupThese"] = semigroupThese;
})(PS["Data.These"] = PS["Data.These"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Property = PS["CSS.Property"];
  var CSS_Selector = PS["CSS.Selector"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_These = PS["Data.These"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect = PS["Effect"];
  var Effect_Console = PS["Effect.Console"];
  var Prelude = PS["Prelude"];                 
  var Sheet = function (x) {
      return x;
  };
  var Inline = function (x) {
      return x;
  };
  var sepWith = function (s) {
      return function (a) {
          return function (b) {
              return a + (s + b);
          };
      };
  };
  var semigroupInline = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return v + v1;
      };
  });
  var semigroupFile = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return v + v1;
      };
  });
  var properties = function (xs) {
      var sheetRules = Data_Either.either(function (v) {
          return Data_Monoid.mempty(Data_Monoid.monoidString);
      })(function (v) {
          return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ v.value0, ": ", v.value1 ]);
      });
      return Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("; ")(Data_Functor.map(Data_Functor.functorArray)(sheetRules)(xs));
  };
  var predicate = function (v) {
      if (v instanceof CSS_Selector.Id) {
          return "#" + v.value0;
      };
      if (v instanceof CSS_Selector.Class) {
          return "." + v.value0;
      };
      if (v instanceof CSS_Selector.Attr) {
          return "[" + (v.value0 + "]");
      };
      if (v instanceof CSS_Selector.AttrVal) {
          return "[" + (v.value0 + ("='" + (v.value1 + "']")));
      };
      if (v instanceof CSS_Selector.AttrBegins) {
          return "[" + (v.value0 + ("^='" + (v.value1 + "']")));
      };
      if (v instanceof CSS_Selector.AttrEnds) {
          return "[" + (v.value0 + ("$='" + (v.value1 + "']")));
      };
      if (v instanceof CSS_Selector.AttrContains) {
          return "[" + (v.value0 + ("*='" + (v.value1 + "']")));
      };
      if (v instanceof CSS_Selector.AttrSpace) {
          return "[" + (v.value0 + ("~='" + (v.value1 + "']")));
      };
      if (v instanceof CSS_Selector.AttrHyph) {
          return "[" + (v.value0 + ("|='" + (v.value1 + "']")));
      };
      if (v instanceof CSS_Selector.Pseudo) {
          return ":" + v.value0;
      };
      if (v instanceof CSS_Selector.PseudoFunc) {
          return ":" + (v.value0 + ("(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(",")(v.value1) + ")")));
      };
      throw new Error("Failed pattern match at CSS.Render line 177, column 1 - line 177, column 33: " + [ v.constructor.name ]);
  };
  var selector$prime$prime = function (v) {
      return function (v1) {
          if (v.length === 0 && v1 instanceof CSS_Selector.Star) {
              return [ "*" ];
          };
          if (v1 instanceof CSS_Selector.Star) {
              return [ "" ];
          };
          if (v1 instanceof CSS_Selector.Elem) {
              return [ v1.value0 ];
          };
          if (v1 instanceof CSS_Selector.PathChild) {
              return Control_Apply.apply(Control_Apply.applyArray)(Data_Functor.map(Data_Functor.functorArray)(sepWith(" > "))(selector$prime(v1.value0)))(selector$prime(v1.value1));
          };
          if (v1 instanceof CSS_Selector.Deep) {
              return Control_Apply.apply(Control_Apply.applyArray)(Data_Functor.map(Data_Functor.functorArray)(sepWith(" "))(selector$prime(v1.value0)))(selector$prime(v1.value1));
          };
          if (v1 instanceof CSS_Selector.Adjacent) {
              return Control_Apply.apply(Control_Apply.applyArray)(Data_Functor.map(Data_Functor.functorArray)(sepWith(" + "))(selector$prime(v1.value0)))(selector$prime(v1.value1));
          };
          if (v1 instanceof CSS_Selector.Combined) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(selector$prime(v1.value0))(selector$prime(v1.value1));
          };
          throw new Error("Failed pattern match at CSS.Render line 143, column 1 - line 143, column 63: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var selector$prime = function (v) {
      return Data_Functor.map(Data_Functor.functorArray)(function (v1) {
          return v1 + Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(predicate)(Data_Array.sort(CSS_Selector.ordPredicate)(v.value0));
      })(selector$prime$prime(v.value0)(v.value1));
  };
  var selector = function ($175) {
      return Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(selector$prime($175));
  };
  var nel = function (v) {
      if (v.length === 0) {
          return Data_Maybe.Nothing.value;
      };
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
          return new Data_NonEmpty.NonEmpty(v1.head, v1.tail);
      })(Data_Array.uncons(v));
  };                                               
  var merger = function (v) {
      if (v.value0 instanceof CSS_Stylesheet.Child) {
          return Data_Maybe.maybe(v.value0.value0)(function (xs$prime) {
              return CSS_Selector.child(merger(xs$prime))(v.value0.value0);
          })(nel(v.value1));
      };
      if (v.value0 instanceof CSS_Stylesheet.Sub) {
          return Data_Maybe.maybe(v.value0.value0)(function (xs$prime) {
              return CSS_Selector.deep(merger(xs$prime))(v.value0.value0);
          })(nel(v.value1));
      };
      if (v.value0 instanceof CSS_Stylesheet.Root) {
          return Data_Maybe.maybe(v.value0.value0)(function (xs$prime) {
              return CSS_Selector.deep(v.value0.value0)(merger(xs$prime));
          })(nel(v.value1));
      };
      if (v.value0 instanceof CSS_Stylesheet.Pop) {
          return Data_Maybe.maybe(CSS_Selector.element("TODO"))(merger)(nel(Data_Array.drop(v.value0.value0)(Data_Array.cons(v.value0)(v.value1))));
      };
      if (v.value0 instanceof CSS_Stylesheet.Self) {
          return Data_Maybe.maybe(CSS_Selector["with"](CSS_Selector.star)(v.value0.value0))(function (xs$prime) {
              return CSS_Selector["with"](merger(xs$prime))(v.value0.value0);
          })(nel(v.value1));
      };
      throw new Error("Failed pattern match at CSS.Render line 170, column 3 - line 175, column 106: " + [ v.value0.constructor.name ]);
  };
  var mediaType = function (v) {
      return CSS_Property.plain(v);
  };
  var imp = function (t) {
      return Data_Maybe.Just.create(Data_These.That.create(Sheet(CSS_String.fromString(CSS_String.isStringString)("@import url(" + (t + ");\x0a")))));
  };
  var getSheet = function (v) {
      return v;
  };
  var renderedSheet = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(v)(function ($176) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(getSheet)(Data_These.theseRight($176));
      });
  };
  var getInline = function (v) {
      return v;
  };
  var renderedInline = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(v)(function ($177) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(getInline)(Data_These.theseLeft($177));
      });
  }; 
  var feature = function (v) {
      return Data_Maybe.maybe(v.value0)(function (v1) {
          return "(" + (v.value0 + (": " + (CSS_Property.plain(v1) + ")")));
      })(v.value1);
  };
  var mediaQuery = function (v) {
      return "@media " + (mediaType(v.value1) + Data_NonEmpty.foldl1(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupString))(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_Functor.functorArray))(function ($178) {
          return (function (v1) {
              return " and " + v1;
          })(feature($178));
      })(v.value2)));
  }; 
  var collect$prime = function (v) {
      return function (v1) {
          if (v instanceof CSS_Property.Plain && v1 instanceof CSS_Property.Plain) {
              return [ new Data_Either.Right(new Data_Tuple.Tuple(v.value0, v1.value0)) ];
          };
          if (v instanceof CSS_Property.Prefixed && v1 instanceof CSS_Property.Plain) {
              return Data_Functor.map(Data_Functor.functorArray)(function (v3) {
                  return Data_Either.Right.create(new Data_Tuple.Tuple(v3.value0 + v3.value1, v1.value0));
              })(v.value0);
          };
          if (v instanceof CSS_Property.Plain && v1 instanceof CSS_Property.Prefixed) {
              return Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                  return Data_Either.Right.create(new Data_Tuple.Tuple(v.value0, v2.value0 + v2.value1));
              })(v1.value0);
          };
          if (v instanceof CSS_Property.Prefixed && v1 instanceof CSS_Property.Prefixed) {
              return Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                  return Data_Maybe.maybe(new Data_Either.Left(v2.value0 + v2.value1))(function ($179) {
                      return Data_Either.Right.create(Data_Tuple.Tuple.create(v2.value0 + v2.value1)((function (v3) {
                          return v2.value0 + v3;
                      })($179)));
                  })(Data_Tuple.lookup(Data_Foldable.foldableArray)(Data_Eq.eqString)(v2.value0)(v1.value0));
              })(v.value0);
          };
          throw new Error("Failed pattern match at CSS.Render line 158, column 1 - line 158, column 80: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var collect = function (v) {
      return collect$prime(v.value0)(v.value1);
  };
  var rule$prime = function (sel) {
      return function (props) {
          var p = Control_Bind.bind(Control_Bind.bindArray)(props)(collect);
          var q = Data_Functor.map(Data_Maybe.functorMaybe)(function ($180) {
              return Data_These.This.create(Inline(properties(Data_NonEmpty.oneOf(Control_Alternative.alternativeArray)($180))));
          })(nel(p));
          var o = function (sel$prime) {
              return Data_Maybe.Just.create(Data_These.That.create(Sheet(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")([ selector(merger(sel$prime)), "{", properties(p), "}\x0a" ]))));
          };
          return Data_Maybe.maybe(q)(o)(nel(sel));
      };
  };
  var rules = function (sel) {
      return function (rs) {
          var queries = function (v) {
              if (v instanceof CSS_Stylesheet.Query) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, v.value1));
              };
              return Data_Maybe.Nothing.value;
          };
          var queryRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(Data_Tuple.uncurry(Data_Function.flip(query$prime)(sel)))(Data_Array.mapMaybe(queries)(rs));
          var property = function (v) {
              if (v instanceof CSS_Stylesheet.Property) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, v.value1));
              };
              return Data_Maybe.Nothing.value;
          };
          var topRules = (function () {
              var rs$prime = Data_Array.mapMaybe(property)(rs);
              var $162 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_Array["null"])(rs$prime);
              if ($162) {
                  return rule$prime(sel)(rs$prime);
              };
              return Data_Maybe.Nothing.value;
          })();
          var nestedRules = function (a) {
              return rules(Data_Array.cons(a)(sel));
          };
          var nested = function (v) {
              if (v instanceof CSS_Stylesheet.Nested) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, v.value1));
              };
              return Data_Maybe.Nothing.value;
          };
          var nestedSheets = Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.uncurry(nestedRules))(Data_Array.mapMaybe(nested)(rs)));
          var kframes = function (v) {
              if (v instanceof CSS_Stylesheet.Keyframe) {
                  return new Data_Maybe.Just(v.value0);
              };
              return Data_Maybe.Nothing.value;
          };
          var keyframeRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(kframe)(Data_Array.mapMaybe(kframes)(rs));
          var imports = function (v) {
              if (v instanceof CSS_Stylesheet.Import) {
                  return new Data_Maybe.Just(v.value0);
              };
              return Data_Maybe.Nothing.value;
          };
          var importRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(imp)(Data_Array.mapMaybe(imports)(rs));
          var faces = function (v) {
              if (v instanceof CSS_Stylesheet.Face) {
                  return new Data_Maybe.Just(v.value0);
              };
              return Data_Maybe.Nothing.value;
          };
          var faceRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(face)(Data_Array.mapMaybe(faces)(rs));
          return Data_Semigroup.append(Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(topRules)(Data_Semigroup.append(Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(importRules)(Data_Semigroup.append(Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(keyframeRules)(Data_Semigroup.append(Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(faceRules)(Data_Semigroup.append(Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(nestedSheets)(queryRules)))));
      };
  };
  var query$prime = function (q) {
      return function (sel) {
          return function (rs) {
              return Data_Maybe.Just.create(Data_These.That.create(Sheet(mediaQuery(q) + (" { " + (Data_Maybe.fromMaybe("")(renderedSheet(rules(sel)(rs))) + " }\x0a")))));
          };
      };
  };
  var kframe = function (v) {
      var renderContent = " " + (v.value0 + (" { " + (Data_Foldable.intercalate(Data_NonEmpty.foldableNonEmpty(Data_Foldable.foldableArray))(Data_Monoid.monoidString)(" ")(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_Functor.functorArray))(Data_Tuple.uncurry(frame))(v.value1)) + " }\x0a")));
      var keywords = [ "@keyframes", "@-webkit-keyframes", "@-moz-keyframes", "@-o-keyframes" ];
      var allKeywordsWithContent = Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Data_Functor.map(Data_Functor.functorArray)(function (v1) {
          return v1 + renderContent;
      })(keywords));
      return Data_Maybe.Just.create(Data_These.That.create(Sheet(allKeywordsWithContent)));
  };
  var frame = function (p) {
      return function (rs) {
          var x = Data_Maybe.fromMaybe("")(renderedInline(rules([  ])(rs)));
          return Data_Show.show(Data_Show.showNumber)(p) + ("% " + ("{ " + (x + " }")));
      };
  };
  var face = function (rs) {
      return Data_Maybe.Just.create(Data_These.That.create(Sheet("@font-face { " + (Data_Maybe.fromMaybe("")(renderedInline(rules([  ])(rs))) + " }\x0a"))));
  };
  var render = function ($181) {
      return rules([  ])(CSS_Stylesheet.runS($181));
  };
  exports["Inline"] = Inline;
  exports["getInline"] = getInline;
  exports["Sheet"] = Sheet;
  exports["getSheet"] = getSheet;
  exports["renderedInline"] = renderedInline;
  exports["renderedSheet"] = renderedSheet;
  exports["render"] = render;
  exports["kframe"] = kframe;
  exports["frame"] = frame;
  exports["mediaQuery"] = mediaQuery;
  exports["mediaType"] = mediaType;
  exports["feature"] = feature;
  exports["face"] = face;
  exports["rules"] = rules;
  exports["imp"] = imp;
  exports["selector"] = selector;
  exports["sepWith"] = sepWith;
  exports["collect"] = collect;
  exports["properties"] = properties;
  exports["merger"] = merger;
  exports["predicate"] = predicate;
  exports["nel"] = nel;
  exports["semigroupInline"] = semigroupInline;
  exports["semigroupFile"] = semigroupFile;
})(PS["CSS.Render"] = PS["CSS.Render"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Common = PS["CSS.Common"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Prelude = PS["Prelude"];                 
  var Transformation = function (x) {
      return x;
  };
  var OffsetLength = (function () {
      function OffsetLength(value0) {
          this.value0 = value0;
      };
      OffsetLength.create = function (value0) {
          return new OffsetLength(value0);
      };
      return OffsetLength;
  })();
  var OffsetTop = (function () {
      function OffsetTop() {

      };
      OffsetTop.value = new OffsetTop();
      return OffsetTop;
  })();
  var OffsetBottom = (function () {
      function OffsetBottom() {

      };
      OffsetBottom.value = new OffsetBottom();
      return OffsetBottom;
  })();
  var OffsetLeft = (function () {
      function OffsetLeft() {

      };
      OffsetLeft.value = new OffsetLeft();
      return OffsetLeft;
  })();
  var OffsetRight = (function () {
      function OffsetRight() {

      };
      OffsetRight.value = new OffsetRight();
      return OffsetRight;
  })();
  var OffsetCenter = (function () {
      function OffsetCenter() {

      };
      OffsetCenter.value = new OffsetCenter();
      return OffsetCenter;
  })();
  var TransformOrigin = (function () {
      function TransformOrigin(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TransformOrigin.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TransformOrigin(value0, value1, value2);
              };
          };
      };
      return TransformOrigin;
  })();
  var Initial = (function () {
      function Initial() {

      };
      Initial.value = new Initial();
      return Initial;
  })();
  var Inherit = (function () {
      function Inherit() {

      };
      Inherit.value = new Inherit();
      return Inherit;
  })();
  var Unset = (function () {
      function Unset() {

      };
      Unset.value = new Unset();
      return Unset;
  })();
  var valTransformation = new CSS_Property.Val(function (v) {
      return v;
  });
  var valTransformOriginOffset = new CSS_Property.Val(function (v) {
      if (v instanceof OffsetLength) {
          return CSS_Property.value(CSS_Size.valSize)(v.value0);
      };
      if (v instanceof OffsetTop) {
          return CSS_String.fromString(CSS_Property.isStringValue)("top");
      };
      if (v instanceof OffsetBottom) {
          return CSS_String.fromString(CSS_Property.isStringValue)("bottom");
      };
      if (v instanceof OffsetLeft) {
          return CSS_String.fromString(CSS_Property.isStringValue)("left");
      };
      if (v instanceof OffsetRight) {
          return CSS_String.fromString(CSS_Property.isStringValue)("right");
      };
      if (v instanceof OffsetCenter) {
          return CSS_String.fromString(CSS_Property.isStringValue)("center");
      };
      throw new Error("Failed pattern match at CSS.Transform line 47, column 1 - line 47, column 67: " + [ v.constructor.name ]);
  });
  var valTransformOrigin = new CSS_Property.Val(function (v) {
      if (v instanceof TransformOrigin) {
          return CSS_Property.value(CSS_Property.valTuple(valTransformOriginOffset)(CSS_Property.valTuple(valTransformOriginOffset)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valUnit))))(Data_Tuple_Nested.tuple3(v.value0)(v.value1)(v.value2));
      };
      if (v instanceof Initial) {
          return CSS_String.fromString(CSS_Property.isStringValue)("initial");
      };
      if (v instanceof Inherit) {
          return CSS_String.fromString(CSS_Property.isStringValue)("inherit");
      };
      if (v instanceof Unset) {
          return CSS_String.fromString(CSS_Property.isStringValue)("unset");
      };
      throw new Error("Failed pattern match at CSS.Transform line 55, column 1 - line 55, column 55: " + [ v.constructor.name ]);
  });
  var transformOrigin = function (x) {
      return function (y) {
          return function (z) {
              return CSS_Stylesheet.key(valTransformOrigin)(CSS_String.fromString(CSS_Property.isStringKey)("transform-origin"))(new TransformOrigin(x, y, z));
          };
      };
  };
  var transform = CSS_Stylesheet.key(valTransformation)(CSS_String.fromString(CSS_Property.isStringKey)("transform"));
  var offset = OffsetLength.create;
  exports["Transformation"] = Transformation;
  exports["transform"] = transform;
  exports["TransformOrigin"] = TransformOrigin;
  exports["Initial"] = Initial;
  exports["Inherit"] = Inherit;
  exports["Unset"] = Unset;
  exports["OffsetLength"] = OffsetLength;
  exports["OffsetTop"] = OffsetTop;
  exports["OffsetBottom"] = OffsetBottom;
  exports["OffsetLeft"] = OffsetLeft;
  exports["OffsetRight"] = OffsetRight;
  exports["OffsetCenter"] = OffsetCenter;
  exports["offset"] = offset;
  exports["transformOrigin"] = transformOrigin;
  exports["valTransformation"] = valTransformation;
  exports["valTransformOriginOffset"] = valTransformOriginOffset;
  exports["valTransformOrigin"] = valTransformOrigin;
})(PS["CSS.Transform"] = PS["CSS.Transform"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($174) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($174));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types line 81, column 12 - line 83, column 30: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          return function ($175) {
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($175));
          };
      };
  });                                                                     
  var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
      return foldableList;
  }, function (dictMonoid) {
      return function (f) {
          return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
              return function (acc) {
                  return function ($176) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)($176));
                  };
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      return function (acc) {
          return function ($177) {
              return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v) {
                  return function (a) {
                      return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
                  };
              })(new Data_Tuple.Tuple(0, acc))($177));
          };
      };
  }, function (f) {
      return function (b) {
          return function (xs) {
              var v = (function () {
                  var rev = Data_Foldable.foldl(foldableList)(function (v1) {
                      return function (a) {
                          return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));
                      };
                  });
                  return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);
              })();
              return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
                  return function (a) {
                      return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
                  };
              })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
          };
      };
  });
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var monoidList = new Data_Monoid.Monoid(function () {
      return semigroupList;
  }, Nil.value);
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 127, column 1 - line 127, column 33: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  var alternativeList = new Control_Alternative.Alternative(function () {
      return applicativeList;
  }, function () {
      return plusList;
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["semigroupList"] = semigroupList;
  exports["monoidList"] = monoidList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["foldableWithIndexList"] = foldableWithIndexList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
  exports["alternativeList"] = alternativeList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var updateAt = function (v) {
      return function (v1) {
          return function (v2) {
              if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                  return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
              };
              if (v2 instanceof Data_List_Types.Cons) {
                  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                      return new Data_List_Types.Cons(v2.value0, v3);
                  })(updateAt(v - 1 | 0)(v1)(v2.value1));
              };
              return Data_Maybe.Nothing.value;
          };
      };
  };                                                                             
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List line 259, column 1 - line 259, column 66: " + [ v.constructor.name ]);
  };
  var snoc = function (xs) {
      return function (x) {
          return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);
      };
  };
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List line 368, column 3 - line 368, column 19: " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var take = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              return function ($copy_v1) {
                  var $tco_var_acc = $copy_acc;
                  var $tco_var_v = $copy_v;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(acc, v, v1) {
                      if (v < 1) {
                          $tco_done = true;
                          return reverse(acc);
                      };
                      if (v1 instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return reverse(acc);
                      };
                      if (v1 instanceof Data_List_Types.Cons) {
                          $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                          $tco_var_v = v - 1 | 0;
                          $copy_v1 = v1.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List line 520, column 3 - line 520, column 35: " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
                  };
                  return $tco_result;
              };
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var takeWhile = function (p) {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  $tco_done = true;
                  return reverse(acc);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  };
  var unsnoc = function (lst) {
      var go = function ($copy_v) {
          return function ($copy_acc) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, acc) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return new Data_Maybe.Just({
                          revInit: acc,
                          last: v.value0
                      });
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_v = v.value1;
                      $copy_acc = new Data_List_Types.Cons(v.value0, acc);
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List line 270, column 3 - line 270, column 23: " + [ v.constructor.name, acc.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_v, $copy_acc);
              };
              return $tco_result;
          };
      };
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
          return {
              init: reverse(h.revInit),
              last: h.last
          };
      })(go(lst)(Data_List_Types.Nil.value));
  };
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };                                                                                          
  var mapMaybe = function (f) {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return reverse(acc);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      var v1 = f(v.value0);
                      if (v1 instanceof Data_Maybe.Nothing) {
                          $tco_var_acc = acc;
                          $copy_v = v.value1;
                          return;
                      };
                      if (v1 instanceof Data_Maybe.Just) {
                          $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                          $copy_v = v.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List line 419, column 5 - line 421, column 32: " + [ v1.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.List line 417, column 3 - line 417, column 27: " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  };
  var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
      return function (v) {
          return acc + 1 | 0;
      };
  })(0);
  var last = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return new Data_Maybe.Just(v.value0);
          };
          if (v instanceof Data_List_Types.Cons) {
              $copy_v = v.value1;
              return;
          };
          $tco_done = true;
          return Data_Maybe.Nothing.value;
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var index = function ($copy_v) {
      return function ($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v, v1) {
              if (v instanceof Data_List_Types.Nil) {
                  $tco_done = true;
                  return Data_Maybe.Nothing.value;
              };
              if (v instanceof Data_List_Types.Cons && v1 === 0) {
                  $tco_done = true;
                  return new Data_Maybe.Just(v.value0);
              };
              if (v instanceof Data_List_Types.Cons) {
                  $tco_var_v = v.value1;
                  $copy_v1 = v1 - 1 | 0;
                  return;
              };
              throw new Error("Failed pattern match at Data.List line 281, column 1 - line 281, column 44: " + [ v.constructor.name, v1.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $copy_v1);
          };
          return $tco_result;
      };
  };
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List line 230, column 1 - line 230, column 22: " + [ v.constructor.name ]);
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  var drop = function ($copy_v) {
      return function ($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v, v1) {
              if (v < 1) {
                  $tco_done = true;
                  return v1;
              };
              if (v1 instanceof Data_List_Types.Nil) {
                  $tco_done = true;
                  return Data_List_Types.Nil.value;
              };
              if (v1 instanceof Data_List_Types.Cons) {
                  $tco_var_v = v - 1 | 0;
                  $copy_v1 = v1.value1;
                  return;
              };
              throw new Error("Failed pattern match at Data.List line 543, column 1 - line 543, column 42: " + [ v.constructor.name, v1.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $copy_v1);
          };
          return $tco_result;
      };
  };
  var deleteAt = function (v) {
      return function (v1) {
          if (v === 0 && v1 instanceof Data_List_Types.Cons) {
              return new Data_Maybe.Just(v1.value1);
          };
          if (v1 instanceof Data_List_Types.Cons) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                  return new Data_List_Types.Cons(v1.value0, v2);
              })(deleteAt(v - 1 | 0)(v1.value1));
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["null"] = $$null;
  exports["length"] = length;
  exports["snoc"] = snoc;
  exports["head"] = head;
  exports["last"] = last;
  exports["uncons"] = uncons;
  exports["unsnoc"] = unsnoc;
  exports["index"] = index;
  exports["deleteAt"] = deleteAt;
  exports["updateAt"] = updateAt;
  exports["reverse"] = reverse;
  exports["mapMaybe"] = mapMaybe;
  exports["catMaybes"] = catMaybes;
  exports["take"] = take;
  exports["takeWhile"] = takeWhile;
  exports["drop"] = drop;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var CatQueue = (function () {
      function CatQueue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatQueue.create = function (value0) {
          return function (value1) {
              return new CatQueue(value0, value1);
          };
      };
      return CatQueue;
  })();
  var uncons = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_List_Types.Nil) {
              $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
              return;
          };
          if (v.value0 instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
          };
          throw new Error("Failed pattern match at Data.CatQueue line 83, column 1 - line 83, column 63: " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var snoc = function (v) {
      return function (a) {
          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
      };
  };
  var $$null = function (v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };                                                                                                
  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["CatQueue"] = CatQueue;
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS["Data.CatQueue"] = PS["Data.CatQueue"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_CatQueue = PS["Data.CatQueue"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var CatNil = (function () {
      function CatNil() {

      };
      CatNil.value = new CatNil();
      return CatNil;
  })();
  var CatCons = (function () {
      function CatCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatCons.create = function (value0) {
          return function (value1) {
              return new CatCons(value0, value1);
          };
      };
      return CatCons;
  })();
  var link = function (v) {
      return function (cat) {
          if (v instanceof CatNil) {
              return cat;
          };
          if (v instanceof CatCons) {
              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(cat));
          };
          throw new Error("Failed pattern match at Data.CatList line 111, column 1 - line 111, column 54: " + [ v.constructor.name, cat.constructor.name ]);
      };
  };
  var foldr = function (k) {
      return function (b) {
          return function (q) {
              var foldl = function ($copy_v) {
                  return function ($copy_c) {
                      return function ($copy_v1) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_c = $copy_c;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, c, v1) {
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return c;
                              };
                              if (v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v;
                                  $tco_var_c = v(c)(v1.value0);
                                  $copy_v1 = v1.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.CatList line 126, column 3 - line 126, column 59: " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                          };
                          return $tco_result;
                      };
                  };
              };
              var go = function ($copy_xs) {
                  return function ($copy_ys) {
                      var $tco_var_xs = $copy_xs;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(xs, ys) {
                          var v = Data_CatQueue.uncons(xs);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return foldl(function (x) {
                                  return function (i) {
                                      return i(x);
                                  };
                              })(b)(ys);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_xs = v.value0.value1;
                              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.CatList line 122, column 14 - line 124, column 67: " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                      };
                      return $tco_result;
                  };
              };
              return go(q)(Data_List_Types.Nil.value);
          };
      };
  };
  var uncons = function (v) {
      if (v instanceof CatNil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof CatCons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
              var $45 = Data_CatQueue["null"](v.value1);
              if ($45) {
                  return CatNil.value;
              };
              return foldr(link)(CatNil.value)(v.value1);
          })()));
      };
      throw new Error("Failed pattern match at Data.CatList line 102, column 1 - line 102, column 61: " + [ v.constructor.name ]);
  };
  var foldableCatList = new Data_Foldable.Foldable(function (dictMonoid) {
      return Data_Foldable.foldMapDefaultL(foldableCatList)(dictMonoid);
  }, function (f) {
      var go = function ($copy_acc) {
          return function ($copy_q) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, q) {
                  var v = uncons(q);
                  if (v instanceof Data_Maybe.Just) {
                      $tco_var_acc = f(acc)(v.value0.value0);
                      $copy_q = v.value0.value1;
                      return;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      $tco_done = true;
                      return acc;
                  };
                  throw new Error("Failed pattern match at Data.CatList line 158, column 16 - line 160, column 22: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_q);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (s) {
          return function (l) {
              return Data_Foldable.foldrDefault(foldableCatList)(f)(s)(l);
          };
      };
  });                                                                           
  var foldMap = function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof CatNil) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof CatCons) {
                  var d = (function () {
                      var $54 = Data_CatQueue["null"](v.value1);
                      if ($54) {
                          return CatNil.value;
                      };
                      return foldr(link)(CatNil.value)(v.value1);
                  })();
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(foldMap(dictMonoid)(f)(d));
              };
              throw new Error("Failed pattern match at Data.CatList line 136, column 1 - line 136, column 62: " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  };
  var empty = CatNil.value;
  var append = function (v) {
      return function (v1) {
          if (v1 instanceof CatNil) {
              return v;
          };
          if (v instanceof CatNil) {
              return v1;
          };
          return link(v)(v1);
      };
  };
  var cons = function (a) {
      return function (cat) {
          return append(new CatCons(a, Data_CatQueue.empty))(cat);
      };
  };
  var functorCatList = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof CatNil) {
              return CatNil.value;
          };
          if (v1 instanceof CatCons) {
              var d = (function () {
                  var $61 = Data_CatQueue["null"](v1.value1);
                  if ($61) {
                      return CatNil.value;
                  };
                  return foldr(link)(CatNil.value)(v1.value1);
              })();
              return cons(v(v1.value0))(Data_Functor.map(functorCatList)(v)(d));
          };
          throw new Error("Failed pattern match at Data.CatList line 186, column 1 - line 186, column 43: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var singleton = function (a) {
      return cons(a)(CatNil.value);
  }; 
  var semigroupCatList = new Data_Semigroup.Semigroup(append);
  var monoidCatList = new Data_Monoid.Monoid(function () {
      return semigroupCatList;
  }, CatNil.value);
  var monadCatList = new Control_Monad.Monad(function () {
      return applicativeCatList;
  }, function () {
      return bindCatList;
  });
  var bindCatList = new Control_Bind.Bind(function () {
      return applyCatList;
  }, Data_Function.flip(foldMap(monoidCatList)));
  var applyCatList = new Control_Apply.Apply(function () {
      return functorCatList;
  }, Control_Monad.ap(monadCatList));
  var applicativeCatList = new Control_Applicative.Applicative(function () {
      return applyCatList;
  }, singleton);
  var snoc = function (cat) {
      return function (a) {
          return append(cat)(new CatCons(a, Data_CatQueue.empty));
      };
  };
  exports["CatNil"] = CatNil;
  exports["CatCons"] = CatCons;
  exports["empty"] = empty;
  exports["singleton"] = singleton;
  exports["append"] = append;
  exports["cons"] = cons;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
  exports["monoidCatList"] = monoidCatList;
  exports["foldableCatList"] = foldableCatList;
  exports["functorCatList"] = functorCatList;
  exports["applyCatList"] = applyCatList;
  exports["applicativeCatList"] = applicativeCatList;
  exports["bindCatList"] = bindCatList;
  exports["monadCatList"] = monadCatList;
})(PS["Data.CatList"] = PS["Data.CatList"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_CatList = PS["Data.CatList"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Free = (function () {
      function Free(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Free.create = function (value0) {
          return function (value1) {
              return new Free(value0, value1);
          };
      };
      return Free;
  })();
  var Return = (function () {
      function Return(value0) {
          this.value0 = value0;
      };
      Return.create = function (value0) {
          return new Return(value0);
      };
      return Return;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var toView = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          var runExpF = function (v2) {
              return v2;
          };
          var concatF = function (v2) {
              return function (r) {
                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
              };
          };
          if (v.value0 instanceof Return) {
              var v2 = Data_CatList.uncons(v.value1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return new Return(v.value0.value0);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                  return;
              };
              throw new Error("Failed pattern match at Control.Monad.Free line 220, column 7 - line 224, column 64: " + [ v2.constructor.name ]);
          };
          if (v.value0 instanceof Bind) {
              $tco_done = true;
              return new Bind(v.value0.value0, function (a) {
                  return concatF(v.value0.value1(a))(v.value1);
              });
          };
          throw new Error("Failed pattern match at Control.Monad.Free line 218, column 3 - line 226, column 56: " + [ v.value0.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var fromView = function (f) {
      return new Free(f, Data_CatList.empty);
  };
  var freeMonad = new Control_Monad.Monad(function () {
      return freeApplicative;
  }, function () {
      return freeBind;
  });
  var freeFunctor = new Data_Functor.Functor(function (k) {
      return function (f) {
          return Control_Bind.bindFlipped(freeBind)(function ($118) {
              return Control_Applicative.pure(freeApplicative)(k($118));
          })(f);
      };
  });
  var freeBind = new Control_Bind.Bind(function () {
      return freeApply;
  }, function (v) {
      return function (k) {
          return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
      };
  });
  var freeApply = new Control_Apply.Apply(function () {
      return freeFunctor;
  }, Control_Monad.ap(freeMonad));
  var freeApplicative = new Control_Applicative.Applicative(function () {
      return freeApply;
  }, function ($119) {
      return fromView(Return.create($119));
  });
  var liftF = function (f) {
      return fromView(new Bind(f, function ($120) {
          return Control_Applicative.pure(freeApplicative)($120);
      }));
  }; 
  var substFree = function (k) {
      var go = function (f) {
          var v = toView(f);
          if (v instanceof Return) {
              return Control_Applicative.pure(freeApplicative)(v.value0);
          };
          if (v instanceof Bind) {
              return Control_Bind.bind(freeBind)(k(v.value0))(Data_Functor.map(Data_Functor.functorFn)(go)(v.value1));
          };
          throw new Error("Failed pattern match at Control.Monad.Free line 161, column 10 - line 163, column 33: " + [ v.constructor.name ]);
      };
      return go;
  };
  var hoistFree = function (k) {
      return substFree(function ($121) {
          return liftF(k($121));
      });
  };
  var foldFree = function (dictMonadRec) {
      return function (k) {
          var go = function (f) {
              var v = toView(f);
              if (v instanceof Return) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));
              };
              if (v instanceof Bind) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(function ($127) {
                      return Control_Monad_Rec_Class.Loop.create(v.value1($127));
                  })(k(v.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Free line 151, column 10 - line 153, column 37: " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  exports["liftF"] = liftF;
  exports["hoistFree"] = hoistFree;
  exports["foldFree"] = foldFree;
  exports["substFree"] = substFree;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeApply"] = freeApply;
  exports["freeMonad"] = freeMonad;
})(PS["Control.Monad.Free"] = PS["Control.Monad.Free"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Class = PS["Effect.Class"];
  var Prelude = PS["Prelude"];                 
  var StateT = function (x) {
      return x;
  }; 
  var functorStateT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return function (s) {
                  return Data_Functor.map(dictFunctor)(function (v1) {
                      return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                  })(v(s));
              };
          };
      });
  };
  var monadStateT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeStateT(dictMonad);
      }, function () {
          return bindStateT(dictMonad);
      });
  };
  var bindStateT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyStateT(dictMonad);
      }, function (v) {
          return function (f) {
              return function (s) {
                  return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                      var v3 = f(v1.value0);
                      return v3(v1.value1);
                  });
              };
          };
      });
  };
  var applyStateT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadStateT(dictMonad)));
  };
  var applicativeStateT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyStateT(dictMonad);
      }, function (a) {
          return function (s) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
          };
      });
  };
  var monadRecStateT = function (dictMonadRec) {
      return new Control_Monad_Rec_Class.MonadRec(function () {
          return monadStateT(dictMonadRec.Monad0());
      }, function (f) {
          return function (a) {
              var f$prime = function (v) {
                  return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                      var v1 = f(v.value0);
                      return v1;
                  })()(v.value1))(function (v1) {
                      return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                          if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
                              return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
                          };
                          if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
                              return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
                          };
                          throw new Error("Failed pattern match at Control.Monad.State.Trans line 87, column 16 - line 89, column 40: " + [ v1.value0.constructor.name ]);
                      })());
                  });
              };
              return function (s) {
                  return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
              };
          };
      });
  };
  var monadStateStateT = function (dictMonad) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadStateT(dictMonad);
      }, function (f) {
          return StateT(function ($111) {
              return Control_Applicative.pure(dictMonad.Applicative0())(f($111));
          });
      });
  };
  exports["StateT"] = StateT;
  exports["functorStateT"] = functorStateT;
  exports["applyStateT"] = applyStateT;
  exports["applicativeStateT"] = applicativeStateT;
  exports["bindStateT"] = bindStateT;
  exports["monadStateT"] = monadStateT;
  exports["monadRecStateT"] = monadRecStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS["Control.Monad.State.Trans"] = PS["Control.Monad.State.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var execState = function (v) {
      return function (s) {
          var v1 = v(s);
          return v1.value1;
      };
  };
  exports["execState"] = execState;
})(PS["Control.Monad.State"] = PS["Control.Monad.State"] || {});
(function(exports) {
    "use strict";

  exports.defer = function (thunk) {
    var v = null;
    return function() {
      if (thunk === undefined) return v;

      v = thunk();
      thunk = undefined; // eslint-disable-line no-param-reassign
      return v;
    };
  };

  exports.force = function (l) {
    return l();
  };
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Lazy"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var functorLazy = new Data_Functor.Functor(function (f) {
      return function (l) {
          return $foreign.defer(function (v) {
              return f($foreign.force(l));
          });
      };
  });
  exports["functorLazy"] = functorLazy;
  exports["defer"] = $foreign.defer;
  exports["force"] = $foreign.force;
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Lazy = PS["Data.Lazy"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var tail = function (v) {
      return Data_Tuple.snd(Data_Lazy.force(v));
  };
  var mkCofree = function (a) {
      return function (t) {
          return Data_Lazy.defer(function (v) {
              return new Data_Tuple.Tuple(a, t);
          });
      };
  };
  var head = function (v) {
      return Data_Tuple.fst(Data_Lazy.force(v));
  };
  var functorCofree = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          var loop = function (v) {
              return Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
                  return new Data_Tuple.Tuple(f(v1.value0), Data_Functor.map(dictFunctor)(loop)(v1.value1));
              })(v);
          };
          return loop;
      });
  };
  var foldableCofree = function (dictFoldable) {
      return new Data_Foldable.Foldable(function (dictMonoid) {
          return function (f) {
              var go = function (fa) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(f(head(fa)))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(go)(tail(fa)));
              };
              return go;
          };
      }, function (f) {
          var go = function (b) {
              return function (fa) {
                  return Data_Foldable.foldl(dictFoldable)(go)(f(b)(head(fa)))(tail(fa));
              };
          };
          return go;
      }, function (f) {
          var go = function (fa) {
              return function (b) {
                  return f(head(fa))(Data_Foldable.foldr(dictFoldable)(go)(b)(tail(fa)));
              };
          };
          return Data_Function.flip(go);
      });
  };
  var monadCofree = function (dictAlternative) {
      return new Control_Monad.Monad(function () {
          return applicativeCofree(dictAlternative);
      }, function () {
          return bindCofree(dictAlternative);
      });
  };
  var bindCofree = function (dictAlternative) {
      return new Control_Bind.Bind(function () {
          return applyCofree(dictAlternative);
      }, function (fa) {
          return function (f) {
              var loop = function (fa$prime) {
                  var fh = f(head(fa$prime));
                  return mkCofree(head(fh))(Control_Alt.alt((dictAlternative.Plus1()).Alt0())(tail(fh))(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(loop)(tail(fa$prime))));
              };
              return loop(fa);
          };
      });
  };
  var applyCofree = function (dictAlternative) {
      return new Control_Apply.Apply(function () {
          return functorCofree(((dictAlternative.Plus1()).Alt0()).Functor0());
      }, Control_Monad.ap(monadCofree(dictAlternative)));
  };
  var applicativeCofree = function (dictAlternative) {
      return new Control_Applicative.Applicative(function () {
          return applyCofree(dictAlternative);
      }, function (a) {
          return mkCofree(a)(Control_Plus.empty(dictAlternative.Plus1()));
      });
  };
  exports["mkCofree"] = mkCofree;
  exports["head"] = head;
  exports["tail"] = tail;
  exports["functorCofree"] = functorCofree;
  exports["foldableCofree"] = foldableCofree;
  exports["applyCofree"] = applyCofree;
  exports["applicativeCofree"] = applicativeCofree;
  exports["bindCofree"] = bindCofree;
  exports["monadCofree"] = monadCofree;
})(PS["Control.Comonad.Cofree"] = PS["Control.Comonad.Cofree"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Void = PS["Data.Void"];
  var in3 = function (v) {
      return new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)));
  };
  var in2 = function (v) {
      return new Data_Either.Right(new Data_Either.Left(v));
  };
  exports["in2"] = in2;
  exports["in3"] = in3;
})(PS["Data.Either.Nested"] = PS["Data.Either.Nested"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Lazy = PS["Data.List.Lazy"];
  var Data_List_Lazy_Types = PS["Data.List.Lazy.Types"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal line 415, column 3 - line 420, column 88: " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal line 412, column 1 - line 412, column 80: " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal line 451, column 5 - line 456, column 108: " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal line 448, column 3 - line 448, column 56: " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal line 431, column 3 - line 431, column 55: " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var empty = Leaf.value;
  var fromFoldable = function (dictOrd) {
      return function (dictFoldable) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (v) {
                  return insert(dictOrd)(v.value0)(v.value1)(m);
              };
          })(empty);
      };
  };
  exports["empty"] = empty;
  exports["insert"] = insert;
  exports["fromFoldable"] = fromFoldable;
})(PS["Data.Map.Internal"] = PS["Data.Map.Internal"] || {});
(function(exports) {
    "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var $$Math = PS["Math"];
  var Prelude = PS["Prelude"];                 
  var depair = function (z) {
      if (z < 0) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          var w = Data_Int.floor(($$Math.sqrt(8.0 * Data_Int.toNumber(z) + 1.0) - 1.0) / 2.0);
          var t = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(Data_Int.pow(w)(2) + w | 0)(2);
          var y = z - t | 0;
          var x = w - y | 0;
          return Data_Maybe.Just.create(new Data_Tuple.Tuple(x, y));
      };
      throw new Error("Failed pattern match at Data.Tournament.Encoding2.Cantor line 14, column 1 - line 14, column 39: " + [ z.constructor.name ]);
  };
  exports["depair"] = depair;
})(PS["Data.Tournament.Encoding2.Cantor"] = PS["Data.Tournament.Encoding2.Cantor"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Control_Comonad_Cofree = PS["Control.Comonad.Cofree"];
  var Data_Array = PS["Data.Array"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Prelude = PS["Prelude"];
  var Test_QuickCheck = PS["Test.QuickCheck"];
  var Test_QuickCheck_Arbitrary = PS["Test.QuickCheck.Arbitrary"];
  var Test_QuickCheck_Gen = PS["Test.QuickCheck.Gen"];
  var positiveMod = function (a) {
      return function (b) {
          return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(a)(b) + b | 0)(b);
      };
  };               
  var fromCofree = function (f) {
      return function (c) {
          return f(Control_Comonad_Cofree.head(c))(Control_Comonad_Cofree.tail(c));
      };
  };
  var factorial = function (v) {
      if (v === 0) {
          return 1.0;
      };
      return Data_Foldable.product(Data_Foldable.foldableArray)(Data_Semiring.semiringNumber)(Data_Functor.map(Data_Functor.functorArray)(Data_Int.toNumber)(Data_Array.range(1)(v)));
  };
  var choose = function (n) {
      return function (r) {
          return Data_Int.floor(factorial(n) / (factorial(r) * factorial(n - r | 0)));
      };
  };
  exports["factorial"] = factorial;
  exports["choose"] = choose;
  exports["positiveMod"] = positiveMod;
  exports["fromCofree"] = fromCofree;
})(PS["Data.Tournament.Prelude"] = PS["Data.Tournament.Prelude"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tournament_Encoding2_Cantor = PS["Data.Tournament.Encoding2.Cantor"];
  var Data_Tournament_Prelude = PS["Data.Tournament.Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var swap = function (i) {
      return function (j) {
          return function (xs) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_List.index(xs)(i))(function (v) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_List.index(xs)(j))(function (v1) {
                      return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_List.updateAt(i)(v1)(xs))(Data_List.updateAt(j)(v));
                  });
              });
          };
      };
  };
  var applyNthCombination = function (n) {
      return function (xs) {
          var n$prime = Data_Tournament_Prelude.positiveMod(n)(Data_Tournament_Prelude.choose(Data_Foldable.length(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(xs))(2));
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Tournament_Encoding2_Cantor.depair(n$prime))(function (v) {
              return swap(v.value0)((v.value0 + 1 | 0) + v.value1 | 0)(xs);
          });
      };
  };
  var nextCombination = function (n) {
      return function (xs) {
          return Data_Maybe.fromMaybe(xs)(Control_Bind.bind(Data_Maybe.bindMaybe)(applyNthCombination(n)(xs))(applyNthCombination(n + 1 | 0)));
      };
  };
  var prevCombination = function (n) {
      return function (xs) {
          return Data_Maybe.fromMaybe(xs)(Control_Bind.bind(Data_Maybe.bindMaybe)(applyNthCombination(n)(xs))(applyNthCombination(n - 1 | 0)));
      };
  };
  exports["nextCombination"] = nextCombination;
  exports["prevCombination"] = prevCombination;
})(PS["Data.Tournament.Encoding2"] = PS["Data.Tournament.Encoding2"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad_Cofree = PS["Control.Comonad.Cofree"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Tournament_Encoding2 = PS["Data.Tournament.Encoding2"];
  var Data_Tournament_Prelude = PS["Data.Tournament.Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Test_QuickCheck = PS["Test.QuickCheck"];
  var Test_QuickCheck_Arbitrary = PS["Test.QuickCheck.Arbitrary"];
  var Test_QuickCheck_Gen = PS["Test.QuickCheck.Gen"];                 
  var Tournament = function (x) {
      return x;
  };
  var Left = (function () {
      function Left() {

      };
      Left.value = new Left();
      return Left;
  })();
  var Right = (function () {
      function Right() {

      };
      Right.value = new Right();
      return Right;
  })();
  var unhold = function (h) {
      return function (v) {
          return Tournament({
              ranked: v.ranked,
              unranked: Data_Tournament_Encoding2.prevCombination(h)(v.unranked)
          });
      };
  };
  var ranked = function (v) {
      return Data_Functor.map(Data_List_Types.functorList)(Control_Comonad_Cofree.head)(v.ranked);
  };
  var promote = function (w) {
      return function (l) {
          return Data_Tournament_Prelude.fromCofree(function (a) {
              return function (ps) {
                  return Control_Comonad_Cofree.mkCofree(a)(new Data_List_Types.Cons(l, ps));
              };
          })(w);
      };
  };
  var play = function (r) {
      return function (v) {
          var rankify = function ($copy_v1) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v1) {
                  if (v1.unranked instanceof Data_List_Types.Cons && v1.unranked.value1 instanceof Data_List_Types.Nil) {
                      $copy_v1 = {
                          ranked: new Data_List_Types.Cons(v1.unranked.value0, v1.ranked),
                          unranked: Control_Comonad_Cofree.tail(v1.unranked.value0)
                      };
                      return;
                  };
                  $tco_done = true;
                  return v1;
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v1);
              };
              return $tco_result;
          };
          var play$prime = function (v1) {
              if (v1 instanceof Left) {
                  return promote;
              };
              if (v1 instanceof Right) {
                  return Data_Function.flip(promote);
              };
              throw new Error("Failed pattern match at Data.Tournament line 96, column 5 - line 96, column 26: " + [ v1.constructor.name ]);
          };
          var playNext = function (v1) {
              if (v1.unranked instanceof Data_List_Types.Cons && v1.unranked.value1 instanceof Data_List_Types.Cons) {
                  return Data_Maybe.Just.create({
                      unranked: Data_List.snoc(v1.unranked.value1.value1)(play$prime(r)(v1.unranked.value0)(v1.unranked.value1.value0)),
                      ranked: v1.ranked
                  });
              };
              return Data_Maybe.Nothing.value;
          };
          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Functor.map(Data_Functor.functorFn)(Tournament)(rankify))(playNext(v));
      };
  };
  var next = function (v) {
      if (v.unranked instanceof Data_List_Types.Cons && v.unranked.value1 instanceof Data_List_Types.Cons) {
          return Data_Maybe.Just.create(new Data_Tuple.Tuple(Control_Comonad_Cofree.head(v.unranked.value0), Control_Comonad_Cofree.head(v.unranked.value1.value0)));
      };
      return Data_Maybe.Nothing.value;
  };
  var hold = function (h) {
      return function (v) {
          return Tournament({
              ranked: v.ranked,
              unranked: Data_Tournament_Encoding2.nextCombination(h)(v.unranked)
          });
      };
  }; 
  var fromFoldable = function (dictFoldable) {
      return function (xs) {
          return Tournament((function () {
              var v = Data_Functor.map(Data_List_Types.functorList)(Control_Applicative.pure(Control_Comonad_Cofree.applicativeCofree(Data_List_Types.alternativeList)))(Data_List.fromFoldable(dictFoldable)(xs));
              if (Data_List.length(v) >= 2) {
                  return {
                      ranked: Data_List_Types.Nil.value,
                      unranked: v
                  };
              };
              return {
                  ranked: v,
                  unranked: Data_List_Types.Nil.value
              };
          })());
      };
  };
  var foldableTournament = new Data_Foldable.Foldable(function (dictMonoid) {
      return Data_Foldable.foldMapDefaultL(foldableTournament)(dictMonoid);
  }, function (f) {
      return function (acc) {
          return function (v) {
              return (function (acc$prime) {
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Foldable.foldl(Control_Comonad_Cofree.foldableCofree(Data_List_Types.foldableList))(f))(acc$prime)(v.unranked);
              })(Data_Foldable.foldr(Data_List_Types.foldableList)(Data_Function.flip(f))(acc)(Data_Functor.map(Data_List_Types.functorList)(Control_Comonad_Cofree.head)(v.ranked)));
          };
      };
  }, function (x) {
      return Data_Foldable.foldrDefault(foldableTournament)(x);
  });
  var eqGameResult = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Left && y instanceof Left) {
              return true;
          };
          if (x instanceof Right && y instanceof Right) {
              return true;
          };
          return false;
      };
  });
  var demote = Data_Tournament_Prelude.fromCofree(function (a) {
      return function (ps) {
          return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_List.uncons(ps))(function (r) {
              return new Data_Tuple.Tuple(Control_Comonad_Cofree.mkCofree(a)(r.tail), r.head);
          });
      };
  });
  var unplay = function (r) {
      return function (v) {
          var unrankify = function ($copy_v1) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v1) {
                  if (v1.ranked instanceof Data_List_Types.Cons) {
                      if (Data_List["null"](v1.ranked.value1) && Data_List["null"](v1.unranked)) {
                          $tco_done = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (Data_List.length(Control_Comonad_Cofree.tail(v1.ranked.value0)) === Data_List.length(v1.unranked)) {
                          $copy_v1 = {
                              ranked: v1.ranked.value1,
                              unranked: Data_List.singleton(v1.ranked.value0)
                          };
                          return;
                      };
                  };
                  $tco_done = true;
                  return new Data_Maybe.Just(v1);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v1);
              };
              return $tco_result;
          };
          var unplay$prime = function (v1) {
              return function (w) {
                  return function (l) {
                      return function (ps) {
                          if (v1 instanceof Left) {
                              return new Data_List_Types.Cons(w, new Data_List_Types.Cons(l, ps));
                          };
                          if (v1 instanceof Right) {
                              return new Data_List_Types.Cons(l, new Data_List_Types.Cons(w, ps));
                          };
                          throw new Error("Failed pattern match at Data.Tournament line 128, column 5 - line 128, column 33: " + [ v1.constructor.name, w.constructor.name, l.constructor.name, ps.constructor.name ]);
                      };
                  };
              };
          };
          var unplayLast = function (v1) {
              var v2 = Data_List.unsnoc(v1.unranked);
              if (v2 instanceof Data_Maybe.Just) {
                  return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(demote(v2.value0.last))(function (wl) {
                      return {
                          unranked: Data_Tuple.uncurry(unplay$prime(r))(wl)(v2.value0.init),
                          ranked: v1.ranked
                      };
                  });
              };
              return Data_Maybe.Nothing.value;
          };
          return Data_Functor.map(Data_Maybe.functorMaybe)(Tournament)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(unplayLast)(unrankify(v)));
      };
  };
  var areExhaustive = function (h) {
      return function (v) {
          return h >= (Data_Tournament_Prelude.choose(Data_List.length(v.unranked))(2) - 1 | 0);
      };
  };
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["fromFoldable"] = fromFoldable;
  exports["ranked"] = ranked;
  exports["next"] = next;
  exports["play"] = play;
  exports["hold"] = hold;
  exports["areExhaustive"] = areExhaustive;
  exports["unplay"] = unplay;
  exports["unhold"] = unhold;
  exports["foldableTournament"] = foldableTournament;
  exports["eqGameResult"] = eqGameResult;
})(PS["Data.Tournament"] = PS["Data.Tournament"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Unit = PS["Data.Unit"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var $$undefined = Data_Unit.unit;
  exports["undefined"] = $$undefined;
})(PS["Data.Typelevel.Undefined"] = PS["Data.Typelevel.Undefined"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var d2 = Data_Typelevel_Undefined["undefined"];
  var d1 = Data_Typelevel_Undefined["undefined"];
  exports["d1"] = d1;
  exports["d2"] = d2;
})(PS["Data.Typelevel.Num.Reps"] = PS["Data.Typelevel.Num.Reps"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Typelevel_Num_Reps = PS["Data.Typelevel.Num.Reps"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Type_Proxy = PS["Type.Proxy"];                 
  var Nat = function (toInt) {
      this.toInt = toInt;
  };
  var Pos = function (Nat0) {
      this.Nat0 = Nat0;
  };
  var toInt = function (dict) {
      return dict.toInt;
  }; 
  var natD6 = new Nat(function (v) {
      return 6;
  });
  var posD6 = new Pos(function () {
      return natD6;
  });
  var natD5 = new Nat(function (v) {
      return 5;
  });
  var natD2 = new Nat(function (v) {
      return 2;
  });
  var posD2 = new Pos(function () {
      return natD2;
  });
  var natD1 = new Nat(function (v) {
      return 1;
  });
  var posD1 = new Pos(function () {
      return natD1;
  });
  var natD0 = new Nat(function (v) {
      return 0;
  });
  exports["toInt"] = toInt;
  exports["Nat"] = Nat;
  exports["Pos"] = Pos;
  exports["natD0"] = natD0;
  exports["natD1"] = natD1;
  exports["natD2"] = natD2;
  exports["natD5"] = natD5;
  exports["natD6"] = natD6;
  exports["posD1"] = posD1;
  exports["posD2"] = posD2;
  exports["posD6"] = posD6;
})(PS["Data.Typelevel.Num.Sets"] = PS["Data.Typelevel.Num.Sets"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Typelevel_Bool = PS["Data.Typelevel.Bool"];
  var Data_Typelevel_Num_Reps = PS["Data.Typelevel.Num.Reps"];
  var Data_Typelevel_Num_Sets = PS["Data.Typelevel.Num.Sets"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Prelude = PS["Prelude"];                 
  var Succ = function (Nat0, Pos1) {
      this.Nat0 = Nat0;
      this.Pos1 = Pos1;
  };
  var SuccP = {};
  var DivMod10 = function (Nat0, Nat1) {
      this.Nat0 = Nat0;
      this.Nat1 = Nat1;
  };
  var Trich = function (Nat0, Nat1) {
      this.Nat0 = Nat0;
      this.Nat1 = Nat1;
  };            
  var LtEq = {};
  var IsZero = {};
  var typelevelSucc = function (dictPos) {
      return function (dictIsZero) {
          return function (dictDivMod10) {
              return function (dictSuccP) {
                  return function (dictDivMod101) {
                      return new Succ(dictDivMod10.Nat1, function () {
                          return dictPos;
                      });
                  };
              };
          };
      };
  };
  var trichLtEq = function (dictSucc) {
      return function (dictTrich) {
          return LtEq;
      };
  }; 
  var trichD2D6 = new Trich(function () {
      return Data_Typelevel_Num_Sets.natD2;
  }, function () {
      return Data_Typelevel_Num_Sets.natD6;
  });
  var trichD1D6 = new Trich(function () {
      return Data_Typelevel_Num_Sets.natD1;
  }, function () {
      return Data_Typelevel_Num_Sets.natD6;
  });                       
  var succPxiD5xiD6 = SuccP;
  var isZeroD6 = IsZero;
  var divMod10D6D0 = new DivMod10(function () {
      return Data_Typelevel_Num_Sets.natD0;
  }, function () {
      return Data_Typelevel_Num_Sets.natD6;
  });
  var divMod10D5D0 = new DivMod10(function () {
      return Data_Typelevel_Num_Sets.natD0;
  }, function () {
      return Data_Typelevel_Num_Sets.natD5;
  });
  exports["Succ"] = Succ;
  exports["SuccP"] = SuccP;
  exports["DivMod10"] = DivMod10;
  exports["Trich"] = Trich;
  exports["LtEq"] = LtEq;
  exports["IsZero"] = IsZero;
  exports["typelevelSucc"] = typelevelSucc;
  exports["succPxiD5xiD6"] = succPxiD5xiD6;
  exports["divMod10D5D0"] = divMod10D5D0;
  exports["divMod10D6D0"] = divMod10D6D0;
  exports["trichD1D6"] = trichD1D6;
  exports["trichD2D6"] = trichD2D6;
  exports["trichLtEq"] = trichLtEq;
  exports["isZeroD6"] = isZeroD6;
})(PS["Data.Typelevel.Num.Ops"] = PS["Data.Typelevel.Num.Ops"] || {});
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          });
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            step   = bhead(step);
            if (btail === null) {
              bhead = null;
            } else {
              bhead = btail._1;
              btail = btail._2;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    // It's possible to interrupt the fiber between enqueuing and
                    // resuming, so we need to check that the runTick is still
                    // valid.
                    if (runTick !== localRunTick + 1) {
                      return;
                    }
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_RESULT;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = util.right(tmp);
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item.
                if (interrupt && interrupt !== tmp) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                fail = null;
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                fail   = attempt._2;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._liftEffect = Aff.Sync;

  exports.makeAff = Aff.Async;

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };

  exports._delay = function () {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }

    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }

    return function (right, ms) {
      return Aff.Async(function (cb) {
        return function () {
          var timer = setDelay(ms, cb(right()));
          return function () {
            return Aff.Sync(function () {
              return right(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect.Aff"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Unsafe = PS["Effect.Unsafe"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                          
  var functorAff = new Data_Functor.Functor($foreign._map);
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Effect.Aff line 395, column 21 - line 397, column 31: " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Effect.Aff line 390, column 20 - line 394, column 3: " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Effect.Aff line 385, column 12 - line 387, column 20: " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign._makeFiber(ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var v = makeFiber(aff)();
          v.run();
          return v;
      };
  };                                 
  var delay = function (v) {
      return $foreign._delay(Data_Either.Right.create, v);
  };
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, $foreign._bind);
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, $foreign._pure);
  var monadEffectAff = new Effect_Class.MonadEffect(function () {
      return monadAff;
  }, $foreign._liftEffect);
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  exports["launchAff"] = launchAff;
  exports["delay"] = delay;
  exports["nonCanceler"] = nonCanceler;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadEffectAff"] = monadEffectAff;
  exports["makeAff"] = $foreign.makeAff;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function(exports) {
    "use strict";

  exports.runEffectFn1 = function runEffectFn1(fn) {
    return function(a) {
      return function() {
        return fn(a);
      };
    };
  };

  exports.runEffectFn2 = function runEffectFn2(fn) {
    return function(a) {
      return function(b) {
        return function() {
          return fn(a, b);
        };
      };
    };
  };
})(PS["Effect.Uncurried"] = PS["Effect.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect.Uncurried"];
  var Effect = PS["Effect"];
  exports["runEffectFn1"] = $foreign.runEffectFn1;
  exports["runEffectFn2"] = $foreign.runEffectFn2;
})(PS["Effect.Uncurried"] = PS["Effect.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Prelude = PS["Prelude"];
  var fromEffectFnAff = function (v) {
      return Effect_Aff.makeAff(function (k) {
          return function __do() {
              var v1 = v(function ($4) {
                  return k(Data_Either.Left.create($4))();
              }, function ($5) {
                  return k(Data_Either.Right.create($5))();
              });
              return function (e) {
                  return Effect_Aff.makeAff(function (k2) {
                      return function __do() {
                          v1(e, function ($6) {
                              return k2(Data_Either.Left.create($6))();
                          }, function ($7) {
                              return k2(Data_Either.Right.create($7))();
                          });
                          return Effect_Aff.nonCanceler;
                      };
                  });
              };
          };
      });
  };
  exports["fromEffectFnAff"] = fromEffectFnAff;
})(PS["Effect.Aff.Compat"] = PS["Effect.Aff.Compat"] || {});
(function(exports) {
    "use strict";

  exports.random = Math.random;
})(PS["Effect.Random"] = PS["Effect.Random"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect.Random"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var randomInt = function (low) {
      return function (high) {
          return function __do() {
              var v = $foreign.random();
              var asNumber = ((Data_Int.toNumber(high) - Data_Int.toNumber(low)) + 1) * v + Data_Int.toNumber(low);
              return Data_Int.floor(asNumber);
          };
      };
  };
  exports["randomInt"] = randomInt;
})(PS["Effect.Random"] = PS["Effect.Random"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Random = PS["Effect.Random"];
  var Prelude = PS["Prelude"];                 
  var swap = function (xs) {
      return function (v) {
          return Control_Bind.bind(Control_Monad_ST_Internal.bindST)(Data_Array_ST.peek(v.value0)(xs))(function (v1) {
              return Control_Bind.bind(Control_Monad_ST_Internal.bindST)(Data_Array_ST.peek(v.value1)(xs))(function (v2) {
                  if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_ST_Internal.bindST)(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.poke(v.value1)(v1.value0)(xs)))(function () {
                          return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.poke(v.value0)(v2.value0)(xs));
                      });
                  };
                  return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(Data_Unit.unit);
              });
          });
      };
  };
  var generateShuffle = function (ub) {
      return Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(function (i) {
          return Data_Functor.map(Effect.functorEffect)(Data_Tuple.Tuple.create(i))(Effect_Random.randomInt(i)(ub));
      })(Data_Array.range(0)(ub));
  };
  var shuffle = function (xs) {
      return function __do() {
          var v = generateShuffle(Data_Array.length(xs) - 1 | 0)();
          return Control_Monad_ST_Internal.run(Data_Array_ST.withArray(function ($15) {
              return Data_Function.flip(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_ST_Internal.applicativeST))(v)(swap($15));
          })(xs));
      };
  };
  exports["shuffle"] = shuffle;
})(PS["Effect.Random.Shuffle"] = PS["Effect.Random.Shuffle"] || {});
(function(exports) {
    "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Foreign"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Int = PS["Data.Int"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Prelude = PS["Prelude"];
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
})(PS["Foreign"] = PS["Foreign"] || {});
(function(exports) {
    "use strict";    

  exports.runST = function (f) {
    return f();
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
    "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Foreign.Object.ST"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Foreign.Object"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Foreign_Object_ST = PS["Foreign.Object.ST"];
  var Prelude = PS["Prelude"];
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return $foreign.runST(Control_Bind.bind(Control_Monad_ST_Internal.bindST)(Foreign_Object_ST["new"])(function (v) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_ST_Internal.bindST)(Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST)(Data_Foldable.foldableArray)(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
                  return Foreign_Object_ST.poke(v1.value0)(v1.value1)(v);
              }))(function () {
                  return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(v);
              });
          }));
      };
  };
  exports["fromFoldable"] = fromFoldable;
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_CatList = PS["Data.CatList"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var HTMLns = (function () {
      function HTMLns() {

      };
      HTMLns.value = new HTMLns();
      return HTMLns;
  })();
  var SVGns = (function () {
      function SVGns() {

      };
      SVGns.value = new SVGns();
      return SVGns;
  })();
  var EventHandler = (function () {
      function EventHandler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      EventHandler.create = function (value0) {
          return function (value1) {
              return new EventHandler(value0, value1);
          };
      };
      return EventHandler;
  })();
  var Attr = (function () {
      function Attr(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Attr.create = function (value0) {
          return function (value1) {
              return new Attr(value0, value1);
          };
      };
      return Attr;
  })();
  var Attribute = (function () {
      function Attribute(value0) {
          this.value0 = value0;
      };
      Attribute.create = function (value0) {
          return new Attribute(value0);
      };
      return Attribute;
  })();
  var Element = (function () {
      function Element(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      Element.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new Element(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return Element;
  })();
  var Content = (function () {
      function Content(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Content.create = function (value0) {
          return function (value1) {
              return new Content(value0, value1);
          };
      };
      return Content;
  })();
  var Empty = (function () {
      function Empty(value0) {
          this.value0 = value0;
      };
      Empty.create = function (value0) {
          return new Empty(value0);
      };
      return Empty;
  })();
  var Attributable = function ($$with) {
      this["with"] = $$with;
  };
  var Eventable = function (withEvent) {
      this.withEvent = withEvent;
  };
  var withEvent = function (dict) {
      return dict.withEvent;
  };
  var $$with = function (dict) {
      return dict["with"];
  };
  var text = function (s) {
      return Control_Monad_Free.liftF(new Content(s, Data_Unit.unit));
  }; 
  var parent = function (ns) {
      return function (el) {
          return function (kids) {
              return Control_Monad_Free.liftF(new Element(ns, el, kids, Data_Monoid.mempty(Data_CatList.monoidCatList), Data_Monoid.mempty(Data_CatList.monoidCatList), Data_Unit.unit));
          };
      };
  };
  var on = function (name) {
      return function (handler) {
          return Control_Applicative.pure(Data_CatList.applicativeCatList)(new EventHandler(name, handler));
      };
  };                                                                
  var leaf = function (ns) {
      return function (el) {
          return Control_Monad_Free.liftF(new Element(ns, el, Control_Monad_Free.liftF(new Empty(Data_Unit.unit)), Data_Monoid.mempty(Data_CatList.monoidCatList), Data_Monoid.mempty(Data_CatList.monoidCatList), Data_Unit.unit));
      };
  }; 
  var eventableMarkup = new Eventable(function (f) {
      return function (v) {
          var withEventF = function (v1) {
              if (v1 instanceof Element) {
                  return new Element(v1.value0, v1.value1, v1.value2, v1.value3, Data_Semigroup.append(Data_CatList.semigroupCatList)(v1.value4)(v), v1.value5);
              };
              return v1;
          };
          return Control_Monad_Free.hoistFree(withEventF)(f);
      };
  });
  var eventableMarkupMF = new Eventable(function (k) {
      return function (xs) {
          return function (m) {
              return withEvent(eventableMarkup)(k(m))(xs);
          };
      };
  });
  var empty = Control_Monad_Free.liftF(new Empty(Data_Unit.unit));
  var attribute = function (key) {
      return function (value) {
          return new Attribute(Control_Applicative.pure(Data_CatList.applicativeCatList)(new Attr(key, value)));
      };
  };
  var attributableMarkup = new Attributable(function (f) {
      return function (v) {
          var withF = function (v1) {
              if (v1 instanceof Element) {
                  return new Element(v1.value0, v1.value1, v1.value2, Data_Semigroup.append(Data_CatList.semigroupCatList)(v1.value3)(v.value0), v1.value4, v1.value5);
              };
              return v1;
          };
          return Control_Monad_Free.hoistFree(withF)(f);
      };
  });
  var attributableMarkupF = new Attributable(function (k) {
      return function (xs) {
          return function (m) {
              return $$with(attributableMarkup)(k(m))(xs);
          };
      };
  });
  exports["Element"] = Element;
  exports["Content"] = Content;
  exports["Empty"] = Empty;
  exports["HTMLns"] = HTMLns;
  exports["SVGns"] = SVGns;
  exports["Attr"] = Attr;
  exports["EventHandler"] = EventHandler;
  exports["parent"] = parent;
  exports["leaf"] = leaf;
  exports["text"] = text;
  exports["empty"] = empty;
  exports["Attributable"] = Attributable;
  exports["with"] = $$with;
  exports["attribute"] = attribute;
  exports["Eventable"] = Eventable;
  exports["withEvent"] = withEvent;
  exports["on"] = on;
  exports["attributableMarkup"] = attributableMarkup;
  exports["attributableMarkupF"] = attributableMarkupF;
  exports["eventableMarkup"] = eventableMarkup;
  exports["eventableMarkupMF"] = eventableMarkupMF;
})(PS["Text.Smolder.Markup"] = PS["Text.Smolder.Markup"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];                 
  var parent = Text_Smolder_Markup.parent(Text_Smolder_Markup.HTMLns.value);
  var span = parent("span");    
  var style = parent("style");
  var p = parent("p");          
  var leaf = Text_Smolder_Markup.leaf(Text_Smolder_Markup.HTMLns.value);
  var label = parent("label");
  var input = leaf("input");
  var img = leaf("img");
  var iframe = parent("iframe");
  var i = parent("i");  
  var h4 = parent("h4");
  var h3 = parent("h3");
  var h1 = parent("h1");
  var div = parent("div");
  var audio = parent("audio");
  var a = parent("a");
  exports["parent"] = parent;
  exports["leaf"] = leaf;
  exports["a"] = a;
  exports["audio"] = audio;
  exports["div"] = div;
  exports["h1"] = h1;
  exports["h3"] = h3;
  exports["h4"] = h4;
  exports["i"] = i;
  exports["iframe"] = iframe;
  exports["label"] = label;
  exports["p"] = p;
  exports["span"] = span;
  exports["style"] = style;
  exports["img"] = img;
  exports["input"] = input;
})(PS["Text.Smolder.HTML"] = PS["Text.Smolder.HTML"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];
  var width = Text_Smolder_Markup.attribute("width");
  var value = Text_Smolder_Markup.attribute("value");  
  var type$prime = Text_Smolder_Markup.attribute("type");
  var target = Text_Smolder_Markup.attribute("target");  
  var style = Text_Smolder_Markup.attribute("style");  
  var src = Text_Smolder_Markup.attribute("src");    
  var id = Text_Smolder_Markup.attribute("id");            
  var href = Text_Smolder_Markup.attribute("href");    
  var height = Text_Smolder_Markup.attribute("height");
  var $$for = Text_Smolder_Markup.attribute("for");          
  var disabled = Text_Smolder_Markup.attribute("disabled");
  var controls = Text_Smolder_Markup.attribute("controls");
  var className = Text_Smolder_Markup.attribute("class");
  var checked = Text_Smolder_Markup.attribute("checked");  
  var autofocus = Text_Smolder_Markup.attribute("autofocus");
  var alt = Text_Smolder_Markup.attribute("alt");
  exports["alt"] = alt;
  exports["autofocus"] = autofocus;
  exports["checked"] = checked;
  exports["className"] = className;
  exports["controls"] = controls;
  exports["disabled"] = disabled;
  exports["for"] = $$for;
  exports["height"] = height;
  exports["href"] = href;
  exports["id"] = id;
  exports["src"] = src;
  exports["style"] = style;
  exports["target"] = target;
  exports["type'"] = type$prime;
  exports["value"] = value;
  exports["width"] = width;
})(PS["Text.Smolder.HTML.Attributes"] = PS["Text.Smolder.HTML.Attributes"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];                 
  var parent = Text_Smolder_Markup.parent(Text_Smolder_Markup.SVGns.value);
  var path = parent("path");  
  var svg = parent("svg");
  exports["parent"] = parent;
  exports["path"] = path;
  exports["svg"] = svg;
})(PS["Text.Smolder.SVG"] = PS["Text.Smolder.SVG"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];         
  var viewBox = Text_Smolder_Markup.attribute("viewBox");         
  var fill = Text_Smolder_Markup.attribute("fill");            
  var d = Text_Smolder_Markup.attribute("d");
  exports["d"] = d;
  exports["fill"] = fill;
  exports["viewBox"] = viewBox;
})(PS["Text.Smolder.SVG.Attributes"] = PS["Text.Smolder.SVG.Attributes"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS = PS["CSS"];
  var CSS_Color = PS["CSS.Color"];
  var CSS_Display = PS["CSS.Display"];
  var CSS_Font = PS["CSS.Font"];
  var CSS_Geometry = PS["CSS.Geometry"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Render = PS["CSS.Render"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var CSS_Transform = PS["CSS.Transform"];
  var Color = PS["Color"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];
  var Text_Smolder_HTML = PS["Text.Smolder.HTML"];
  var Text_Smolder_HTML_Attributes = PS["Text.Smolder.HTML.Attributes"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];
  var Text_Smolder_SVG = PS["Text.Smolder.SVG"];
  var Text_Smolder_SVG_Attributes = PS["Text.Smolder.SVG.Attributes"];                 
  var TopLeft = (function () {
      function TopLeft() {

      };
      TopLeft.value = new TopLeft();
      return TopLeft;
  })();
  var TopRight = (function () {
      function TopRight() {

      };
      TopRight.value = new TopRight();
      return TopRight;
  })();                              
  var corner = function (u) {
      return function (bc) {
          return function (oc) {
              return function (p) {
                  var styleAttribute = function ($1) {
                      return Text_Smolder_HTML_Attributes.style(Data_Maybe.fromMaybe("")(CSS_Render.renderedInline(CSS_Render.render($1))));
                  };
                  var key = Text_Smolder_Markup.attribute("key");
                  var fill = CSS_Stylesheet.key(CSS_Property.valColor)(CSS_String.fromString(CSS_Property.isStringKey)("fill"));
                  var border = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("border"));
                  return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.a)(key("purescript-github-corner-toplevel")))(Text_Smolder_HTML_Attributes.href(u)))(Text_Smolder_HTML_Attributes.className("github-corner")))(Text_Smolder_Markup.attribute("aria-label")("View source on Github"))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_SVG.svg)(key("0")))(Text_Smolder_HTML_Attributes.width("80")))(Text_Smolder_HTML_Attributes.height("80")))(Text_Smolder_SVG_Attributes.viewBox("0 0 250 250")))(styleAttribute(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(fill(bc))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Font.color(oc))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Display.position(CSS_Display.absolute))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.top(CSS_Size.nil))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(border(CSS_Size.nil))(function () {
                                      if (p instanceof TopLeft) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.left(CSS_Size.nil))(function () {
                                              return CSS_Transform.transform(CSS_Transform.Transformation(CSS_String.fromString(CSS_Property.isStringValue)("scale(-1, 1)")));
                                          });
                                      };
                                      if (p instanceof TopRight) {
                                          return CSS_Geometry.right(CSS_Size.nil);
                                      };
                                      throw new Error("Failed pattern match at GitHub.Corners line 46, column 17 - line 50, column 42: " + [ p.constructor.name ]);
                                  });
                              });
                          });
                      });
                  }))))(Text_Smolder_Markup.attribute("aria-hidden")("true"))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_SVG.path)(key("0")))(Text_Smolder_SVG_Attributes.d("M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"))(Text_Smolder_Markup.empty))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_SVG.path)(key("1")))(Text_Smolder_SVG_Attributes.d("M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2")))(Text_Smolder_SVG_Attributes.fill("currentColor")))(styleAttribute(CSS_Transform.transformOrigin(CSS_Transform.offset(CSS_Size.px(130.0)))(CSS_Transform.offset(CSS_Size.px(106.0)))(CSS_Size.nil))))(Text_Smolder_HTML_Attributes.className("octo-arm"))(Text_Smolder_Markup.empty))(function () {
                          return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_SVG.path)(key("2")))(Text_Smolder_SVG_Attributes.d("M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z")))(Text_Smolder_SVG_Attributes.fill("currentColor")))(Text_Smolder_HTML_Attributes.className("octo-body"))(Text_Smolder_Markup.empty);
                      });
                  })))(function () {
                      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.style)(key("1"))(Text_Smolder_Markup.text(".github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}"));
                  }));
              };
          };
      };
  };                                
  var black = Color.fromInt(1381651);
  var defaultCorner = function (u) {
      return corner(u)(black)(Color.white)(TopRight.value);
  };
  exports["TopLeft"] = TopLeft;
  exports["TopRight"] = TopRight;
  exports["defaultCorner"] = defaultCorner;
  exports["corner"] = corner;
  exports["black"] = black;
})(PS["GitHub.Corners"] = PS["GitHub.Corners"] || {});
(function(exports) {exports.start_ = function (app) {
    if (typeof window === 'object' && typeof CustomEvent === 'function') {
      var hook = HookDevtool(app);

      if (window.__pux_devtool_hook) {
        window.removeEventListener('pux:devtool:init', window.__pux_devtool_hook);
        hook();
      }

      window.__pux_devtool_hook = hook;

      // Listen for devtool and connect
      window.addEventListener('pux:devtool:init', window.__pux_devtool_hook);
    }

    return app;
  };

  function HookDevtool (app) {
    if (window.__pux_conn === undefined) {
      window.__pux_conn = {
        setState: false,
        index: 0,
        events: [app.events.get()],
        states: [app.state.get()]
      };
    }

    var conn = window.__pux_conn;

    return function () {
      window.dispatchEvent(new CustomEvent('pux:state:change', {
        detail: {
          index: conn.index,
          length: conn.states.length,
          state: stateToString(conn.states[conn.index]),
          event: eventToString(conn.events[conn.index])
        }
      }));

      if (app.__devtool_connected) return;
      app.__devtool_connected = true;

      app.events.subscribe(function (ev) {
        conn.events.push(ev);
        conn.states.push(app.state.get());
        conn.index = conn.states.length - 1;

        window.dispatchEvent(new CustomEvent('pux:state:change', {
          detail: {
            index: conn.index,
            length: conn.states.length,
            state: stateToString(conn.states[conn.index]),
            event: eventToString(ev)
          }
        }));
      });

      app.state.subscribe(function (st) {
        if (conn.setState) {
          conn.setState = false;
          window.dispatchEvent(new CustomEvent('pux:state:change', {
            detail: {
              index: conn.index,
              length: conn.states.length,
              state: stateToString(st),
              event: eventToString(conn.events[conn.index])
            }
          }));
        }
      });

      if (window.__pux_handler) {
        window.removeEventListener('pux:state:first', window.__pux_handler);
        window.removeEventListener('pux:state:prev', window.__pux_handler);
        window.removeEventListener('pux:state:next', window.__pux_handler);
        window.removeEventListener('pux:state:last', window.__pux_handler);
      }

      window.__pux_handler = function (ev) {
        if (ev.type === 'pux:state:first') {
          conn.setState = true;
          conn.index = 0;
          app.state.set(conn.states[0]);
        } else if (ev.type === 'pux:state:prev') {
          conn.setState = true;
          if (conn.states[conn.index - 1]) conn.index--;
          app.state.set(conn.states[conn.index]);
        } else if (ev.type === 'pux:state:next') {
          conn.setState = true;
          if (conn.states[conn.index + 1]) conn.index++;
          app.state.set(conn.states[conn.index]);
        } else if (ev.type === 'pux:state:last') {
          conn.setState = true;
          conn.index = conn.states.length - 1;
          app.state.set(conn.states[conn.index]);
        }
      }

      window.addEventListener('pux:state:first', window.__pux_handler);
      window.addEventListener('pux:state:prev', window.__pux_handler);
      window.addEventListener('pux:state:next', window.__pux_handler);
      window.addEventListener('pux:state:last', window.__pux_handler);
    }
  }

  function eventToString (a) {
    a = a.value0 ? a.value0 : a;

    function toString(a) {
      var name = a.constructor.name.match(/(String|Number|Boolean)/) ? a : a.constructor.name;
      var str = [name];
      if (a.constructor.name === 'Object') {
        return stateToString(a);
      }
      Object.keys(a).forEach(function (key) {
        if (key[0] === 'v' && key[4] === 'e') {
          str.push('(' + toString(a[key]) + ')');
        }
      });
      return str.join(' ');
    }

    return toString(a);
  };

  function eventToJSON (a) {
    function toJSON(a, obj) {
      if (a.constructor.name.match(/(String|Number|Boolean)/)) {
        return a;
      } else if (a.constructor.name === 'Object') {
        Object.keys(a).forEach(function (key) {
          obj[key] = toJSON(a[key], obj[key] || {});
        });
      } else if (a.constructor.name === 'Array') {
        return a.map(function (b) {
          return toJSON(b, {});
        });
      } else {
        obj[a.constructor.name] = {};
        if (a.value0 && !a.value1) {
          obj[a.constructor.name] = toJSON(a.value0, obj[a.constructor.name] || {});
        } else {
          Object.keys(a).forEach(function (key) {
            if (key[0] === 'v' && key[4] === 'e') {
              obj[a.constructor.name][key[5]] = toJSON(a[key], obj[a.constructor.name][key[5]] || {});
            }
          });
        }
      }
      return obj;
    }

    return toJSON(a, {});
  };

  function stateToString (s) {
    return JSON.stringify(s, function (key, val) {
      if (!val.constructor.name.match(/(Object|Boolean|Array|String|Number|Date|Symbol)/)) {
        return eventToJSON(val);
      }
      return val;
    }, 2)
  };
})(PS["Pux"] = PS["Pux"] || {});
(function(exports) {// module Signal

  function make(initial) {
    var subs = [];
    var val = initial;
    var sig = {
      subscribe: function(sub) {
        subs.push(sub);
        sub(val);
      },
      get: function() { return val; },
      set: function(newval) {
        val = newval;
        subs.forEach(function(sub) { sub(newval); });
      }
    };
    return sig;
  };

  exports.constant = make;

  exports.mapSig = function(fun) {
    return function(sig) {
      var out = make(fun(sig.get()));
      sig.subscribe(function(val) { out.set(fun(val)); });
      return out;
    };
  };

  exports.merge = function(sig1) {
    return function(sig2) {
      var out = make(sig1.get());
      sig2.subscribe(out.set);
      sig1.subscribe(out.set);
      return out;
    };
  };

  exports.foldp = function(fun) {
    return function(seed) {
      return function(sig) {
        var acc = seed;
        var out = make(acc);
        sig.subscribe(function(val) {
          acc = fun(val)(acc);
          out.set(acc);
        });
        return out;
      };
    };
  };

  exports["dropRepeats'"] = function(sig) {
    var val = sig.get();
    var out = make(val);
    sig.subscribe(function(newval) {
      if (val !== newval) {
        val = newval;
        out.set(val);
      }
    });
    return out;
  };

  exports.runSignal =
    function runSignal(sig) {
      return function() {
        sig.subscribe(function(val) {
          val();
        });
        return {};
      };
    };

  exports.get = function(sig) {
    return function() {
      return sig.get();
    };
  };
})(PS["Signal"] = PS["Signal"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Signal"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var mergeMany = function (dictFunctor) {
      return function (dictFoldable) {
          return function (sigs) {
              var mergeMaybe = function (v) {
                  return function (v1) {
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return v;
                      };
                      if (v instanceof Data_Maybe.Nothing) {
                          return v1;
                      };
                      if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                          return new Data_Maybe.Just($foreign.merge(v.value0)(v1.value0));
                      };
                      throw new Error("Failed pattern match at Signal line 53, column 9 - line 53, column 33: " + [ v.constructor.name, v1.constructor.name ]);
                  };
              };
              return Data_Foldable.foldl(dictFoldable)(mergeMaybe)(Data_Maybe.Nothing.value)(Data_Functor.map(dictFunctor)(Data_Maybe.Just.create)(sigs));
          };
      };
  };
  var functorSignal = new Data_Functor.Functor($foreign.mapSig);
  var flippedMap = function (dictFunctor) {
      return Data_Function.flip(Data_Functor.map(dictFunctor));
  };
  exports["mergeMany"] = mergeMany;
  exports["flippedMap"] = flippedMap;
  exports["functorSignal"] = functorSignal;
  exports["constant"] = $foreign.constant;
  exports["foldp"] = $foreign.foldp;
  exports["dropRepeats'"] = $foreign["dropRepeats'"];
  exports["runSignal"] = $foreign.runSignal;
})(PS["Signal"] = PS["Signal"] || {});
(function(exports) {// module Signal.Channel

  exports.channelP =
    function channelP(constant) {
      return function(v) {
        return function() {
          return constant(v);
        };
      };
    };

  exports.sendP =
    function sendP(chan) {
      return function(v) {
        return function() {
          chan.set(v);
        };
      };
    };

  exports.subscribe =
    function subscribe(chan) {
      return chan;
    };
})(PS["Signal.Channel"] = PS["Signal.Channel"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Signal.Channel"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Signal = PS["Signal"];                 
  var send = $foreign.sendP;
  var channel = $foreign.channelP(Signal.constant);
  exports["channel"] = channel;
  exports["send"] = send;
  exports["subscribe"] = $foreign.subscribe;
})(PS["Signal.Channel"] = PS["Signal.Channel"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Pux"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Signal = PS["Signal"];
  var Signal_Channel = PS["Signal.Channel"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];
  var onlyEffects = function (state) {
      return function (effects) {
          return {
              state: state,
              effects: effects
          };
      };
  };
  var noEffects = function (state) {
      return {
          state: state,
          effects: [  ]
      };
  };
  var start = function (config) {
      return function __do() {
          var v = Signal_Channel.channel(Data_List_Types.Nil.value)();
          var mapAffect = function (affect) {
              return Effect_Aff.launchAff(Control_Bind.bind(Effect_Aff.bindAff)(affect)(function (v1) {
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit);
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(0.0))(function () {
                          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Signal_Channel.send(v)(Data_List.singleton(v1.value0)));
                      });
                  };
                  throw new Error("Failed pattern match at Pux line 62, column 9 - line 66, column 54: " + [ v1.constructor.name ]);
              }));
          };
          var foldState = function (effModel) {
              return function (ev) {
                  return config.foldp(ev)(effModel.state);
              };
          };
          var foldEvents = function (evs) {
              return function (effModel) {
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(foldState)(noEffects(effModel.state))(evs);
              };
          };
          var evSignal = Signal_Channel.subscribe(v);
          var input = Data_Maybe.fromJust()(Signal.mergeMany(Data_Functor.functorArray)(Data_Foldable.foldableArray)(Data_Array.snoc(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Signal.functorSignal)(Data_List.singleton))(config.inputs))(evSignal)));
          var effModelSignal = Signal.foldp(foldEvents)(noEffects(config.initialState))(input);
          var effectsSignal = Signal.flippedMap(Signal.functorSignal)(effModelSignal)(function ($11) {
              return Data_Functor.map(Data_Functor.functorArray)(mapAffect)((function (v1) {
                  return v1.effects;
              })($11));
          });
          var stateSignal = Signal["dropRepeats'"](Signal.flippedMap(Signal.functorSignal)(effModelSignal)(function (v1) {
              return v1.state;
          }));
          var htmlSignal = Signal.flippedMap(Signal.functorSignal)(stateSignal)(config.view);
          Signal.runSignal(Signal.flippedMap(Signal.functorSignal)(effectsSignal)(Data_Foldable.sequence_(Effect.applicativeEffect)(Data_Foldable.foldableArray)))();
          return $foreign.start_({
              markup: htmlSignal,
              state: stateSignal,
              events: input,
              input: v
          });
      };
  };
  exports["noEffects"] = noEffects;
  exports["onlyEffects"] = onlyEffects;
  exports["start"] = start;
})(PS["Pux"] = PS["Pux"] || {});
(function(exports) {
    'use strict';

  // module Pux.Renderer.React

  var createReactClass = (typeof require === 'function' && require('create-react-class'))
           || (typeof window === 'object' && window.createReactClass);

  var React = (typeof require === 'function' && require('react'))
           || (typeof window === 'object' && window.React);

  var class_cache = {};

  var props_cache = {
    index: 0
  };

  exports.renderToDOM_ = function (selector) {
    var ReactDOM = (typeof require === 'function' && require('react-dom'))
                || (typeof window === 'object' && window.ReactDOM);

    return function (reactClass) {
      return function () {
        ReactDOM.render(React.createElement(reactClass), document.querySelector(selector))
      };
    };
  };

  // Return a React component from virtual DOM signal.
  exports.toReact = function (vdomSignal) {
    var isBrowser = typeof window === 'object';

    // Sets the focus of element with "data-focused" attribute (`focused` constructor).
    // Provides declarative focus control.
    function setFocus () {
      if (isBrowser && window.__puxActiveElement === true) {
        if (window.__puxActiveElement !== document.activeElement) {
          var el = window.__puxActiveElement = document.querySelector('[data-focused]')
          if (el !== null && document.activeElement !== el) {
            el.focus();
          }
        }
      }
    }

    return createReactClass({
      componentWillMount: function () {
        var ctx = this;
        var subscribed = false;
        vdomSignal.subscribe(function () {
          if (subscribed === true) {
            ctx.forceUpdate();
          } else {
            subscribed = true;
          }
        });
      },
      componentDidMount: setFocus,
      componentDidUpdate: function () {
        props_cache.index = 0;
        setFocus();
      },
      render: function () {
        var vdom = vdomSignal.get();

        if (vdom.length === 1) return vdom[0];

        // Wrap multiple root elements in a div
        return React.createElement('div', null, vdom);
      }
    });
  };

  exports.reactAttr = function (str) {
    return str;
  };

  exports.reactHandler = function (input) {
    return function (handler) {
      return function (ev) {
        if (!ev || ev.nativeEvent === undefined) {
          input(handler(ev))();
        } else {
          input(handler(ev.nativeEvent))();
        }
      };
    };
  };

  // Wraps memoized views in a component class which only re-renders if the state
  // has changed.
  var PureComponent = createReactClass({
    shouldComponentUpdate: function (nextProps) {
      if (nextProps.state.st === undefined) return true;
      return nextProps.state.st !== this.props.state.st;
    },
    render: function () {
      return this.props.children;
    }
  });

  exports.reactElement = function (name, attrs, children) {
    // convert smolder attribute names to react attribute names
    var reactAttrs = {};
    for (var key in attrs) {
      if (attrMap[key]) {
        reactAttrs[attrMap[key]] = attrs[key];
      } else {
        reactAttrs[key] = attrs[key];
      }
    }

    if (reactAttrs.dangerouslySetInnerHTML !== undefined) {
      reactAttrs.dangerouslySetInnerHTML = { __html : reactAttrs.dangerouslySetInnerHTML };
    }

    // Support declarative focus attribute
    if (reactAttrs.focused !== undefined) {
      if (typeof window === 'object') {
        window.__puxActiveElement = true;
        reactAttrs['data-focused'] = 'focused';
      }
    }

    // Parse inline style, because React expects a map instead of a string.
    // Skipped if Preact is detected, because it supports a string.
    if (reactAttrs.style !== undefined) {
      reactAttrs.style = reactAttrs.style.split(';').reduce(function (prev, curr) {
        if (!curr) return prev;
        var prop = curr.split(':');
        var key = prop[0].replace(/^ */, '').replace(/ *$/, '').replace(/(-\w)/g, function (m, w) {
          return w[1].toUpperCase();
        });
        var val = prop[1].replace(/^ */, '').replace(/ *$/, '');
        prev[key] = val;
        return prev;
      }, {});
    }

    if (name === 'style') {
      // Convert style element children to string
      if (children !== null && children.length) {
        reactAttrs.dangerouslySetInnerHTML = { __html: children.join(' ') };
        children = null
      }
    } else if (name === 'reactclass') {
      // Support rendering of foreign react classes registered through
      // `registerClass`
      var component = class_cache[reactAttrs['data-pux-react-class']];
      var props = props_cache[reactAttrs['data-pux-react-props']];

      if (props === undefined) props = {};

      for (var key in reactAttrs) {
        if (key !== 'data-pux-react-class') {
          props[key] = reactAttrs[key];
        }
      }

      if (component) {
        return React.createElement(component, props, children);
      } else {
        return React.createElement('div', reactAttrs, children);
      }
    }

    // Eliminate React "key" errors for parents with a single child
    // (React checks for keys when children is passed as an array)
    if (children !== null) {
      if (children.length === 1) {
        children = children[0];
      } else if (children.length === 0) {
        children = undefined;
      }
    }

    // Cache react element. If the same node is rendered again the cached element will be used.
    if (name === 'thunk') {
      return React.createElement(PureComponent, reactAttrs, children);
    }

    return React.createElement(name, reactAttrs, children);
  };

  exports.reactText = function (string) {
    return string;
  };

  // Normalize Smolder attribute names with React attribute names
  var attrMap = {
    'accesskey': 'accessKey',
    'allowfullscreen': 'allowFullScreen',
    'allowtransparency': 'allowTransparency',
    'autocomplete': 'autoComplete',
    'autofocus': 'autoFocus',
    'autoplay': 'autoPlay',
    'cellpadding': 'cellPadding',
    'cellspacing': 'cellSpacing',
    'charset': 'charSet',
    'class': 'className',
    'classid': 'classID',
    'colspan': 'colSpan',
    'contextmenu': 'contextMenu',
    'crossorigin': 'crossOrigin',
    'datetime': 'dateTime',
    'enctype': 'encType',
    'formaction': 'formAction',
    'formenctype': 'formEncType',
    'formmethod': 'formMethod',
    'formnovalidate': 'formNoValidate',
    'formtarget': 'formTarget',
    'frameborder': 'frameBorder',
    'for': 'htmlFor',
    'inputmode': 'inputMode',
    'keyparams': 'keyParams',
    'keytype': 'keyType',
    'marginheight': 'marginHeight',
    'marginwidth': 'marginWidth',
    'maxlength': 'maxLength',
    'mediagroup': 'mediaGroup',
    'minlength': 'minLength',
    'novalidate': 'noValidate',
    'radiogroup': 'radioGroup',
    'readonly': 'readOnly',
    'rowspan': 'rowSpan',
    'spellcheck': 'spellCheck',
    'srcdoc': 'srcDoc',
    'srclang': 'srcLang',
    'srcset': 'srcSet',
    'tabindex': 'tabIndex',
    'usemap': 'useMap'
  }
})(PS["Pux.Renderer.React"] = PS["Pux.Renderer.React"] || {});
(function(exports) {exports.targetValue = function (ev) {
    var target = ev['target'];
    if (target === undefined) return '';
    var value = target['value'];
    if (value === undefined) return '';
    return value;
  };
})(PS["Pux.DOM.Events"] = PS["Pux.DOM.Events"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Pux.DOM.Events"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];
  var Web_Event_Internal_Types = PS["Web.Event.Internal.Types"];    
  var onClick = Text_Smolder_Markup.on("onClick");
  var onChange = Text_Smolder_Markup.on("onChange");
  exports["onChange"] = onChange;
  exports["onClick"] = onClick;
  exports["targetValue"] = $foreign.targetValue;
})(PS["Pux.DOM.Events"] = PS["Pux.DOM.Events"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Pux.DOM.HTML"];
  var CSS_Render = PS["CSS.Render"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Data_CatList = PS["Data.CatList"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Unit = PS["Data.Unit"];
  var Pux_DOM_Events = PS["Pux.DOM.Events"];
  var Text_Smolder_HTML = PS["Text.Smolder.HTML"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];                 
  var style = function (css) {
      return Text_Smolder_HTML.style(Text_Smolder_Markup.text(Data_Maybe.fromMaybe("")(CSS_Render.renderedSheet(CSS_Render.render(css)))));
  };
  exports["style"] = style;
})(PS["Pux.DOM.HTML"] = PS["Pux.DOM.HTML"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS_Render = PS["CSS.Render"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Text_Smolder_HTML_Attributes = PS["Text.Smolder.HTML.Attributes"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];                 
  var style = function (css) {
      return Text_Smolder_HTML_Attributes.style(Data_Maybe.fromMaybe("")(CSS_Render.renderedInline(CSS_Render.render(css))));
  };
  var key = Text_Smolder_Markup.attribute("key");
  exports["key"] = key;
  exports["style"] = style;
})(PS["Pux.DOM.HTML.Attributes"] = PS["Pux.DOM.HTML.Attributes"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Pux.Renderer.React"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Data_Array = PS["Data.Array"];
  var Data_CatList = PS["Data.CatList"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NaturalTransformation = PS["Data.NaturalTransformation"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect = PS["Effect"];
  var Foreign_Object = PS["Foreign.Object"];
  var Prelude = PS["Prelude"];
  var Pux_DOM_HTML = PS["Pux.DOM.HTML"];
  var Pux_DOM_HTML_Attributes = PS["Pux.DOM.HTML.Attributes"];
  var React = PS["React"];
  var Signal = PS["Signal"];
  var Signal_Channel = PS["Signal.Channel"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];                 
  var renderAttrs = function (input) {
      return function (attrs) {
          return function (handlers) {
              var toTupleH = function (v) {
                  return new Data_Tuple.Tuple(v.value0, input(v.value1));
              };
              var toTupleA = function (v) {
                  return new Data_Tuple.Tuple(v.value0, $foreign.reactAttr(v.value1));
              };
              var tuples = Data_Semigroup.append(Data_CatList.semigroupCatList)(Data_Functor.map(Data_CatList.functorCatList)(toTupleA)(attrs))(Data_Functor.map(Data_CatList.functorCatList)(toTupleH)(handlers));
              return Foreign_Object.fromFoldable(Data_CatList.foldableCatList)(tuples);
          };
      };
  };
  var renderNodes = function (input) {
      return function (markup) {
          return Control_Monad_State.execState(Control_Monad_Free.foldFree(Control_Monad_State_Trans.monadRecStateT(Control_Monad_Rec_Class.monadRecIdentity))(renderItem(input))(markup))([  ]);
      };
  };
  var renderItem = function (input) {
      return function (v) {
          if (v instanceof Text_Smolder_Markup.Element) {
              var kids = renderNodes(input)(v.value2);
              var el = $foreign.reactElement(v.value1, renderAttrs(input)(v.value3)(v.value4), Data_Nullable.toNullable(new Data_Maybe.Just(kids)));
              return Control_Monad_State_Class.state(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (s) {
                  return Data_Tuple.Tuple.create(v.value5)(Data_Array.snoc(s)(el));
              });
          };
          if (v instanceof Text_Smolder_Markup.Content) {
              return Control_Monad_State_Class.state(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (s) {
                  return Data_Tuple.Tuple.create(v.value1)(Data_Array.snoc(s)($foreign.reactText(v.value0)));
              });
          };
          if (v instanceof Text_Smolder_Markup.Empty) {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(v.value0);
          };
          throw new Error("Failed pattern match at Pux.Renderer.React line 110, column 1 - line 110, column 107: " + [ input.constructor.name, v.constructor.name ]);
      };
  };
  var hook = function (input) {
      return function (a) {
          return Signal_Channel.send(input)(Data_List.singleton(a));
      };
  };
  var renderToReact = function (markup) {
      return function (input) {
          return Control_Applicative.pure(Effect.applicativeEffect)($foreign.toReact(Signal.flippedMap(Signal.functorSignal)(markup)(renderNodes($foreign.reactHandler(hook(input))))));
      };
  };
  var renderToDOM = function (selector) {
      return function (markup) {
          return function (input) {
              return Control_Bind.bindFlipped(Effect.bindEffect)($foreign.renderToDOM_(selector))(renderToReact(markup)(input));
          };
      };
  };
  exports["renderToDOM"] = renderToDOM;
  exports["renderToReact"] = renderToReact;
})(PS["Pux.Renderer.React"] = PS["Pux.Renderer.React"] || {});
(function(exports) {
    "use strict";

  exports.defaultPrevented = function (e) {
    return e.defaultPrevented;
  };

  exports.preventDefault = function (e) {
    return function () {
      return e.preventDefault();
    };
  };
})(PS["Web.Event.Event"] = PS["Web.Event.Event"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.Event.Event"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_DateTime_Instant = PS["Data.DateTime.Instant"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Web_Event_EventPhase = PS["Web.Event.EventPhase"];
  var Web_Event_Internal_Types = PS["Web.Event.Internal.Types"];
  exports["preventDefault"] = $foreign.preventDefault;
  exports["defaultPrevented"] = $foreign.defaultPrevented;
})(PS["Web.Event.Event"] = PS["Web.Event.Event"] || {});
(function(exports) {
    "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.Event.EventTarget"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_Event_Internal_Types = PS["Web.Event.Internal.Types"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function(exports) {
    "use strict";

  exports._body = function (doc) {
    return function () {
      return doc.body;
    };
  };
})(PS["Web.HTML.HTMLDocument"] = PS["Web.HTML.HTMLDocument"] || {});
(function(exports) {
    "use strict";                                             

  exports._querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };

  exports.querySelectorAll = function (selector) {
    return function (node) {
      return function () {
        return node.querySelectorAll(selector);
      };
    };
  };
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});
(function(exports) {
    "use strict";

  exports.toArray = function (list) {
    return function () {
      return [].slice.call(list);
    };
  };
})(PS["Web.DOM.NodeList"] = PS["Web.DOM.NodeList"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.DOM.NodeList"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Web_DOM_Internal_Types = PS["Web.DOM.Internal.Types"];
  exports["toArray"] = $foreign.toArray;
})(PS["Web.DOM.NodeList"] = PS["Web.DOM.NodeList"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.DOM.ParentNode"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Web_DOM_HTMLCollection = PS["Web.DOM.HTMLCollection"];
  var Web_DOM_Internal_Types = PS["Web.DOM.Internal.Types"];
  var Web_DOM_NodeList = PS["Web.DOM.NodeList"];                 
  var QuerySelector = function (x) {
      return x;
  };
  var querySelector = function (qs) {
      return function ($3) {
          return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign._querySelector(qs)($3));
      };
  };                                        
  var newtypeQuerySelector = new Data_Newtype.Newtype(function (n) {
      return n;
  }, QuerySelector);
  exports["QuerySelector"] = QuerySelector;
  exports["querySelector"] = querySelector;
  exports["newtypeQuerySelector"] = newtypeQuerySelector;
  exports["querySelectorAll"] = $foreign.querySelectorAll;
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});
(function(exports) {
    "use strict";

  exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
    var obj = value;
    while (obj != null) {
      var proto = Object.getPrototypeOf(obj);
      var ctor = proto.constructor.name;
      if (ctor === name) {
        return just(value);
      } else if (ctor === "Object") {
        return nothing;
      }
      obj = proto;
    }
    return nothing;
  };
})(PS["Web.Internal.FFI"] = PS["Web.Internal.FFI"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.Internal.FFI"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];                 
  var unsafeReadProtoTagged = function (name) {
      return function (value) {
          return $foreign._unsafeReadProtoTagged(Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
      };
  };
  exports["unsafeReadProtoTagged"] = unsafeReadProtoTagged;
})(PS["Web.Internal.FFI"] = PS["Web.Internal.FFI"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.DOM.Element"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_ChildNode = PS["Web.DOM.ChildNode"];
  var Web_DOM_Internal_Types = PS["Web.DOM.Internal.Types"];
  var Web_DOM_NonDocumentTypeChildNode = PS["Web.DOM.NonDocumentTypeChildNode"];
  var Web_DOM_ParentNode = PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_Internal_FFI = PS["Web.Internal.FFI"];                 
  var toParentNode = Unsafe_Coerce.unsafeCoerce;                                       
  var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
  exports["fromNode"] = fromNode;
  exports["toParentNode"] = toParentNode;
})(PS["Web.DOM.Element"] = PS["Web.DOM.Element"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.HTML.HTMLElement"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM = PS["Web.DOM"];
  var Web_DOM_DOMTokenList = PS["Web.DOM.DOMTokenList"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_DOM_Internal_Types = PS["Web.DOM.Internal.Types"];
  var Web_DOM_NonDocumentTypeChildNode = PS["Web.DOM.NonDocumentTypeChildNode"];
  var Web_DOM_ParentNode = PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];                 
  var toParentNode = Unsafe_Coerce.unsafeCoerce;
  exports["toParentNode"] = toParentNode;
})(PS["Web.HTML.HTMLElement"] = PS["Web.HTML.HTMLElement"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.HTML.HTMLDocument"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_Document = PS["Web.DOM.Document"];
  var Web_DOM_Internal_Types = PS["Web.DOM.Internal.Types"];
  var Web_DOM_NonElementParentNode = PS["Web.DOM.NonElementParentNode"];
  var Web_DOM_ParentNode = PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_HTML_HTMLDocument_ReadyState = PS["Web.HTML.HTMLDocument.ReadyState"];
  var Web_HTML_HTMLElement = PS["Web.HTML.HTMLElement"];
  var Web_HTML_HTMLScriptElement = PS["Web.HTML.HTMLScriptElement"];
  var Web_Internal_FFI = PS["Web.Internal.FFI"];                 
  var toParentNode = Unsafe_Coerce.unsafeCoerce;
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;
  var body = function ($3) {
      return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign._body($3));
  };
  exports["toParentNode"] = toParentNode;
  exports["toEventTarget"] = toEventTarget;
  exports["body"] = body;
})(PS["Web.HTML.HTMLDocument"] = PS["Web.HTML.HTMLDocument"] || {});
(function(exports) {
    "use strict";
  exports.pushState = function(a) {
    return function(docTitle) {
      return function(url) {
        return function(history) {
          return function() {
            return history.pushState(a, docTitle, url);
          };
        };
      };
    };
  };
})(PS["Web.HTML.History"] = PS["Web.HTML.History"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.HTML.History"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Effect = PS["Effect"];
  var Foreign = PS["Foreign"];
  var Prelude = PS["Prelude"];
  exports["pushState"] = $foreign.pushState;
})(PS["Web.HTML.History"] = PS["Web.HTML.History"] || {});
(function(exports) {
    "use strict";

  exports.hash = function (location) {
    return function () {
      return location.hash;
    };
  };
})(PS["Web.HTML.Location"] = PS["Web.HTML.Location"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.HTML.Location"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  exports["hash"] = $foreign.hash;
})(PS["Web.HTML.Location"] = PS["Web.HTML.Location"] || {});
(function(exports) {
    "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };

  exports.location = function (window) {
    return function () {
      return window.location;
    };
  };

  exports.history = function(window) {
    return function() {
      return window.history;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.HTML.Window"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_HTML_HTMLDocument = PS["Web.HTML.HTMLDocument"];
  var Web_HTML_History = PS["Web.HTML.History"];
  var Web_HTML_Location = PS["Web.HTML.Location"];
  var Web_HTML_Navigator = PS["Web.HTML.Navigator"];
  var Web_Storage_Storage = PS["Web.Storage.Storage"];
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;
  exports["toEventTarget"] = toEventTarget;
  exports["document"] = $foreign.document;
  exports["location"] = $foreign.location;
  exports["history"] = $foreign.history;
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.HTML"];
  var Effect = PS["Effect"];
  var Web_HTML_HTMLAnchorElement = PS["Web.HTML.HTMLAnchorElement"];
  var Web_HTML_HTMLAreaElement = PS["Web.HTML.HTMLAreaElement"];
  var Web_HTML_HTMLAudioElement = PS["Web.HTML.HTMLAudioElement"];
  var Web_HTML_HTMLBRElement = PS["Web.HTML.HTMLBRElement"];
  var Web_HTML_HTMLBaseElement = PS["Web.HTML.HTMLBaseElement"];
  var Web_HTML_HTMLBodyElement = PS["Web.HTML.HTMLBodyElement"];
  var Web_HTML_HTMLButtonElement = PS["Web.HTML.HTMLButtonElement"];
  var Web_HTML_HTMLCanvasElement = PS["Web.HTML.HTMLCanvasElement"];
  var Web_HTML_HTMLDListElement = PS["Web.HTML.HTMLDListElement"];
  var Web_HTML_HTMLDataElement = PS["Web.HTML.HTMLDataElement"];
  var Web_HTML_HTMLDataListElement = PS["Web.HTML.HTMLDataListElement"];
  var Web_HTML_HTMLDivElement = PS["Web.HTML.HTMLDivElement"];
  var Web_HTML_HTMLDocument = PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = PS["Web.HTML.HTMLElement"];
  var Web_HTML_HTMLEmbedElement = PS["Web.HTML.HTMLEmbedElement"];
  var Web_HTML_HTMLFieldSetElement = PS["Web.HTML.HTMLFieldSetElement"];
  var Web_HTML_HTMLFormElement = PS["Web.HTML.HTMLFormElement"];
  var Web_HTML_HTMLHRElement = PS["Web.HTML.HTMLHRElement"];
  var Web_HTML_HTMLHeadElement = PS["Web.HTML.HTMLHeadElement"];
  var Web_HTML_HTMLHeadingElement = PS["Web.HTML.HTMLHeadingElement"];
  var Web_HTML_HTMLIFrameElement = PS["Web.HTML.HTMLIFrameElement"];
  var Web_HTML_HTMLImageElement = PS["Web.HTML.HTMLImageElement"];
  var Web_HTML_HTMLInputElement = PS["Web.HTML.HTMLInputElement"];
  var Web_HTML_HTMLKeygenElement = PS["Web.HTML.HTMLKeygenElement"];
  var Web_HTML_HTMLLIElement = PS["Web.HTML.HTMLLIElement"];
  var Web_HTML_HTMLLabelElement = PS["Web.HTML.HTMLLabelElement"];
  var Web_HTML_HTMLLegendElement = PS["Web.HTML.HTMLLegendElement"];
  var Web_HTML_HTMLLinkElement = PS["Web.HTML.HTMLLinkElement"];
  var Web_HTML_HTMLMapElement = PS["Web.HTML.HTMLMapElement"];
  var Web_HTML_HTMLMediaElement = PS["Web.HTML.HTMLMediaElement"];
  var Web_HTML_HTMLMetaElement = PS["Web.HTML.HTMLMetaElement"];
  var Web_HTML_HTMLMeterElement = PS["Web.HTML.HTMLMeterElement"];
  var Web_HTML_HTMLModElement = PS["Web.HTML.HTMLModElement"];
  var Web_HTML_HTMLOListElement = PS["Web.HTML.HTMLOListElement"];
  var Web_HTML_HTMLObjectElement = PS["Web.HTML.HTMLObjectElement"];
  var Web_HTML_HTMLOptGroupElement = PS["Web.HTML.HTMLOptGroupElement"];
  var Web_HTML_HTMLOptionElement = PS["Web.HTML.HTMLOptionElement"];
  var Web_HTML_HTMLOutputElement = PS["Web.HTML.HTMLOutputElement"];
  var Web_HTML_HTMLParagraphElement = PS["Web.HTML.HTMLParagraphElement"];
  var Web_HTML_HTMLParamElement = PS["Web.HTML.HTMLParamElement"];
  var Web_HTML_HTMLPreElement = PS["Web.HTML.HTMLPreElement"];
  var Web_HTML_HTMLProgressElement = PS["Web.HTML.HTMLProgressElement"];
  var Web_HTML_HTMLQuoteElement = PS["Web.HTML.HTMLQuoteElement"];
  var Web_HTML_HTMLScriptElement = PS["Web.HTML.HTMLScriptElement"];
  var Web_HTML_HTMLSelectElement = PS["Web.HTML.HTMLSelectElement"];
  var Web_HTML_HTMLSourceElement = PS["Web.HTML.HTMLSourceElement"];
  var Web_HTML_HTMLSpanElement = PS["Web.HTML.HTMLSpanElement"];
  var Web_HTML_HTMLStyleElement = PS["Web.HTML.HTMLStyleElement"];
  var Web_HTML_HTMLTableCaptionElement = PS["Web.HTML.HTMLTableCaptionElement"];
  var Web_HTML_HTMLTableCellElement = PS["Web.HTML.HTMLTableCellElement"];
  var Web_HTML_HTMLTableColElement = PS["Web.HTML.HTMLTableColElement"];
  var Web_HTML_HTMLTableDataCellElement = PS["Web.HTML.HTMLTableDataCellElement"];
  var Web_HTML_HTMLTableElement = PS["Web.HTML.HTMLTableElement"];
  var Web_HTML_HTMLTableHeaderCellElement = PS["Web.HTML.HTMLTableHeaderCellElement"];
  var Web_HTML_HTMLTableRowElement = PS["Web.HTML.HTMLTableRowElement"];
  var Web_HTML_HTMLTableSectionElement = PS["Web.HTML.HTMLTableSectionElement"];
  var Web_HTML_HTMLTemplateElement = PS["Web.HTML.HTMLTemplateElement"];
  var Web_HTML_HTMLTextAreaElement = PS["Web.HTML.HTMLTextAreaElement"];
  var Web_HTML_HTMLTimeElement = PS["Web.HTML.HTMLTimeElement"];
  var Web_HTML_HTMLTitleElement = PS["Web.HTML.HTMLTitleElement"];
  var Web_HTML_HTMLTrackElement = PS["Web.HTML.HTMLTrackElement"];
  var Web_HTML_HTMLUListElement = PS["Web.HTML.HTMLUListElement"];
  var Web_HTML_HTMLVideoElement = PS["Web.HTML.HTMLVideoElement"];
  var Web_HTML_History = PS["Web.HTML.History"];
  var Web_HTML_Location = PS["Web.HTML.Location"];
  var Web_HTML_Navigator = PS["Web.HTML.Navigator"];
  var Web_HTML_Window = PS["Web.HTML.Window"];
  exports["window"] = $foreign.window;
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function(exports) {
    "use strict";

  exports.key = function (e) {
    return e.key;
  };
})(PS["Web.UIEvent.KeyboardEvent"] = PS["Web.UIEvent.KeyboardEvent"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.UIEvent.KeyboardEvent"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_Internal_FFI = PS["Web.Internal.FFI"];
  var Web_UIEvent_UIEvent = PS["Web.UIEvent.UIEvent"];                      
  var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("KeyboardEvent");
  exports["fromEvent"] = fromEvent;
  exports["key"] = $foreign.key;
})(PS["Web.UIEvent.KeyboardEvent"] = PS["Web.UIEvent.KeyboardEvent"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_String = PS["Data.String"];
  var Data_String_CodePoints = PS["Data.String.CodePoints"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Global = PS["Global"];                 
  var Path = (function () {
      function Path(value0) {
          this.value0 = value0;
      };
      Path.create = function (value0) {
          return new Path(value0);
      };
      return Path;
  })();
  var Query = (function () {
      function Query(value0) {
          this.value0 = value0;
      };
      Query.create = function (value0) {
          return new Query(value0);
      };
      return Query;
  })();
  var Match = function (x) {
      return x;
  };
  var parseSegment = function (parser) {
      return Match(function (r) {
          if (r instanceof Data_List_Types.Cons && r.value0 instanceof Path) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create(r.value1))(parser(r.value0.value0));
          };
          return Data_Maybe.Nothing.value;
      });
  };                                             
  var parseQuery = function (s) {
      var parts = Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_String_Common.split("&")(Data_String_CodePoints.drop(1)(s)));
      var part2tuple = function (part) {
          var param$prime = Data_String_Common.split("=")(part);
          return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Array.length(param$prime) === 2))(function () {
              return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(Data_Array.head(param$prime)))(Data_Array.index(param$prime)(1));
          });
      };
      return Query.create(Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_List_Types.foldableList)(Data_List.catMaybes(Data_Functor.map(Data_List_Types.functorList)(part2tuple)(parts))));
  };
  var routeFromUrl = function (v) {
      if (v === "/") {
          return Data_List_Types.Nil.value;
      };
      var parsePath = function (query) {
          var prependPath = Data_Profunctor.lcmap(Data_Profunctor.profunctorFn)(Path.create)(Data_List_Types.Cons.create);
          return function ($68) {
              return Data_List.drop(1)(Data_Foldable.foldr(Data_Foldable.foldableArray)(prependPath)(query)(Data_String_Common.split("/")($68)));
          };
      };
      var v1 = Data_String_CodePoints.indexOf("?")(v);
      if (v1 instanceof Data_Maybe.Nothing) {
          return parsePath(Data_List_Types.Nil.value)(v);
      };
      if (v1 instanceof Data_Maybe.Just) {
          var queryPart = parseQuery(Data_String_CodePoints.drop(v1.value0)(v));
          return parsePath(new Data_List_Types.Cons(queryPart, Data_List_Types.Nil.value))(Data_String_CodePoints.take(v1.value0)(v));
      };
      throw new Error("Failed pattern match at Pux.Router line 144, column 20 - line 148, column 82: " + [ v1.constructor.name ]);
  };
  var router = function (url) {
      return function (v) {
          var result = v(routeFromUrl(url));
          return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($69) {
              return Data_Maybe.Just.create(Data_Tuple.snd($69));
          })(result);
      };
  };   
  var matchFunctor = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Match(function (r) {
              return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function (t) {
                  return Data_Maybe.Just.create(new Data_Tuple.Tuple(Data_Tuple.fst(t), f(Data_Tuple.snd(t))));
              })(v(r));
          });
      };
  });
  var matchApply = new Control_Apply.Apply(function () {
      return matchFunctor;
  }, function (v) {
      return function (v1) {
          return Match(function (r1) {
              var v2 = v(r1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  return Data_Maybe.Nothing.value;
              };
              if (v2 instanceof Data_Maybe.Just) {
                  var v3 = v1(v2.value0.value0);
                  if (v3 instanceof Data_Maybe.Nothing) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (v3 instanceof Data_Maybe.Just) {
                      return Data_Maybe.Just.create(new Data_Tuple.Tuple(v3.value0.value0, v2.value0.value1(v3.value0.value1)));
                  };
                  throw new Error("Failed pattern match at Pux.Router line 132, column 28 - line 134, column 51: " + [ v3.constructor.name ]);
              };
              throw new Error("Failed pattern match at Pux.Router line 130, column 5 - line 134, column 51: " + [ v2.constructor.name ]);
          });
      };
  });
  var matchAlt = new Control_Alt.Alt(function () {
      return matchFunctor;
  }, function (v) {
      return function (v1) {
          return Match(function (r) {
              var v2 = v(r);
              if (v2 instanceof Data_Maybe.Nothing) {
                  return v1(r);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  return new Data_Maybe.Just(v2.value0);
              };
              throw new Error("Failed pattern match at Pux.Router line 124, column 5 - line 126, column 24: " + [ v2.constructor.name ]);
          });
      };
  });  
  var lit = function (part) {
      var parse = function (s) {
          if (s === part) {
              return new Data_Maybe.Just(Data_Unit.unit);
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at Pux.Router line 55, column 5 - line 57, column 28: " + [ s.constructor.name ]);
      };
      return parseSegment(parse);
  };                                            
  var end = Match(function (r) {
      if (r instanceof Data_List_Types.Cons && (r.value0 instanceof Query && r.value1 instanceof Data_List_Types.Nil)) {
          return Data_Maybe.Just.create(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_Unit.unit));
      };
      if (r instanceof Data_List_Types.Nil) {
          return Data_Maybe.Just.create(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_Unit.unit));
      };
      return Data_Maybe.Nothing.value;
  });
  exports["Match"] = Match;
  exports["Path"] = Path;
  exports["Query"] = Query;
  exports["router"] = router;
  exports["lit"] = lit;
  exports["parseSegment"] = parseSegment;
  exports["end"] = end;
  exports["matchFunctor"] = matchFunctor;
  exports["matchAlt"] = matchAlt;
  exports["matchApply"] = matchApply;
})(PS["Pux.Router"] = PS["Pux.Router"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Prelude = PS["Prelude"];
  var Pux_Router = PS["Pux.Router"];                 
  var NotFound = (function () {
      function NotFound(value0) {
          this.value0 = value0;
      };
      NotFound.create = function (value0) {
          return new NotFound(value0);
      };
      return NotFound;
  })();
  var Opening = (function () {
      function Opening() {

      };
      Opening.value = new Opening();
      return Opening;
  })();
  var Tournament = (function () {
      function Tournament() {

      };
      Tournament.value = new Tournament();
      return Tournament;
  })();
  var Award = (function () {
      function Award() {

      };
      Award.value = new Award();
      return Award;
  })();
  var toPathname = function (v) {
      if (v instanceof NotFound) {
          return v.value0;
      };
      if (v instanceof Opening) {
          return "/";
      };
      if (v instanceof Tournament) {
          return "/tournament";
      };
      if (v instanceof Award) {
          return "/award";
      };
      throw new Error("Failed pattern match at Yousort.Route line 30, column 1 - line 30, column 30: " + [ v.constructor.name ]);
  };
  var toHash = function (u) {
      return "#" + toPathname(u);
  };
  var orDefault = function ($18) {
      return Data_Maybe.fromMaybe(NotFound.create($18));
  };
  var fromPathname$prime = function (u) {
      return Pux_Router.router(u)(Control_Alt.alt(Pux_Router.matchAlt)(Control_Alt.alt(Pux_Router.matchAlt)(Data_Functor.voidRight(Pux_Router.matchFunctor)(Opening.value)(Pux_Router.end))(Control_Apply.applyFirst(Pux_Router.matchApply)(Data_Functor.voidRight(Pux_Router.matchFunctor)(Tournament.value)(Pux_Router.lit("tournament")))(Pux_Router.end)))(Control_Apply.applyFirst(Pux_Router.matchApply)(Data_Functor.voidRight(Pux_Router.matchFunctor)(Award.value)(Pux_Router.lit("award")))(Pux_Router.end)));
  };
  var fromHash = function (v) {
      if (v === "") {
          return Opening.value;
      };
      return orDefault(v)(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String_CodeUnits.uncons(v))(function (v1) {
          if (v1.head === "#") {
              return fromPathname$prime(v1.tail);
          };
          return Data_Maybe.Nothing.value;
      }));
  };
  var eqRoute = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof NotFound && y instanceof NotFound) {
              return x.value0 === y.value0;
          };
          if (x instanceof Opening && y instanceof Opening) {
              return true;
          };
          if (x instanceof Tournament && y instanceof Tournament) {
              return true;
          };
          if (x instanceof Award && y instanceof Award) {
              return true;
          };
          return false;
      };
  });
  exports["NotFound"] = NotFound;
  exports["Opening"] = Opening;
  exports["Tournament"] = Tournament;
  exports["Award"] = Award;
  exports["toPathname"] = toPathname;
  exports["fromHash"] = fromHash;
  exports["toHash"] = toHash;
  exports["eqRoute"] = eqRoute;
})(PS["Yousort.Route"] = PS["Yousort.Route"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_NonEmpty = PS["Data.Array.NonEmpty"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_Tournament = PS["Data.Tournament"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Prelude = PS["Prelude"];
  var Yousort_Route = PS["Yousort.Route"];                 
  var Choose = (function () {
      function Choose(value0) {
          this.value0 = value0;
      };
      Choose.create = function (value0) {
          return new Choose(value0);
      };
      return Choose;
  })();
  var Hold = (function () {
      function Hold() {

      };
      Hold.value = new Hold();
      return Hold;
  })();
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Image = (function () {
      function Image(value0) {
          this.value0 = value0;
      };
      Image.create = function (value0) {
          return new Image(value0);
      };
      return Image;
  })();
  var Audio = (function () {
      function Audio(value0) {
          this.value0 = value0;
      };
      Audio.create = function (value0) {
          return new Audio(value0);
      };
      return Audio;
  })();
  var YouTubeVideo = (function () {
      function YouTubeVideo(value0) {
          this.value0 = value0;
      };
      YouTubeVideo.create = function (value0) {
          return new YouTubeVideo(value0);
      };
      return YouTubeVideo;
  })();
  var showMedia = function (v) {
      return "{url:\"" + (v.url + (",caption:\"" + (v.caption + (",description:\"" + (v.description + "\"}")))));
  };
  var showComparable = new Data_Show.Show(function (v) {
      if (v instanceof Text) {
          return "Text{title:\"" + (v.value0.title + (",description:\"" + (v.value0.description + "\"}")));
      };
      if (v instanceof Image) {
          return "Image" + showMedia(v.value0);
      };
      if (v instanceof Audio) {
          return "Audio" + showMedia(v.value0);
      };
      if (v instanceof YouTubeVideo) {
          return "YouTubeVideo" + showMedia(v.value0);
      };
      throw new Error("Failed pattern match at Yousort.Component.State line 117, column 1 - line 117, column 43: " + [ v.constructor.name ]);
  });
  var parseYouTubeVideoId = function (u) {
      var parseWithRegex = function (p) {
          return function (s) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Data_String_Regex.regex(p)(Data_String_Regex_Flags.noFlags)))(function (v) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String_Regex.match(v)(s))(function (v1) {
                      return Control_Bind.join(Data_Maybe.bindMaybe)(Data_Array.head(Data_Array_NonEmpty.tail(v1)));
                  });
              });
          };
      };
      var parseWatchUrl = parseWithRegex("^https?:\\/\\/(?:www\\.)?youtube\\.com\\/watch\\?.*v=([\\w-]{11})$");
      var parseId = parseWithRegex("^([\\w-]{11})$");
      var parseEmbedUrl = parseWithRegex("^https?:\\/\\/(?:www\\.)?youtube\\.com\\/embed\\/([\\w-]{11})$");
      return Control_Alt.alt(Data_Maybe.altMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)(parseWatchUrl(u))(parseEmbedUrl(u)))(parseId(u));
  };
  var newText = new Text({
      title: Data_Monoid.mempty(Data_Monoid.monoidString),
      description: Data_Monoid.mempty(Data_Monoid.monoidString)
  });
  var newMedia = {
      url: Data_Monoid.mempty(Data_Monoid.monoidString),
      caption: Data_Monoid.mempty(Data_Monoid.monoidString),
      description: Data_Monoid.mempty(Data_Monoid.monoidString)
  };
  var newYouTubeVideo = new YouTubeVideo(newMedia);
  var newImage = new Image(newMedia);
  var newAudio = new Audio(newMedia);
  var toNewEntry = function (v) {
      if (v instanceof Text) {
          return newText;
      };
      if (v instanceof Image) {
          return newImage;
      };
      if (v instanceof Audio) {
          return newAudio;
      };
      if (v instanceof YouTubeVideo) {
          return newYouTubeVideo;
      };
      throw new Error("Failed pattern match at Yousort.Component.State line 73, column 1 - line 73, column 39: " + [ v.constructor.name ]);
  };
  var genericComparable = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof Text) {
          return new Data_Generic_Rep.Inl(x.value0);
      };
      if (x instanceof Image) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
      };
      if (x instanceof Audio) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
      };
      if (x instanceof YouTubeVideo) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0)));
      };
      throw new Error("Failed pattern match at Yousort.Component.State line 113, column 8 - line 113, column 58: " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return new Text(x.value0);
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return new Image(x.value0.value0);
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return new Audio(x.value0.value0.value0);
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
          return new YouTubeVideo(x.value0.value0.value0);
      };
      throw new Error("Failed pattern match at Yousort.Component.State line 113, column 8 - line 113, column 58: " + [ x.constructor.name ]);
  });
  var eqOperation = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Choose && y instanceof Choose) {
              return Data_Eq.eq(Data_Tournament.eqGameResult)(x.value0)(y.value0);
          };
          if (x instanceof Hold && y instanceof Hold) {
              return true;
          };
          return false;
      };
  });
  var eqComparable = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Text && y instanceof Text) {
              return x.value0.description === y.value0.description && x.value0.title === y.value0.title;
          };
          if (x instanceof Image && y instanceof Image) {
              return x.value0.caption === y.value0.caption && x.value0.description === y.value0.description && x.value0.url === y.value0.url;
          };
          if (x instanceof Audio && y instanceof Audio) {
              return x.value0.caption === y.value0.caption && x.value0.description === y.value0.description && x.value0.url === y.value0.url;
          };
          if (x instanceof YouTubeVideo && y instanceof YouTubeVideo) {
              return x.value0.caption === y.value0.caption && x.value0.description === y.value0.description && x.value0.url === y.value0.url;
          };
          return false;
      };
  });
  var validateComparable = function (c) {
      var validateMedia = function (v) {
          return !(Data_String_Common["null"](v.caption) || Data_String_Common["null"](v.url));
      };
      var validate = function (v) {
          if (v instanceof Text) {
              return !Data_String_Common["null"](v.value0.title);
          };
          if (v instanceof Image) {
              return validateMedia(v.value0);
          };
          if (v instanceof Audio) {
              return validateMedia(v.value0);
          };
          if (v instanceof YouTubeVideo) {
              return validateMedia(v.value0) && Data_Maybe.isJust(parseYouTubeVideoId(v.value0.url));
          };
          throw new Error("Failed pattern match at Yousort.Component.State line 92, column 5 - line 92, column 48: " + [ v.constructor.name ]);
      };
      return Data_Eq.notEq(eqComparable)(c)(toNewEntry(c)) && validate(c);
  };
  var defaultState = {
      route: new Yousort_Route.NotFound(Data_Typelevel_Undefined["undefined"]),
      history: Data_Monoid.mempty(Data_List_Types.monoidList),
      tournament: Data_Tournament.fromFoldable(Data_Foldable.foldableArray)([  ]),
      inputEntries: Data_Monoid.mempty(Data_List_Types.monoidList),
      canResume: false,
      editingEntry: Data_Maybe.Nothing.value,
      targetEntryIndex: Data_Maybe.Nothing.value
  };
  exports["Choose"] = Choose;
  exports["Hold"] = Hold;
  exports["Text"] = Text;
  exports["Image"] = Image;
  exports["Audio"] = Audio;
  exports["YouTubeVideo"] = YouTubeVideo;
  exports["newText"] = newText;
  exports["newImage"] = newImage;
  exports["newAudio"] = newAudio;
  exports["newYouTubeVideo"] = newYouTubeVideo;
  exports["newMedia"] = newMedia;
  exports["toNewEntry"] = toNewEntry;
  exports["defaultState"] = defaultState;
  exports["validateComparable"] = validateComparable;
  exports["parseYouTubeVideoId"] = parseYouTubeVideoId;
  exports["eqOperation"] = eqOperation;
  exports["genericComparable"] = genericComparable;
  exports["eqComparable"] = eqComparable;
  exports["showComparable"] = showComparable;
})(PS["Yousort.Component.State"] = PS["Yousort.Component.State"] || {});
(function(exports) {exports.getInstanceImpl = function (c, element) {
      return c.getInstance(element);
  };
})(PS["Materialize.DOM"] = PS["Materialize.DOM"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Materialize.DOM"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Effect = PS["Effect"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Prelude = PS["Prelude"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_DOM_NodeList = PS["Web.DOM.NodeList"];
  var Web_DOM_ParentNode = PS["Web.DOM.ParentNode"];                 
  var InstanceSelectors = function (x) {
      return x;
  };
  var InstanceElement = function (x) {
      return x;
  };
  var Component = function (componentClass, instanceSelectors) {
      this.componentClass = componentClass;
      this.instanceSelectors = instanceSelectors;
  };
  var Init = function (init) {
      this.init = init;
  };
  var Destroy = function (destroy) {
      this.destroy = destroy;
  };
  var newtypeInstanceSelectors = new Data_Newtype.Newtype(function (n) {
      return n;
  }, InstanceSelectors);
  var newtypeInstanceElement = new Data_Newtype.Newtype(function (n) {
      return n;
  }, InstanceElement);
  var instanceSelectors = function (dict) {
      return dict.instanceSelectors;
  };
  var init = function (dict) {
      return dict.init;
  };
  var findElements = function (dictComponent) {
      return function (p) {
          var ss = Data_Newtype.wrap(Web_DOM_ParentNode.newtypeQuerySelector)(Data_Newtype.unwrap(newtypeInstanceSelectors)(instanceSelectors(dictComponent)));
          return function __do() {
              var v = Web_DOM_ParentNode.querySelectorAll(ss)(p)();
              var v1 = Web_DOM_NodeList.toArray(v)();
              return Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.wrap(newtypeInstanceElement))(Data_Array.mapMaybe(Web_DOM_Element.fromNode)(v1));
          };
      };
  };
  var destroy = function (dict) {
      return dict.destroy;
  };
  var componentClass = function (dict) {
      return dict.componentClass;
  };
  var getInstance = function (dictComponent) {
      return function (e) {
          return function __do() {
              var v = componentClass(dictComponent)();
              return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)(function () {
                  return $foreign.getInstanceImpl(v, e);
              })();
          };
      };
  };
  var findInstances = function (dictComponent) {
      return function (p) {
          return function __do() {
              var v = findElements(dictComponent)(p)();
              var v1 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(function ($19) {
                  return getInstance(dictComponent)(Data_Newtype.unwrap(newtypeInstanceElement)($19));
              })(v)();
              return Data_Array.catMaybes(v1);
          };
      };
  };
  exports["Component"] = Component;
  exports["instanceSelectors"] = instanceSelectors;
  exports["componentClass"] = componentClass;
  exports["getInstance"] = getInstance;
  exports["findElements"] = findElements;
  exports["findInstances"] = findInstances;
  exports["Init"] = Init;
  exports["init"] = init;
  exports["Destroy"] = Destroy;
  exports["destroy"] = destroy;
  exports["newtypeInstanceSelectors"] = newtypeInstanceSelectors;
  exports["newtypeInstanceElement"] = newtypeInstanceElement;
})(PS["Materialize.DOM"] = PS["Materialize.DOM"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var Subrow = {};
  var subsetUnionLeft = function (dictUnion) {
      return Subrow;
  };
  var mkSubrecord = function (dictSubrow) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  exports["mkSubrecord"] = mkSubrecord;
  exports["Subrow"] = Subrow;
  exports["subsetUnionLeft"] = subsetUnionLeft;
})(PS["Materialize.Internal.Options"] = PS["Materialize.Internal.Options"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Void = PS["Data.Void"];
  var Prelude = PS["Prelude"];                 
  var Render = function (render) {
      this.render = render;
  };
  var renderVoid = new Render(Data_Void.absurd);
  var renderString$prime = new Render(Control_Applicative.pure(Data_List_Types.applicativeList));
  var render = function (dict) {
      return dict.render;
  };
  var renderArray = function (dictRender) {
      return new Render(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_List_Types.monoidList)(render(dictRender)));
  };
  var renderEither = function (dictRender) {
      return function (dictRender1) {
          return new Render(Data_Either.either(render(dictRender))(render(dictRender1)));
      };
  };
  var renderList = function (dictRender) {
      return new Render(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_List_Types.monoidList)(render(dictRender)));
  };
  var renderMaybe = function (dictRender) {
      return new Render(Data_Maybe.maybe(Data_Monoid.mempty(Data_List_Types.monoidList))(render(dictRender)));
  };
  var renderString = function (dictRender) {
      return function ($18) {
          return Data_Foldable.intercalate(Data_List_Types.foldableList)(Data_Monoid.monoidString)(" ")(render(dictRender)($18));
      };
  };
  exports["render"] = render;
  exports["Render"] = Render;
  exports["renderString"] = renderString;
  exports["renderString'"] = renderString$prime;
  exports["renderMaybe"] = renderMaybe;
  exports["renderArray"] = renderArray;
  exports["renderList"] = renderList;
  exports["renderEither"] = renderEither;
  exports["renderVoid"] = renderVoid;
})(PS["Materialize.Markup.Render"] = PS["Materialize.Markup.Render"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var Prelude = PS["Prelude"];                 
  var Decorate = function (decorate) {
      this.decorate = decorate;
  };
  var decorateString = new Decorate(function (s) {
      return function (s$prime) {
          return Data_String_Common.joinWith("-")([ s, s$prime ]);
      };
  });
  var decorate = function (dict) {
      return dict.decorate;
  };
  var decorateFlipped = function (dictDecorate) {
      return Data_Function.flip(decorate(dictDecorate));
  };
  var decorateFunctor = function (dictFunctor) {
      return function (dictDecorate) {
          return new Decorate(function (fa) {
              return function (b) {
                  return Data_Functor.mapFlipped(dictFunctor)(fa)(decorateFlipped(dictDecorate)(b));
              };
          });
      };
  };
  var functorDecorate = function (dictFunctor) {
      return function (dictDecorate) {
          return function ($8) {
              return Data_Functor.map(dictFunctor)(decorate(dictDecorate)($8));
          };
      };
  };
  exports["decorate"] = decorate;
  exports["Decorate"] = Decorate;
  exports["decorateFlipped"] = decorateFlipped;
  exports["functorDecorate"] = functorDecorate;
  exports["decorateString"] = decorateString;
  exports["decorateFunctor"] = decorateFunctor;
})(PS["Materialize.Markup.Decorate"] = PS["Materialize.Markup.Decorate"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Writer = PS["Control.Monad.Writer"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Newtype = PS["Data.Newtype"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Prelude = PS["Prelude"];
  var Text_Smolder_HTML_Attributes = PS["Text.Smolder.HTML.Attributes"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];                 
  var ClassDsl = function (x) {
      return x;
  };
  var newtypeClassDsl = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ClassDsl);
  var renderClassDsl = new Materialize_Markup_Render.Render(function ($4) {
      return Control_Monad_Writer.execWriter(Data_Newtype.unwrap(newtypeClassDsl)($4));
  });                                                                                                                  
  var liftClassDsl = function (dictRender) {
      return function ($5) {
          return Data_Newtype.wrap(newtypeClassDsl)(Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadTellWriterT(Data_List_Types.monoidList)(Data_Identity.monadIdentity))(Materialize_Markup_Render.render(dictRender)($5)));
      };
  };
  var functorClassDsl = Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity);
  var classList = function ($6) {
      return Text_Smolder_HTML_Attributes.className(Materialize_Markup_Render.renderString(renderClassDsl)($6));
  };
  var bindClassDsl = Control_Monad_Writer_Trans.bindWriterT(Data_List_Types.semigroupList)(Data_Identity.bindIdentity);   
  var applicativeClassDsl = Control_Monad_Writer_Trans.applicativeWriterT(Data_List_Types.monoidList)(Data_Identity.applicativeIdentity);
  exports["liftClassDsl"] = liftClassDsl;
  exports["classList"] = classList;
  exports["newtypeClassDsl"] = newtypeClassDsl;
  exports["functorClassDsl"] = functorClassDsl;
  exports["applicativeClassDsl"] = applicativeClassDsl;
  exports["bindClassDsl"] = bindClassDsl;
  exports["renderClassDsl"] = renderClassDsl;
})(PS["Materialize.Markup.Dsl"] = PS["Materialize.Markup.Dsl"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];                 
  var Markupable = function (markupify) {
      this.markupify = markupify;
  };
  var markupify = function (dict) {
      return dict.markupify;
  };
  exports["markupify"] = markupify;
  exports["Markupable"] = Markupable;
})(PS["Materialize.Markup.Markupable"] = PS["Materialize.Markup.Markupable"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Dsl = PS["Materialize.Markup.Dsl"];
  var Materialize_Markup_Markupable = PS["Materialize.Markup.Markupable"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Prelude = PS["Prelude"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];
  var Type_Equality = PS["Type.Equality"];
  var Type_Prelude = PS["Type.Prelude"];                 
  var Decorator = function (x) {
      return x;
  };
  var Variadic = function (liftVariadic) {
      this.liftVariadic = liftVariadic;
  };
  var variadicReturnString = function (dictRender) {
      return new Variadic(Materialize_Markup_Render.renderString(dictRender));
  };
  var variadicReturnMarkup = function (dictMarkupable) {
      return function (dictTypeEquals) {
          return new Variadic(function ($17) {
              return Data_Functor.map(Control_Monad_Free.freeFunctor)(Type_Equality.from(dictTypeEquals))(Materialize_Markup_Markupable.markupify(dictMarkupable)($17));
          });
      };
  };
  var variadicReturnClassDsl = function (dictRender) {
      return function (dictTypeEquals) {
          return new Variadic(function ($18) {
              return Data_Functor.map(Materialize_Markup_Dsl.functorClassDsl)(Type_Equality.from(dictTypeEquals))(Materialize_Markup_Dsl.liftClassDsl(dictRender)($18));
          });
      };
  };
  var newtypeDecorated = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Decorator);
  var variadicDecorate = function (f) {
      return function ($19) {
          return f(Data_Newtype.wrap(newtypeDecorated)($19));
      };
  };
  var liftVariadic = function (dict) {
      return dict.liftVariadic;
  };
  var variadicDecorate$prime = function (dictVariadic) {
      return function (dictDecorate) {
          return new Variadic(function (a) {
              return function ($20) {
                  return liftVariadic(dictVariadic)(Materialize_Markup_Decorate.decorate(dictDecorate)(a)(Data_Newtype.unwrap(newtypeDecorated)($20)));
              };
          });
      };
  };
  exports["liftVariadic"] = liftVariadic;
  exports["Variadic"] = Variadic;
  exports["Decorator"] = Decorator;
  exports["variadicDecorate"] = variadicDecorate;
  exports["variadicDecorate'"] = variadicDecorate$prime;
  exports["variadicReturnString"] = variadicReturnString;
  exports["variadicReturnClassDsl"] = variadicReturnClassDsl;
  exports["variadicReturnMarkup"] = variadicReturnMarkup;
  exports["newtypeDecorated"] = newtypeDecorated;
})(PS["Materialize.Markup.Variadic"] = PS["Materialize.Markup.Variadic"] || {});
(function(exports) {exports.getClass = function () {
      return M.Materialbox;
  };
})(PS["Materialize.Media.Images"] = PS["Materialize.Media.Images"] || {});
(function(exports) {

  exports.gDestroyImpl = function (i) {
      return i.destroy();
  };

  exports.gInitImpl = function (c, element, options) {
      return c.init(element, options);
  };
})(PS["Materialize.Internal.DOM"] = PS["Materialize.Internal.DOM"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Materialize.Internal.DOM"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Newtype = PS["Data.Newtype"];
  var Effect = PS["Effect"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Materialize_DOM = PS["Materialize.DOM"];
  var Prelude = PS["Prelude"];
  var Web_DOM_Element = PS["Web.DOM.Element"];                  
  var gInit = function (dictComponent) {
      return function (os) {
          return function (e) {
              return function __do() {
                  var v = Materialize_DOM.componentClass(dictComponent)();
                  return $foreign.gInitImpl(v, Data_Newtype.unwrap(Materialize_DOM.newtypeInstanceElement)(e), os);
              };
          };
      };
  };                                                                  
  var gDestroy = Effect_Uncurried.runEffectFn1($foreign.gDestroyImpl);
  exports["gDestroy"] = gDestroy;
  exports["gInit"] = gInit;
})(PS["Materialize.Internal.DOM"] = PS["Materialize.Internal.DOM"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var small = Data_Typelevel_Undefined["undefined"];
  var right = Data_Typelevel_Undefined["undefined"];
  var responsive = Data_Typelevel_Undefined["undefined"];
  var renderTiny = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("tiny");
  });
  var renderSmall = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("small");
  });
  var renderRight = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("right");
  });
  var renderResponsive = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("responsive");
  });
  var renderMedium = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("medium");
  });
  var renderLeft = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("left");
  });
  var renderLarge = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("large");
  });
  var renderDisabled = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("disabled");
  });
  var renderActive = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("active");
  });                
  var medium = Data_Typelevel_Undefined["undefined"];
  var large = Data_Typelevel_Undefined["undefined"]; 
  var active = Data_Typelevel_Undefined["undefined"];
  exports["responsive"] = responsive;
  exports["active"] = active;
  exports["right"] = right;
  exports["small"] = small;
  exports["medium"] = medium;
  exports["large"] = large;
  exports["renderResponsive"] = renderResponsive;
  exports["renderLeft"] = renderLeft;
  exports["renderRight"] = renderRight;
  exports["renderActive"] = renderActive;
  exports["renderDisabled"] = renderDisabled;
  exports["renderTiny"] = renderTiny;
  exports["renderSmall"] = renderSmall;
  exports["renderMedium"] = renderMedium;
  exports["renderLarge"] = renderLarge;
})(PS["Materialize.Overriden"] = PS["Materialize.Overriden"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Materialize.Media.Images"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Effect = PS["Effect"];
  var Materialize_DOM = PS["Materialize.DOM"];
  var Materialize_Internal_DOM = PS["Materialize.Internal.DOM"];
  var Materialize_Internal_Options = PS["Materialize.Internal.Options"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Overriden = PS["Materialize.Overriden"];
  var Prelude = PS["Prelude"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];                 
  var Image = function (x) {
      return x;
  };                                                                                                                         
  var renderMaterialBoxed = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("materialboxed");
  });
  var renderImage = new Materialize_Markup_Render.Render(function (v) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Decorate.decorate(Materialize_Markup_Decorate.decorateFunctor(Data_List_Types.functorList)(Materialize_Markup_Decorate.decorateString))(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Overriden.renderResponsive))(v.responsive))("img"))(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Markup_Render["renderString'"]))(Data_Functor.voidRight(Data_Maybe.functorMaybe)("circle")(v.circular)))(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(renderMaterialBoxed))(v.materialBoxed)));
  });
  var newtypeImage = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Image);
  var materialBoxed = Data_Typelevel_Undefined["undefined"];
  var image = function (dictDecorate) {
      return function (dictVariadic) {
          return function (a) {
              return Materialize_Markup_Variadic.liftVariadic(dictVariadic)(Materialize_Markup_Decorate.decorateFlipped(dictDecorate)(a)(Data_Newtype.wrap(newtypeImage)({
                  circular: Data_Maybe.Nothing.value,
                  responsive: Data_Maybe.Nothing.value,
                  materialBoxed: Data_Maybe.Nothing.value
              })));
          };
      };
  }; 
  var decorateImageMaterialBoxed = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (m) {
          return Data_Newtype.wrap(newtypeImage)({
              materialBoxed: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(m),
              circular: v.circular,
              responsive: v.responsive
          });
      };
  });                                                                  
  var componentMaterialBox = new Materialize_DOM.Component($foreign.getClass, Data_Newtype.wrap(Materialize_DOM.newtypeInstanceSelectors)("." + Materialize_Markup_Render.renderString(renderMaterialBoxed)(materialBoxed)));
  var initMaterialBox = function (dictSubrow) {
      return new Materialize_DOM.Init(Materialize_Internal_DOM.gInit(componentMaterialBox));
  };
  exports["Image"] = Image;
  exports["image"] = image;
  exports["materialBoxed"] = materialBoxed;
  exports["decorateImageMaterialBoxed"] = decorateImageMaterialBoxed;
  exports["renderImage"] = renderImage;
  exports["renderMaterialBoxed"] = renderMaterialBoxed;
  exports["newtypeImage"] = newtypeImage;
  exports["componentMaterialBox"] = componentMaterialBox;
  exports["initMaterialBox"] = initMaterialBox;
})(PS["Materialize.Media.Images"] = PS["Materialize.Media.Images"] || {});
(function(exports) {exports.toastImpl = function (options) {
      return function (_, onSuccess) {
          var successfullyCanceled = false;

          var optionsWithCallback = Object.assign({}, options, {
              completeCallback: function () {
                  if (successfullyCanceled) {
                      return;
                  }
                  onSuccess();
              },
          });
          var toast = M.toast(optionsWithCallback);

          return function (_, onCancelerError, onCancelerSuccess) {
              if (toast.timeRemaining > 0 && !toast.wasSwiped) {
                  successfullyCanceled = true;

                  toast.dismiss();

                  onCancelerSuccess();
              }
              onCancelerError(new TypeError("Toast has been dissmissed"));
          };
      };
  };

  exports.dismissAllToasts = function () {
      return M.Toast.dismissAll();
  };
})(PS["Materialize.Toasts"] = PS["Materialize.Toasts"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Materialize.Toasts"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Compat = PS["Effect.Aff.Compat"];
  var Materialize_DOM = PS["Materialize.DOM"];
  var Materialize_Internal_DOM = PS["Materialize.Internal.DOM"];
  var Materialize_Internal_Options = PS["Materialize.Internal.Options"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Types = PS["Materialize.Types"];
  var Prelude = PS["Prelude"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];
  var Text_Smolder_Renderer_String = PS["Text.Smolder.Renderer.String"];                 
  var toast = function (dictSubrow) {
      return function ($2) {
          return Effect_Aff_Compat.fromEffectFnAff($foreign.toastImpl(Materialize_Internal_Options.mkSubrecord(dictSubrow)($2)));
      };
  };
  var toastS = function (t) {
      return toast(Materialize_Internal_Options.subsetUnionLeft())({
          html: t
      });
  };
  exports["toast"] = toast;
  exports["toastS"] = toastS;
  exports["dismissAllToasts"] = $foreign.dismissAllToasts;
})(PS["Materialize.Toasts"] = PS["Materialize.Toasts"] || {});
(function(exports) {exports.getClass = function () {
      return M.Tooltip;
  };

  exports.extraInitImpl = function (options, tooltip) {
      if (!options.exitOnClick) {
          return;
      }
      tooltip.el.addEventListener('mousedown', function () {
          // An entering tooltip is also open.
          if (!tooltip.isOpen) {
              return;
          }

          // Update state and clear entering animation.
          tooltip.close();

          // Clear exiting animation.
          clearTimeout(tooltip._exitDelayTimeout);

          // Play exiting animation immediately.
          tooltip._animateOut();
      });
  };
})(PS["Materialize.Tooltips"] = PS["Materialize.Tooltips"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Materialize.Tooltips"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either_Nested = PS["Data.Either.Nested"];
  var Data_Function = PS["Data.Function"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Effect = PS["Effect"];
  var Effect_Aff_Compat = PS["Effect.Aff.Compat"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Materialize_DOM = PS["Materialize.DOM"];
  var Materialize_Internal_DOM = PS["Materialize.Internal.DOM"];
  var Materialize_Internal_Options = PS["Materialize.Internal.Options"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Overriden = PS["Materialize.Overriden"];
  var Materialize_Types = PS["Materialize.Types"];
  var Prelude = PS["Prelude"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];                                                                                 
  var tooltipped = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("tooltipped");
  };                  
  var destroyTooltip = new Materialize_DOM.Destroy(Materialize_Internal_DOM.gDestroy);
  var dataTooltip = Text_Smolder_Markup.attribute("data-tooltip");
  var componentTooltip = new Materialize_DOM.Component($foreign.getClass, Data_Newtype.wrap(Materialize_DOM.newtypeInstanceSelectors)("." + tooltipped(Materialize_Markup_Variadic.variadicReturnString(Materialize_Markup_Render["renderString'"]))));
  var initTooltip = function (dictSubrow) {
      return new Materialize_DOM.Init(function (a) {
          return function (e) {
              return Control_Bind.bind(Effect.bindEffect)(Materialize_Internal_DOM.gInit(componentTooltip)(a)(e))(Effect_Uncurried.runEffectFn2($foreign.extraInitImpl)(Materialize_Internal_Options.mkSubrecord(dictSubrow)(a)));
          };
      });
  };
  exports["tooltipped"] = tooltipped;
  exports["dataTooltip"] = dataTooltip;
  exports["componentTooltip"] = componentTooltip;
  exports["initTooltip"] = initTooltip;
  exports["destroyTooltip"] = destroyTooltip;
})(PS["Materialize.Tooltips"] = PS["Materialize.Tooltips"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tournament = PS["Data.Tournament"];
  var Data_Traversable = PS["Data.Traversable"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Random_Shuffle = PS["Effect.Random.Shuffle"];
  var Foreign = PS["Foreign"];
  var Materialize_DOM = PS["Materialize.DOM"];
  var Materialize_Internal_Options = PS["Materialize.Internal.Options"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Media_Images = PS["Materialize.Media.Images"];
  var Materialize_Toasts = PS["Materialize.Toasts"];
  var Materialize_Tooltips = PS["Materialize.Tooltips"];
  var Materialize_Types = PS["Materialize.Types"];
  var Prelude = PS["Prelude"];
  var Pux = PS["Pux"];
  var Pux_DOM_Events = PS["Pux.DOM.Events"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_DOM_ParentNode = PS["Web.DOM.ParentNode"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_HTML = PS["Web.HTML"];
  var Web_HTML_HTMLDocument = PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = PS["Web.HTML.HTMLElement"];
  var Web_HTML_History = PS["Web.HTML.History"];
  var Web_HTML_Window = PS["Web.HTML.Window"];
  var Yousort_Component_State = PS["Yousort.Component.State"];
  var Yousort_Route = PS["Yousort.Route"];                 
  var Title = (function () {
      function Title() {

      };
      Title.value = new Title();
      return Title;
  })();
  var Description = (function () {
      function Description() {

      };
      Description.value = new Description();
      return Description;
  })();
  var Url = (function () {
      function Url() {

      };
      Url.value = new Url();
      return Url;
  })();
  var Caption = (function () {
      function Caption() {

      };
      Caption.value = new Caption();
      return Caption;
  })();
  var KeyDown = (function () {
      function KeyDown(value0) {
          this.value0 = value0;
      };
      KeyDown.create = function (value0) {
          return new KeyDown(value0);
      };
      return KeyDown;
  })();
  var InitEditing = (function () {
      function InitEditing() {

      };
      InitEditing.value = new InitEditing();
      return InitEditing;
  })();
  var CommitEditing = (function () {
      function CommitEditing() {

      };
      CommitEditing.value = new CommitEditing();
      return CommitEditing;
  })();
  var AbortEditing = (function () {
      function AbortEditing() {

      };
      AbortEditing.value = new AbortEditing();
      return AbortEditing;
  })();
  var DeleteChipAt = (function () {
      function DeleteChipAt(value0) {
          this.value0 = value0;
      };
      DeleteChipAt.create = function (value0) {
          return new DeleteChipAt(value0);
      };
      return DeleteChipAt;
  })();
  var SetEditingEntry = (function () {
      function SetEditingEntry(value0) {
          this.value0 = value0;
      };
      SetEditingEntry.create = function (value0) {
          return new SetEditingEntry(value0);
      };
      return SetEditingEntry;
  })();
  var SetEditingEntryField = (function () {
      function SetEditingEntryField(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetEditingEntryField.create = function (value0) {
          return function (value1) {
              return new SetEditingEntryField(value0, value1);
          };
      };
      return SetEditingEntryField;
  })();
  var ClearEditingEntry = (function () {
      function ClearEditingEntry() {

      };
      ClearEditingEntry.value = new ClearEditingEntry();
      return ClearEditingEntry;
  })();
  var SetTargetEntryIndex = (function () {
      function SetTargetEntryIndex(value0) {
          this.value0 = value0;
      };
      SetTargetEntryIndex.create = function (value0) {
          return new SetTargetEntryIndex(value0);
      };
      return SetTargetEntryIndex;
  })();
  var ClearTargetEntryIndex = (function () {
      function ClearTargetEntryIndex() {

      };
      ClearTargetEntryIndex.value = new ClearTargetEntryIndex();
      return ClearTargetEntryIndex;
  })();
  var AddEntry = (function () {
      function AddEntry(value0) {
          this.value0 = value0;
      };
      AddEntry.create = function (value0) {
          return new AddEntry(value0);
      };
      return AddEntry;
  })();
  var UpdateEntryAt = (function () {
      function UpdateEntryAt(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      UpdateEntryAt.create = function (value0) {
          return function (value1) {
              return new UpdateEntryAt(value0, value1);
          };
      };
      return UpdateEntryAt;
  })();
  var DeleteEntryAt = (function () {
      function DeleteEntryAt(value0) {
          this.value0 = value0;
      };
      DeleteEntryAt.create = function (value0) {
          return new DeleteEntryAt(value0);
      };
      return DeleteEntryAt;
  })();
  var NewTournament = (function () {
      function NewTournament() {

      };
      NewTournament.value = new NewTournament();
      return NewTournament;
  })();
  var StartTournament = (function () {
      function StartTournament(value0) {
          this.value0 = value0;
      };
      StartTournament.create = function (value0) {
          return new StartTournament(value0);
      };
      return StartTournament;
  })();
  var Forward = (function () {
      function Forward(value0) {
          this.value0 = value0;
      };
      Forward.create = function (value0) {
          return new Forward(value0);
      };
      return Forward;
  })();
  var Backward = (function () {
      function Backward() {

      };
      Backward.value = new Backward();
      return Backward;
  })();
  var View = (function () {
      function View(value0) {
          this.value0 = value0;
      };
      View.create = function (value0) {
          return new View(value0);
      };
      return View;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var Navigate$prime = (function () {
      function Navigate$prime(value0) {
          this.value0 = value0;
      };
      Navigate$prime.create = function (value0) {
          return new Navigate$prime(value0);
      };
      return Navigate$prime;
  })();
  var AtomicallyUpdateState = (function () {
      function AtomicallyUpdateState(value0) {
          this.value0 = value0;
      };
      AtomicallyUpdateState.create = function (value0) {
          return new AtomicallyUpdateState(value0);
      };
      return AtomicallyUpdateState;
  })();
  var InitUncontrolledCompoenntsOnViewChanged = (function () {
      function InitUncontrolledCompoenntsOnViewChanged() {

      };
      InitUncontrolledCompoenntsOnViewChanged.value = new InitUncontrolledCompoenntsOnViewChanged();
      return InitUncontrolledCompoenntsOnViewChanged;
  })();
  var InitUncontrolledComponentsOnEvent = (function () {
      function InitUncontrolledComponentsOnEvent() {

      };
      InitUncontrolledComponentsOnEvent.value = new InitUncontrolledComponentsOnEvent();
      return InitUncontrolledComponentsOnEvent;
  })();
  var Noop = (function () {
      function Noop() {

      };
      Noop.value = new Noop();
      return Noop;
  })();
  var viewCssClass = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("app-view");
  };
  var viewNode = function __do() {
      var v = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.document)();
      var pd = Web_HTML_HTMLDocument.toParentNode(v);
      var v1 = Web_DOM_ParentNode.querySelector(Data_Newtype.wrap(Web_DOM_ParentNode.newtypeQuerySelector)(viewCssClass(Materialize_Markup_Variadic.variadicReturnString(Materialize_Markup_Render["renderString'"]))))(pd)();
      var v3 = Web_HTML_HTMLDocument.body(v)();
      return Data_Maybe.fromMaybe(pd)(Control_Alt.alt(Data_Maybe.altMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Web_DOM_Element.toParentNode)(v1))(Data_Functor.map(Data_Maybe.functorMaybe)(Web_HTML_HTMLElement.toParentNode)(v3)));
  };
  var validateModification = function (ti$prime) {
      return function (cs) {
          return function (c) {
              return Data_Maybe.maybe(false)(function (v) {
                  return Data_Eq.notEq(Yousort_Component_State.eqComparable)(c)(v);
              })(Data_List.index(cs)(ti$prime)) && Yousort_Component_State.validateComparable(c);
          };
      };
  };
  var minimumPlayersCount = 2;
  var liftEvent = function (dictMonad) {
      return function ($135) {
          return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Just.create($135));
      };
  };
  var route = function (r) {
      return function (u) {
          return function __do() {
              Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.history))(Web_HTML_History.pushState(Foreign.unsafeToForeign({}))("")(u))();
              return liftEvent(Effect.monadEffect)(new View(r))();
          };
      };
  };
  var countHolds = function (dictSemiring) {
      return function ($136) {
          return Data_Foldable.length(Data_List_Types.foldableList)(dictSemiring)(Data_List.takeWhile(Data_Eq.eq(Yousort_Component_State.eqOperation)(Yousort_Component_State.Hold.value))($136));
      };
  };
  var backward = function (v) {
      return function (v1) {
          if (v instanceof Yousort_Component_State.Choose) {
              return Data_Tournament.unplay(v.value0)(v1.tournament);
          };
          if (v instanceof Yousort_Component_State.Hold) {
              return Data_Maybe.Just.create(Data_Tournament.unhold(countHolds(Data_Semiring.semiringInt)(v1.history))(v1.tournament));
          };
          throw new Error("Failed pattern match at Yousort.Component.Update line 291, column 1 - line 291, column 64: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var foldp = function (v) {
      return function (v1) {
          if (v instanceof KeyDown) {
              return Pux.onlyEffects(v1)([ liftEvent(Effect_Aff.monadAff)((function () {
                  if (v1.route instanceof Yousort_Route.Opening && v.value0 === "Enter") {
                      var v2 = Data_Maybe.isJust(v1.editingEntry);
                      if (v2) {
                          return CommitEditing.value;
                      };
                      return InitEditing.value;
                  };
                  if (v1.route instanceof Yousort_Route.Opening && v.value0 === "Escape") {
                      return AbortEditing.value;
                  };
                  return Noop.value;
              })()) ]);
          };
          if (v instanceof InitEditing) {
              return Pux.onlyEffects(v1)([ liftEvent(Effect_Aff.monadAff)(SetEditingEntry.create(Data_Maybe.maybe(Yousort_Component_State.newText)(Yousort_Component_State.toNewEntry)(Data_List.head(v1.inputEntries)))) ]);
          };
          if (v instanceof CommitEditing) {
              return Pux.onlyEffects(v1)([ liftEvent(Effect_Aff.monadAff)(new AtomicallyUpdateState((function () {
                  if (v1.targetEntryIndex instanceof Data_Maybe.Just && v1.editingEntry instanceof Data_Maybe.Just) {
                      var v2 = validateModification(v1.targetEntryIndex.value0)(v1.inputEntries)(v1.editingEntry.value0);
                      if (v2) {
                          return [ ClearEditingEntry.value, ClearTargetEntryIndex.value, new UpdateEntryAt(v1.targetEntryIndex.value0, v1.editingEntry.value0) ];
                      };
                      return [  ];
                  };
                  if (v1.editingEntry instanceof Data_Maybe.Just) {
                      var v2 = Yousort_Component_State.validateComparable(v1.editingEntry.value0);
                      if (v2) {
                          return [ ClearEditingEntry.value, new AddEntry(v1.editingEntry.value0) ];
                      };
                      return [  ];
                  };
                  return [  ];
              })())) ]);
          };
          if (v instanceof AbortEditing) {
              return Pux.onlyEffects(v1)([ liftEvent(Effect_Aff.monadAff)(new AtomicallyUpdateState([ ClearEditingEntry.value, ClearTargetEntryIndex.value ])) ]);
          };
          if (v instanceof DeleteChipAt) {
              return Pux.onlyEffects(v1)([ liftEvent(Effect_Aff.monadAff)(new AtomicallyUpdateState((function () {
                  var v2 = Data_Maybe.maybe(false)(function (v3) {
                      return v.value0 === v3;
                  })(v1.targetEntryIndex);
                  if (v2) {
                      return [ ClearEditingEntry.value, ClearTargetEntryIndex.value, new DeleteEntryAt(v.value0) ];
                  };
                  return [ new DeleteEntryAt(v.value0) ];
              })())) ]);
          };
          if (v instanceof SetEditingEntry) {
              return Pux.noEffects({
                  editingEntry: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.value0),
                  canResume: v1.canResume,
                  history: v1.history,
                  inputEntries: v1.inputEntries,
                  route: v1.route,
                  targetEntryIndex: v1.targetEntryIndex,
                  tournament: v1.tournament
              });
          };
          if (v instanceof SetEditingEntryField) {
              var v$prime = Pux_DOM_Events.targetValue(v.value1);
              return Pux.noEffects({
                  editingEntry: Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(v1.editingEntry)(function (v3) {
                      if (v3 instanceof Yousort_Component_State.Text && v.value0 instanceof Title) {
                          return new Yousort_Component_State.Text({
                              title: v$prime,
                              description: v3.value0.description
                          });
                      };
                      if (v3 instanceof Yousort_Component_State.Text && v.value0 instanceof Description) {
                          return new Yousort_Component_State.Text({
                              title: v3.value0.title,
                              description: v$prime
                          });
                      };
                      if (v3 instanceof Yousort_Component_State.Image && v.value0 instanceof Url) {
                          return new Yousort_Component_State.Image({
                              url: v$prime,
                              caption: v3.value0.caption,
                              description: v3.value0.description
                          });
                      };
                      if (v3 instanceof Yousort_Component_State.Image && v.value0 instanceof Caption) {
                          return new Yousort_Component_State.Image({
                              url: v3.value0.url,
                              caption: v$prime,
                              description: v3.value0.description
                          });
                      };
                      if (v3 instanceof Yousort_Component_State.Image && v.value0 instanceof Description) {
                          return new Yousort_Component_State.Image({
                              url: v3.value0.url,
                              caption: v3.value0.caption,
                              description: v$prime
                          });
                      };
                      if (v3 instanceof Yousort_Component_State.Audio && v.value0 instanceof Url) {
                          return new Yousort_Component_State.Audio({
                              url: v$prime,
                              caption: v3.value0.caption,
                              description: v3.value0.description
                          });
                      };
                      if (v3 instanceof Yousort_Component_State.Audio && v.value0 instanceof Caption) {
                          return new Yousort_Component_State.Audio({
                              url: v3.value0.url,
                              caption: v$prime,
                              description: v3.value0.description
                          });
                      };
                      if (v3 instanceof Yousort_Component_State.Audio && v.value0 instanceof Description) {
                          return new Yousort_Component_State.Audio({
                              url: v3.value0.url,
                              caption: v3.value0.caption,
                              description: v$prime
                          });
                      };
                      if (v3 instanceof Yousort_Component_State.YouTubeVideo && v.value0 instanceof Url) {
                          return new Yousort_Component_State.YouTubeVideo({
                              url: v$prime,
                              caption: v3.value0.caption,
                              description: v3.value0.description
                          });
                      };
                      if (v3 instanceof Yousort_Component_State.YouTubeVideo && v.value0 instanceof Caption) {
                          return new Yousort_Component_State.YouTubeVideo({
                              url: v3.value0.url,
                              caption: v$prime,
                              description: v3.value0.description
                          });
                      };
                      if (v3 instanceof Yousort_Component_State.YouTubeVideo && v.value0 instanceof Description) {
                          return new Yousort_Component_State.YouTubeVideo({
                              url: v3.value0.url,
                              caption: v3.value0.caption,
                              description: v$prime
                          });
                      };
                      return v3;
                  }),
                  canResume: v1.canResume,
                  history: v1.history,
                  inputEntries: v1.inputEntries,
                  route: v1.route,
                  targetEntryIndex: v1.targetEntryIndex,
                  tournament: v1.tournament
              });
          };
          if (v instanceof ClearEditingEntry) {
              return Pux.noEffects({
                  editingEntry: Data_Maybe.Nothing.value,
                  canResume: v1.canResume,
                  history: v1.history,
                  inputEntries: v1.inputEntries,
                  route: v1.route,
                  targetEntryIndex: v1.targetEntryIndex,
                  tournament: v1.tournament
              });
          };
          if (v instanceof SetTargetEntryIndex) {
              return Pux.noEffects({
                  targetEntryIndex: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.value0),
                  canResume: v1.canResume,
                  editingEntry: v1.editingEntry,
                  history: v1.history,
                  inputEntries: v1.inputEntries,
                  route: v1.route,
                  tournament: v1.tournament
              });
          };
          if (v instanceof ClearTargetEntryIndex) {
              return Pux.noEffects({
                  targetEntryIndex: Data_Maybe.Nothing.value,
                  canResume: v1.canResume,
                  editingEntry: v1.editingEntry,
                  history: v1.history,
                  inputEntries: v1.inputEntries,
                  route: v1.route,
                  tournament: v1.tournament
              });
          };
          if (v instanceof AddEntry) {
              if (Yousort_Component_State.validateComparable(v.value0)) {
                  return Pux.noEffects({
                      inputEntries: new Data_List_Types.Cons(v.value0, v1.inputEntries),
                      targetEntryIndex: Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                          return v3 + 1 | 0;
                      })(v1.targetEntryIndex),
                      canResume: v1.canResume,
                      editingEntry: v1.editingEntry,
                      history: v1.history,
                      route: v1.route,
                      tournament: v1.tournament
                  });
              };
              if (Data_Boolean.otherwise) {
                  return Pux.noEffects(v1);
              };
          };
          if (v instanceof UpdateEntryAt) {
              if (Yousort_Component_State.validateComparable(v.value1)) {
                  return Pux.noEffects(Data_Maybe.fromMaybe(v1)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                      return {
                          inputEntries: v2,
                          canResume: v1.canResume,
                          editingEntry: v1.editingEntry,
                          history: v1.history,
                          route: v1.route,
                          targetEntryIndex: v1.targetEntryIndex,
                          tournament: v1.tournament
                      };
                  })(Data_List.updateAt(v.value0)(v.value1)(v1.inputEntries))));
              };
              if (Data_Boolean.otherwise) {
                  return Pux.noEffects(v1);
              };
          };
          if (v instanceof DeleteEntryAt) {
              return Pux.noEffects(Data_Maybe.fromMaybe(v1)(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_List.deleteAt(v.value0)(v1.inputEntries))(function (v2) {
                  return {
                      inputEntries: v2,
                      targetEntryIndex: Control_Bind.bind(Data_Maybe.bindMaybe)(v1.targetEntryIndex)(function (ti$prime) {
                          var v4 = Data_Ord.compare(Data_Ord.ordInt)(ti$prime)(v.value0);
                          if (v4 instanceof Data_Ordering.LT) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(ti$prime);
                          };
                          if (v4 instanceof Data_Ordering.EQ) {
                              return Data_Maybe.Nothing.value;
                          };
                          if (v4 instanceof Data_Ordering.GT) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(ti$prime - 1 | 0);
                          };
                          throw new Error("Failed pattern match at Yousort.Component.Update line 180, column 17 - line 184, column 11: " + [ v4.constructor.name ]);
                      }),
                      canResume: v1.canResume,
                      editingEntry: v1.editingEntry,
                      history: v1.history,
                      route: v1.route,
                      tournament: v1.tournament
                  };
              })));
          };
          if (v instanceof NewTournament) {
              return Pux.onlyEffects(v1)([ Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(function ($137) {
                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(StartTournament.create($137));
              })(Effect_Random_Shuffle.shuffle(Data_Array.fromFoldable(Data_List_Types.foldableList)(v1.inputEntries)))) ]);
          };
          if (v instanceof StartTournament) {
              return {
                  state: {
                      route: v1.route,
                      history: Data_Monoid.mempty(Data_List_Types.monoidList),
                      tournament: Data_Tournament.fromFoldable(Data_Foldable.foldableArray)(v.value0),
                      inputEntries: v1.inputEntries,
                      canResume: v1.canResume,
                      editingEntry: v1.editingEntry,
                      targetEntryIndex: v1.targetEntryIndex
                  },
                  effects: [ liftEvent(Effect_Aff.monadAff)(new Navigate$prime(Yousort_Route.Tournament.value)) ]
              };
          };
          if (v instanceof Forward && v.value0 instanceof Yousort_Component_State.Hold) {
              var hs = countHolds(Data_Semiring.semiringInt)(v1.history);
              var v2 = Data_Tournament.areExhaustive(hs)(v1.tournament);
              if (v2) {
                  return Pux.onlyEffects(v1)([ Data_Functor.voidLeft(Effect_Aff.functorAff)(Materialize_Toasts.toastS("It's time to make a choice."))(Data_Maybe.Nothing.value) ]);
              };
              return {
                  state: {
                      route: v1.route,
                      history: new Data_List_Types.Cons(Yousort_Component_State.Hold.value, v1.history),
                      tournament: Data_Tournament.hold(hs)(v1.tournament),
                      inputEntries: v1.inputEntries,
                      canResume: v1.canResume,
                      editingEntry: v1.editingEntry,
                      targetEntryIndex: v1.targetEntryIndex
                  },
                  effects: [ liftEvent(Effect_Aff.monadAff)(InitUncontrolledComponentsOnEvent.value) ]
              };
          };
          if (v instanceof Forward && v.value0 instanceof Yousort_Component_State.Choose) {
              return {
                  state: Data_Maybe.fromMaybe(v1)(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_Tournament.play(v.value0.value0)(v1.tournament))(function (t$prime) {
                      return {
                          history: new Data_List_Types.Cons(v.value0, v1.history),
                          tournament: t$prime,
                          canResume: v1.canResume,
                          editingEntry: v1.editingEntry,
                          inputEntries: v1.inputEntries,
                          route: v1.route,
                          targetEntryIndex: v1.targetEntryIndex
                      };
                  })),
                  effects: [ liftEvent(Effect_Aff.monadAff)(InitUncontrolledComponentsOnEvent.value) ]
              };
          };
          if (v instanceof Backward && v1.history instanceof Data_List_Types.Cons) {
              return {
                  state: Data_Maybe.fromMaybe(v1)(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(backward(v1.history.value0)(v1))(function (t) {
                      return {
                          history: v1.history.value1,
                          tournament: t,
                          canResume: v1.canResume,
                          editingEntry: v1.editingEntry,
                          inputEntries: v1.inputEntries,
                          route: v1.route,
                          targetEntryIndex: v1.targetEntryIndex
                      };
                  })),
                  effects: [ liftEvent(Effect_Aff.monadAff)(InitUncontrolledComponentsOnEvent.value) ]
              };
          };
          if (v instanceof Backward) {
              return Pux.onlyEffects(v1)([ liftEvent(Effect_Aff.monadAff)(new Navigate$prime(Yousort_Route.Opening.value)) ]);
          };
          if (v instanceof View) {
              if (Data_Eq.eq(Yousort_Route.eqRoute)(v.value0)(Yousort_Route.Tournament.value) && Data_Foldable["null"](Data_Tournament.foldableTournament)(v1.tournament)) {
                  return Pux.onlyEffects(v1)([ liftEvent(Effect_Aff.monadAff)(new Navigate$prime(Yousort_Route.Opening.value)) ]);
              };
              if (Data_Eq.eq(Yousort_Route.eqRoute)(v.value0)(v1.route)) {
                  return Pux.noEffects(v1);
              };
              if (Data_Boolean.otherwise) {
                  return {
                      state: {
                          route: v.value0,
                          history: v1.history,
                          tournament: v1.tournament,
                          inputEntries: v1.inputEntries,
                          canResume: !Data_Foldable["null"](Data_Tournament.foldableTournament)(v1.tournament),
                          editingEntry: v1.editingEntry,
                          targetEntryIndex: v1.targetEntryIndex
                      },
                      effects: [ Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                          Materialize_Toasts.dismissAllToasts();
                          var v2 = Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(viewNode)(Materialize_DOM.findInstances(Materialize_Tooltips.componentTooltip)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(Materialize_DOM.destroy(Materialize_Tooltips.destroyTooltip)))();
                          return liftEvent(Effect.monadEffect)(InitUncontrolledCompoenntsOnViewChanged.value)();
                      }) ]
                  };
              };
          };
          if (v instanceof Navigate) {
              return Pux.onlyEffects(v1)([ Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Apply.applySecond(Effect.applyEffect)(Web_Event_Event.preventDefault(v.value1))(route(Yousort_Route.fromHash(v.value0))(v.value0))) ]);
          };
          if (v instanceof Navigate$prime) {
              return Pux.onlyEffects(v1)([ Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(route(v.value0)(Yousort_Route.toHash(v.value0))) ]);
          };
          if (v instanceof AtomicallyUpdateState) {
              var foldModel = function (v2) {
                  return function (e) {
                      var $130 = foldp(e)(v2.state);
                      return {
                          effects: Data_Semigroup.append(Data_Semigroup.semigroupArray)($130.effects)(v2.effects),
                          state: $130.state
                      };
                  };
              };
              return Data_Foldable.foldl(Data_Foldable.foldableArray)(foldModel)(Pux.noEffects(v1))(v.value0);
          };
          if (v instanceof InitUncontrolledCompoenntsOnViewChanged) {
              return Pux.onlyEffects(v1)([ Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                  var v2 = Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(viewNode)(Materialize_DOM.findElements(Materialize_Tooltips.componentTooltip)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(Materialize_DOM.init(Materialize_Tooltips.initTooltip(Materialize_Internal_Options.subsetUnionLeft()))({
                      enterDelay: 400.0,
                      exitDelay: 50.0,
                      inDuration: 40.0,
                      outDuration: 40.0,
                      exitOnClick: true
                  })))();
                  return liftEvent(Effect.monadEffect)(InitUncontrolledComponentsOnEvent.value)();
              }) ]);
          };
          if (v instanceof InitUncontrolledComponentsOnEvent) {
              return Pux.onlyEffects(v1)([ Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                  var v2 = Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(viewNode)(Materialize_DOM.findElements(Materialize_Media_Images.componentMaterialBox)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(Materialize_DOM.init(Materialize_Media_Images.initMaterialBox(Materialize_Internal_Options.subsetUnionLeft()))({})))();
                  return Data_Maybe.Nothing.value;
              }) ]);
          };
          if (v instanceof Noop) {
              return Pux.noEffects(v1);
          };
          throw new Error("Failed pattern match at Yousort.Component.Update line 91, column 1 - line 91, column 48: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  exports["KeyDown"] = KeyDown;
  exports["InitEditing"] = InitEditing;
  exports["CommitEditing"] = CommitEditing;
  exports["AbortEditing"] = AbortEditing;
  exports["DeleteChipAt"] = DeleteChipAt;
  exports["SetEditingEntry"] = SetEditingEntry;
  exports["SetEditingEntryField"] = SetEditingEntryField;
  exports["ClearEditingEntry"] = ClearEditingEntry;
  exports["SetTargetEntryIndex"] = SetTargetEntryIndex;
  exports["ClearTargetEntryIndex"] = ClearTargetEntryIndex;
  exports["AddEntry"] = AddEntry;
  exports["UpdateEntryAt"] = UpdateEntryAt;
  exports["DeleteEntryAt"] = DeleteEntryAt;
  exports["NewTournament"] = NewTournament;
  exports["StartTournament"] = StartTournament;
  exports["Forward"] = Forward;
  exports["Backward"] = Backward;
  exports["View"] = View;
  exports["Navigate"] = Navigate;
  exports["Navigate'"] = Navigate$prime;
  exports["AtomicallyUpdateState"] = AtomicallyUpdateState;
  exports["InitUncontrolledCompoenntsOnViewChanged"] = InitUncontrolledCompoenntsOnViewChanged;
  exports["InitUncontrolledComponentsOnEvent"] = InitUncontrolledComponentsOnEvent;
  exports["Noop"] = Noop;
  exports["Title"] = Title;
  exports["Description"] = Description;
  exports["Url"] = Url;
  exports["Caption"] = Caption;
  exports["foldp"] = foldp;
  exports["viewCssClass"] = viewCssClass;
  exports["minimumPlayersCount"] = minimumPlayersCount;
  exports["validateModification"] = validateModification;
})(PS["Yousort.Component.Update"] = PS["Yousort.Component.Update"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Types = PS["Materialize.Types"];
  var Prelude = PS["Prelude"];                 
  var Width = function (x) {
      return x;
  };
  var Push = function (x) {
      return x;
  };
  var Pull = function (x) {
      return x;
  };
  var Offset = function (x) {
      return x;
  };
  var Column = function (x) {
      return x;
  };                                                                                                                          
  var section = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("section");
  };
  var row = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("row");
  };
  var renderWidth = Materialize_Markup_Render["renderString'"];
  var renderPush = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Decorate.functorDecorate(Data_List_Types.functorList)(Materialize_Markup_Decorate.decorateString)("push")(Materialize_Markup_Render.render(renderWidth)(v));
  });
  var renderPull = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Decorate.functorDecorate(Data_List_Types.functorList)(Materialize_Markup_Decorate.decorateString)("pull")(Materialize_Markup_Render.render(renderWidth)(v));
  });
  var renderOffset = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Decorate.functorDecorate(Data_List_Types.functorList)(Materialize_Markup_Decorate.decorateString)("offset")(Materialize_Markup_Render.render(renderWidth)(v));
  });
  var renderColumn = new Materialize_Markup_Render.Render(function (v) {
      return Data_List.reverse(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderList(renderPull))(v.pull))(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderList(renderPush))(v.push))(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderList(renderOffset))(v.offset))(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderList(renderWidth))(v.widths))(Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("col"))))));
  });
  var newtypeWidth = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Width);
  var s1 = Data_Newtype.wrap(newtypeWidth)("s1");  
  var s11 = Data_Newtype.wrap(newtypeWidth)("s11");
  var s12 = Data_Newtype.wrap(newtypeWidth)("s12");
  var s5 = Data_Newtype.wrap(newtypeWidth)("s5");
  var s6 = Data_Newtype.wrap(newtypeWidth)("s6");
  var xl1 = Data_Newtype.wrap(newtypeWidth)("xl1");  
  var xl2 = Data_Newtype.wrap(newtypeWidth)("xl2");
  var xl3 = Data_Newtype.wrap(newtypeWidth)("xl3");
  var xl4 = Data_Newtype.wrap(newtypeWidth)("xl4");
  var xl5 = Data_Newtype.wrap(newtypeWidth)("xl5");
  var xl6 = Data_Newtype.wrap(newtypeWidth)("xl6");
  var xl8 = Data_Newtype.wrap(newtypeWidth)("xl8");
  var newtypePush = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Push);
  var push = Data_Newtype.wrap(newtypePush);
  var newtypePull = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Pull);
  var pull = Data_Newtype.wrap(newtypePull);
  var newtypeOffset = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Offset);
  var offset = Data_Newtype.wrap(newtypeOffset);
  var newtypeColumn = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Column);                                    
  var m8 = Data_Newtype.wrap(newtypeWidth)("m8");
  var m5 = Data_Newtype.wrap(newtypeWidth)("m5");
  var m4 = Data_Newtype.wrap(newtypeWidth)("m4");
  var m3 = Data_Newtype.wrap(newtypeWidth)("m3");
  var m2 = Data_Newtype.wrap(newtypeWidth)("m2");  
  var m10 = Data_Newtype.wrap(newtypeWidth)("m10");
  var m1 = Data_Newtype.wrap(newtypeWidth)("m1");
  var l4 = Data_Newtype.wrap(newtypeWidth)("l4");
  var l2 = Data_Newtype.wrap(newtypeWidth)("l2");
  var divider = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("divider");
  };
  var decorateColumnWidth = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (w) {
          return Data_Newtype.wrap(newtypeColumn)({
              widths: new Data_List_Types.Cons(w, v.widths),
              offset: v.offset,
              pull: v.pull,
              push: v.push
          });
      };
  });
  var decorateColumnOffset = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (o) {
          return Data_Newtype.wrap(newtypeColumn)({
              offset: new Data_List_Types.Cons(o, v.offset),
              pull: v.pull,
              push: v.push,
              widths: v.widths
          });
      };
  });
  var container = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("container");
  };
  var column = function (dictDecorate) {
      return function (dictVariadic) {
          return function (a) {
              return Materialize_Markup_Variadic.liftVariadic(dictVariadic)(Materialize_Markup_Decorate.decorateFlipped(dictDecorate)(a)(Data_Newtype.wrap(newtypeColumn)({
                  widths: Data_Monoid.mempty(Data_List_Types.monoidList),
                  offset: Data_Monoid.mempty(Data_List_Types.monoidList),
                  push: Data_Monoid.mempty(Data_List_Types.monoidList),
                  pull: Data_Monoid.mempty(Data_List_Types.monoidList)
              })));
          };
      };
  };
  exports["Column"] = Column;
  exports["Width"] = Width;
  exports["Offset"] = Offset;
  exports["Push"] = Push;
  exports["Pull"] = Pull;
  exports["row"] = row;
  exports["column"] = column;
  exports["container"] = container;
  exports["section"] = section;
  exports["divider"] = divider;
  exports["offset"] = offset;
  exports["push"] = push;
  exports["pull"] = pull;
  exports["s1"] = s1;
  exports["s5"] = s5;
  exports["s6"] = s6;
  exports["s11"] = s11;
  exports["s12"] = s12;
  exports["m1"] = m1;
  exports["m2"] = m2;
  exports["m3"] = m3;
  exports["m4"] = m4;
  exports["m5"] = m5;
  exports["m8"] = m8;
  exports["m10"] = m10;
  exports["l2"] = l2;
  exports["l4"] = l4;
  exports["xl1"] = xl1;
  exports["xl2"] = xl2;
  exports["xl3"] = xl3;
  exports["xl4"] = xl4;
  exports["xl5"] = xl5;
  exports["xl6"] = xl6;
  exports["xl8"] = xl8;
  exports["decorateColumnWidth"] = decorateColumnWidth;
  exports["decorateColumnOffset"] = decorateColumnOffset;
  exports["renderColumn"] = renderColumn;
  exports["renderOffset"] = renderOffset;
  exports["renderPush"] = renderPush;
  exports["renderPull"] = renderPull;
  exports["newtypeWidth"] = newtypeWidth;
  exports["renderWidth"] = renderWidth;
  exports["newtypeOffset"] = newtypeOffset;
  exports["newtypePull"] = newtypePull;
  exports["newtypePush"] = newtypePush;
  exports["newtypeColumn"] = newtypeColumn;
})(PS["Materialize.Grid"] = PS["Materialize.Grid"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Newtype = PS["Data.Newtype"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Overriden = PS["Materialize.Overriden"];
  var Prelude = PS["Prelude"];                 
  var Show = (function () {
      function Show() {

      };
      Show.value = new Show();
      return Show;
  })();
  var Hide = (function () {
      function Hide() {

      };
      Hide.value = new Hide();
      return Hide;
  })();
  var Visibility = function (x) {
      return x;
  };
  var On = function (x) {
      return x;
  };                                                                                                                              
  var renderVisibility = new Materialize_Markup_Render.Render(function (v) {
      var render$prime = function (v1) {
          return function (v2) {
              return function (v3) {
                  return function (v4) {
                      if (v1 instanceof Hide && (v2 && (!v3 && !v4))) {
                          return [ "hide-on-small-only" ];
                      };
                      if (v1 instanceof Hide && (!v2 && (v3 && !v4))) {
                          return [ "hide-on-med-only" ];
                      };
                      if (v1 instanceof Hide && (!v2 && (!v3 && v4))) {
                          return [ "hide-on-large-only" ];
                      };
                      if (v1 instanceof Hide && (v2 && (v3 && !v4))) {
                          return [ "hide-on-med-and-down" ];
                      };
                      if (v1 instanceof Hide && (!v2 && (v3 && v4))) {
                          return [ "hide-on-med-and-up" ];
                      };
                      if (v1 instanceof Hide && (v2 && (!v3 && v4))) {
                          return [ "hide-on-small-only", "hide-on-large-only" ];
                      };
                      if (v1 instanceof Hide) {
                          return [ "hide" ];
                      };
                      if (v1 instanceof Show && (v2 && (!v3 && !v4))) {
                          return [ "show-on-small" ];
                      };
                      if (v1 instanceof Show && (!v2 && (v3 && !v4))) {
                          return [ "show-on-medium" ];
                      };
                      if (v1 instanceof Show && (!v2 && (!v3 && v4))) {
                          return [ "show-on-large" ];
                      };
                      if (v1 instanceof Show && (v2 && (v3 && !v4))) {
                          return [ "show-on-medium-and-down" ];
                      };
                      if (v1 instanceof Show && (!v2 && (v3 && v4))) {
                          return [ "show-on-medium-and-up" ];
                      };
                      if (v1 instanceof Show && (v2 && (!v3 && v4))) {
                          return [ "show-on-small", "show-on-large" ];
                      };
                      if (v1 instanceof Show) {
                          return [ "show" ];
                      };
                      throw new Error("Failed pattern match at Materialize.Visibility line 61, column 9 - line 61, column 63: " + [ v1.constructor.name, v2.constructor.name, v3.constructor.name, v4.constructor.name ]);
                  };
              };
          };
      };
      return Materialize_Markup_Render.render(Materialize_Markup_Render.renderArray(Materialize_Markup_Render["renderString'"]))(render$prime(v["type'"])(v.onSmall)(v.onMedium)(v.onLarge));
  });
  var newtypeVisibility = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Visibility);
  var visibility = function (dictVariadic) {
      return function (t) {
          return Materialize_Markup_Variadic.liftVariadic(dictVariadic)(Data_Newtype.wrap(newtypeVisibility)({
              "type'": t,
              onSmall: false,
              onMedium: false,
              onLarge: false
          }));
      };
  };
  var newtypeOn = new Data_Newtype.Newtype(function (n) {
      return n;
  }, On);
  var on = Data_Newtype.wrap(newtypeOn);
  var hide = function (dictVariadic) {
      return visibility(dictVariadic)(Hide.value);
  };
  var decorateVisibilityOnSmall = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (v1) {
          return Data_Newtype.wrap(newtypeVisibility)({
              onSmall: true,
              onLarge: v.onLarge,
              onMedium: v.onMedium,
              "type'": v["type'"]
          });
      };
  });
  var decorateVisibilityOnMedium = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (v1) {
          return Data_Newtype.wrap(newtypeVisibility)({
              onMedium: true,
              onLarge: v.onLarge,
              onSmall: v.onSmall,
              "type'": v["type'"]
          });
      };
  });
  var decorateVisibilityOnLarge = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (v1) {
          return Data_Newtype.wrap(newtypeVisibility)({
              onLarge: true,
              onMedium: v.onMedium,
              onSmall: v.onSmall,
              "type'": v["type'"]
          });
      };
  });
  exports["Visibility"] = Visibility;
  exports["hide"] = hide;
  exports["on"] = on;
  exports["decorateVisibilityOnSmall"] = decorateVisibilityOnSmall;
  exports["decorateVisibilityOnMedium"] = decorateVisibilityOnMedium;
  exports["decorateVisibilityOnLarge"] = decorateVisibilityOnLarge;
  exports["renderVisibility"] = renderVisibility;
  exports["newtypeVisibility"] = newtypeVisibility;
  exports["newtypeOn"] = newtypeOn;
})(PS["Materialize.Visibility"] = PS["Materialize.Visibility"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Data_Either_Nested = PS["Data.Either.Nested"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Overriden = PS["Materialize.Overriden"];
  var Materialize_Types = PS["Materialize.Types"];
  var Prelude = PS["Prelude"];                 
  var Card = function (x) {
      return x;
  };                                                                                                                        
  var stickyAction = Data_Typelevel_Undefined["undefined"];
  var renderStickyAction = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("sticky-action");
  });
  var renderHoverable = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("hoverable");
  });
  var renderHorizontal = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("horizontal");
  });
  var renderCard = new Materialize_Markup_Render.Render(function (v) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(renderHoverable))(v.hoverable))(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Markup_Render.renderEither(Materialize_Overriden.renderSmall)(Materialize_Markup_Render.renderEither(Materialize_Overriden.renderMedium)(Materialize_Markup_Render.renderEither(Materialize_Overriden.renderLarge)(Materialize_Markup_Render.renderVoid)))))(v.size))(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(renderHorizontal))(v.horizontal))(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(renderStickyAction))(v.stickyAction))(Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])(Data_Maybe.fromMaybe("card")(Data_Functor.voidRight(Data_Maybe.functorMaybe)("card-panel")(v.panel)))))));
  });
  var panel = Data_Typelevel_Undefined["undefined"];
  var newtypeCard = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Card);
  var hoverable = Data_Typelevel_Undefined["undefined"];
  var horizontal = Data_Typelevel_Undefined["undefined"];
  var decorateCardHoverable = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (h) {
          return Data_Newtype.wrap(newtypeCard)({
              hoverable: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(h),
              horizontal: v.horizontal,
              panel: v.panel,
              size: v.size,
              stickyAction: v.stickyAction
          });
      };
  });
  var cardTitle = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("card-title");
  };
  var cardImage = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("card-image");
  };
  var cardContent = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("card-content");
  };
  var cardAction = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("card-action");
  };
  var card = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)(Data_Newtype.wrap(newtypeCard)({
          horizontal: Data_Maybe.Nothing.value,
          stickyAction: Data_Maybe.Nothing.value,
          size: Data_Maybe.Nothing.value,
          hoverable: Data_Maybe.Nothing.value,
          panel: Data_Maybe.Nothing.value
      }));
  };
  exports["Card"] = Card;
  exports["card"] = card;
  exports["horizontal"] = horizontal;
  exports["cardContent"] = cardContent;
  exports["cardTitle"] = cardTitle;
  exports["cardAction"] = cardAction;
  exports["cardImage"] = cardImage;
  exports["stickyAction"] = stickyAction;
  exports["hoverable"] = hoverable;
  exports["panel"] = panel;
  exports["decorateCardHoverable"] = decorateCardHoverable;
  exports["renderCard"] = renderCard;
  exports["renderHorizontal"] = renderHorizontal;
  exports["renderStickyAction"] = renderStickyAction;
  exports["renderHoverable"] = renderHoverable;
  exports["newtypeCard"] = newtypeCard;
})(PS["Materialize.Cards"] = PS["Materialize.Cards"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Either_Nested = PS["Data.Either.Nested"];
  var Data_Function = PS["Data.Function"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Overriden = PS["Materialize.Overriden"];
  var Materialize_Types = PS["Materialize.Types"];
  var Prelude = PS["Prelude"];
  var Alignment = function (x) {
      return x;
  };
  var verticalCenter = Data_Typelevel_Undefined["undefined"];                                                                    
  var renderVerticalCenter = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("valign-wrapper");
  });
  var renderHorizontalCenter = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("center");
  });                                                                                                                           
  var renderAlignment = new Materialize_Markup_Render.Render(function (v) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Decorate.decorate(Materialize_Markup_Decorate.decorateFunctor(Data_List_Types.functorList)(Materialize_Markup_Decorate.decorateString))(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Markup_Render.renderEither(Materialize_Overriden.renderLeft)(Materialize_Markup_Render.renderEither(renderHorizontalCenter)(Materialize_Markup_Render.renderEither(Materialize_Overriden.renderRight)(Materialize_Markup_Render.renderVoid)))))(v.horizontal))("align"))(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(renderVerticalCenter))(v.vertical));
  });       
  var newtypeAlignment = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Alignment);
  var horizontalCenter = Data_Typelevel_Undefined["undefined"];
  var decorateAlignmentVerticalCenter = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (v1) {
          return Data_Newtype.wrap(newtypeAlignment)({
              vertical: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v1),
              horizontal: v.horizontal
          });
      };
  });
  var decorateAlignmentRight = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (r) {
          return Data_Newtype.wrap(newtypeAlignment)({
              horizontal: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Either_Nested.in3(r)),
              vertical: v.vertical
          });
      };
  });
  var decorateAlignmentHorizontalCenter = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (c) {
          return Data_Newtype.wrap(newtypeAlignment)({
              horizontal: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Either_Nested.in2(c)),
              vertical: v.vertical
          });
      };
  });
  var align = function (dictDecorate) {
      return function (dictVariadic) {
          return function (a) {
              return Materialize_Markup_Variadic.liftVariadic(dictVariadic)(Materialize_Markup_Decorate.decorateFlipped(dictDecorate)(a)(Data_Newtype.wrap(newtypeAlignment)({
                  vertical: Data_Maybe.Nothing.value,
                  horizontal: Data_Maybe.Nothing.value
              })));
          };
      };
  };
  exports["Alignment"] = Alignment;
  exports["align"] = align;
  exports["horizontalCenter"] = horizontalCenter;
  exports["verticalCenter"] = verticalCenter;
  exports["decorateAlignmentHorizontalCenter"] = decorateAlignmentHorizontalCenter;
  exports["decorateAlignmentRight"] = decorateAlignmentRight;
  exports["decorateAlignmentVerticalCenter"] = decorateAlignmentVerticalCenter;
  exports["renderAlignment"] = renderAlignment;
  exports["renderVerticalCenter"] = renderVerticalCenter;
  exports["renderHorizontalCenter"] = renderHorizontalCenter;
  exports["newtypeAlignment"] = newtypeAlignment;
})(PS["Materialize.Alignment"] = PS["Materialize.Alignment"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Overriden = PS["Materialize.Overriden"];
  var Materialize_Types = PS["Materialize.Types"];
  var Prelude = PS["Prelude"];                 
  var Raised = (function () {
      function Raised() {

      };
      Raised.value = new Raised();
      return Raised;
  })();
  var Floating = (function () {
      function Floating() {

      };
      Floating.value = new Floating();
      return Floating;
  })();
  var Flat = (function () {
      function Flat() {

      };
      Flat.value = new Flat();
      return Flat;
  })();
  var Button = function (x) {
      return x;
  };                                                                                                                          
  var renderPulse = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("pulse");
  });
  var renderHalfwayFab = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("halfway-fab");
  });
  var renderButton = new Materialize_Markup_Render.Render(function (v) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Overriden.renderDisabled))(v.disabled))(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Decorate.functorDecorate(Data_List_Types.functorList)(Materialize_Markup_Decorate.decorateString)("btn")(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Markup_Render.renderEither(Materialize_Overriden.renderSmall)(Materialize_Overriden.renderLarge)))(v.size)))(Data_Semigroup.append(Data_List_Types.semigroupList)((function () {
          if (v["type'"] instanceof Raised) {
              return Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Markup_Render["renderString'"]))(Data_Maybe.maybe(Control_Applicative.pure(Data_Maybe.applicativeMaybe)("btn"))(Data_Function["const"](Data_Maybe.Nothing.value))(v.size));
          };
          if (v["type'"] instanceof Floating) {
              return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("btn-floating");
          };
          if (v["type'"] instanceof Flat) {
              return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("btn-flat");
          };
          throw new Error("Failed pattern match at Materialize.Buttons line 95, column 13 - line 98, column 42: " + [ v["type'"].constructor.name ]);
      })())(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(renderHalfwayFab))(v.halfwayFab))(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(renderPulse))(v.pulse)))));
  });                       
  var pulse = Data_Typelevel_Undefined["undefined"];
  var newtypeButton = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Button);
  var halfwayFab = Data_Typelevel_Undefined["undefined"];
  var floating = Floating.value;
  var decorateButtonType = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (t) {
          return Data_Newtype.wrap(newtypeButton)({
              "type'": t,
              disabled: v.disabled,
              halfwayFab: v.halfwayFab,
              pulse: v.pulse,
              size: v.size
          });
      };
  });
  var button = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)(Data_Newtype.wrap(newtypeButton)({
          "type'": Raised.value,
          size: Data_Maybe.Nothing.value,
          disabled: Data_Maybe.Nothing.value,
          halfwayFab: Data_Maybe.Nothing.value,
          pulse: Data_Maybe.Nothing.value
      }));
  };
  exports["Button"] = Button;
  exports["button"] = button;
  exports["floating"] = floating;
  exports["halfwayFab"] = halfwayFab;
  exports["pulse"] = pulse;
  exports["decorateButtonType"] = decorateButtonType;
  exports["renderButton"] = renderButton;
  exports["renderHalfwayFab"] = renderHalfwayFab;
  exports["renderPulse"] = renderPulse;
  exports["newtypeButton"] = newtypeButton;
})(PS["Materialize.Buttons"] = PS["Materialize.Buttons"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Typelevel_Num = PS["Data.Typelevel.Num"];
  var Data_Typelevel_Num_Sets = PS["Data.Typelevel.Num.Sets"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Prelude = PS["Prelude"];                 
  var Lighten = (function () {
      function Lighten() {

      };
      Lighten.value = new Lighten();
      return Lighten;
  })();
  var Darken = (function () {
      function Darken() {

      };
      Darken.value = new Darken();
      return Darken;
  })();
  var Accent = (function () {
      function Accent() {

      };
      Accent.value = new Accent();
      return Accent;
  })();
  var Shade = (function () {
      function Shade(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Shade.create = function (value0) {
          return function (value1) {
              return new Shade(value0, value1);
          };
      };
      return Shade;
  })();
  var Amber = (function () {
      function Amber() {

      };
      Amber.value = new Amber();
      return Amber;
  })();
  var Black = (function () {
      function Black() {

      };
      Black.value = new Black();
      return Black;
  })();
  var Blue = (function () {
      function Blue() {

      };
      Blue.value = new Blue();
      return Blue;
  })();
  var BlueGrey = (function () {
      function BlueGrey() {

      };
      BlueGrey.value = new BlueGrey();
      return BlueGrey;
  })();
  var Brown = (function () {
      function Brown() {

      };
      Brown.value = new Brown();
      return Brown;
  })();
  var Cyan = (function () {
      function Cyan() {

      };
      Cyan.value = new Cyan();
      return Cyan;
  })();
  var DeepOrange = (function () {
      function DeepOrange() {

      };
      DeepOrange.value = new DeepOrange();
      return DeepOrange;
  })();
  var DeepPurple = (function () {
      function DeepPurple() {

      };
      DeepPurple.value = new DeepPurple();
      return DeepPurple;
  })();
  var Green = (function () {
      function Green() {

      };
      Green.value = new Green();
      return Green;
  })();
  var Grey = (function () {
      function Grey() {

      };
      Grey.value = new Grey();
      return Grey;
  })();
  var Indigo = (function () {
      function Indigo() {

      };
      Indigo.value = new Indigo();
      return Indigo;
  })();
  var LightBlue = (function () {
      function LightBlue() {

      };
      LightBlue.value = new LightBlue();
      return LightBlue;
  })();
  var LightGreen = (function () {
      function LightGreen() {

      };
      LightGreen.value = new LightGreen();
      return LightGreen;
  })();
  var Lime = (function () {
      function Lime() {

      };
      Lime.value = new Lime();
      return Lime;
  })();
  var Orange = (function () {
      function Orange() {

      };
      Orange.value = new Orange();
      return Orange;
  })();
  var Pink = (function () {
      function Pink() {

      };
      Pink.value = new Pink();
      return Pink;
  })();
  var Purple = (function () {
      function Purple() {

      };
      Purple.value = new Purple();
      return Purple;
  })();
  var Red = (function () {
      function Red() {

      };
      Red.value = new Red();
      return Red;
  })();
  var Teal = (function () {
      function Teal() {

      };
      Teal.value = new Teal();
      return Teal;
  })();
  var Transparent = (function () {
      function Transparent() {

      };
      Transparent.value = new Transparent();
      return Transparent;
  })();
  var White = (function () {
      function White() {

      };
      White.value = new White();
      return White;
  })();
  var Yellow = (function () {
      function Yellow() {

      };
      Yellow.value = new Yellow();
      return Yellow;
  })();
  var Color = (function () {
      function Color(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Color.create = function (value0) {
          return function (value1) {
              return new Color(value0, value1);
          };
      };
      return Color;
  })();                     
  var white = White.value;
  var variadicReturnColor = new Materialize_Markup_Variadic.Variadic(Control_Category.identity(Control_Category.categoryFn));
  var renderVariant = new Materialize_Markup_Render.Render(function (v) {
      return Control_Applicative.pure(Data_List_Types.applicativeList)((function () {
          if (v instanceof Lighten) {
              return "lighten";
          };
          if (v instanceof Darken) {
              return "darken";
          };
          if (v instanceof Accent) {
              return "accent";
          };
          throw new Error("Failed pattern match at Materialize.Color line 206, column 21 - line 211, column 1: " + [ v.constructor.name ]);
      })());
  });
  var renderShade = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Decorate.decorate(Materialize_Markup_Decorate.decorateFunctor(Data_List_Types.functorList)(Materialize_Markup_Decorate.decorateString))(Materialize_Markup_Render.render(renderVariant)(v.value0))(Data_Show.show(Data_Show.showInt)(v.value1));
  });
  var renderHue = new Materialize_Markup_Render.Render(function (h) {
      return Control_Applicative.pure(Data_List_Types.applicativeList)((function () {
          if (h instanceof Amber) {
              return "amber";
          };
          if (h instanceof Black) {
              return "black";
          };
          if (h instanceof Blue) {
              return "blue";
          };
          if (h instanceof BlueGrey) {
              return "blue-grey";
          };
          if (h instanceof Brown) {
              return "brown";
          };
          if (h instanceof Cyan) {
              return "cyan";
          };
          if (h instanceof DeepOrange) {
              return "deep-orange";
          };
          if (h instanceof DeepPurple) {
              return "deep-purple";
          };
          if (h instanceof Green) {
              return "green";
          };
          if (h instanceof Grey) {
              return "grey";
          };
          if (h instanceof Indigo) {
              return "indigo";
          };
          if (h instanceof LightBlue) {
              return "light-blue";
          };
          if (h instanceof LightGreen) {
              return "light-green";
          };
          if (h instanceof Lime) {
              return "lime";
          };
          if (h instanceof Orange) {
              return "orange";
          };
          if (h instanceof Pink) {
              return "pink";
          };
          if (h instanceof Purple) {
              return "purple";
          };
          if (h instanceof Red) {
              return "red";
          };
          if (h instanceof Teal) {
              return "teal";
          };
          if (h instanceof Transparent) {
              return "transparent";
          };
          if (h instanceof White) {
              return "white";
          };
          if (h instanceof Yellow) {
              return "yellow";
          };
          throw new Error("Failed pattern match at Materialize.Color line 178, column 21 - line 202, column 1: " + [ h.constructor.name ]);
      })());
  });
  var renderColor = new Materialize_Markup_Render.Render(function (v) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(renderHue)(v.value0))(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(renderShade))(v.value1));
  });
  var red = Red.value;      
  var pureColor = Data_Function.flip(Color.create)(Data_Maybe.Nothing.value);
  var lighten = function (dictPos) {
      return function (dictLtEq) {
          return function ($37) {
              return Shade.create(Lighten.value)(Data_Typelevel_Num_Sets.toInt(dictPos.Nat0())($37));
          };
      };
  };                      
  var error = red;                  
  var decorateColorShade = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (s$prime) {
          var decorate$prime = function (v1) {
              return function (v2) {
                  if (v1 instanceof Brown && v2.value0 instanceof Accent) {
                      return pureColor(error);
                  };
                  if (v1 instanceof Grey && v2.value0 instanceof Accent) {
                      return pureColor(error);
                  };
                  if (v1 instanceof BlueGrey && v2.value0 instanceof Accent) {
                      return pureColor(error);
                  };
                  if (v1 instanceof Black) {
                      return pureColor(error);
                  };
                  if (v1 instanceof White) {
                      return pureColor(error);
                  };
                  if (v1 instanceof Transparent) {
                      return pureColor(error);
                  };
                  return Color.create(v1)(new Data_Maybe.Just(v2));
              };
          };
          return decorate$prime(v.value0)(s$prime);
      };
  });                   
  var color = function (dictVariadic) {
      return function ($39) {
          return Materialize_Markup_Variadic.liftVariadic(dictVariadic)(pureColor($39));
      };
  };                      
  var blueGrey = BlueGrey.value;
  var black = Black.value;
  var background = function (dictVariadic) {
      return color(dictVariadic);
  };
  exports["Color"] = Color;
  exports["color"] = color;
  exports["background"] = background;
  exports["black"] = black;
  exports["blueGrey"] = blueGrey;
  exports["red"] = red;
  exports["white"] = white;
  exports["lighten"] = lighten;
  exports["variadicReturnColor"] = variadicReturnColor;
  exports["decorateColorShade"] = decorateColorShade;
  exports["renderColor"] = renderColor;
  exports["renderHue"] = renderHue;
  exports["renderShade"] = renderShade;
})(PS["Materialize.Color"] = PS["Materialize.Color"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Newtype = PS["Data.Newtype"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];                 
  var Icons = function (x) {
      return x;
  };
  var renderIcons = Materialize_Markup_Render["renderString'"];
  var newtypeIcons = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Icons);                                           
  var playArrow = Data_Newtype.wrap(newtypeIcons)("play_arrow");      
  var shortText = Data_Newtype.wrap(newtypeIcons)("short_text");       
  var subtitles = Data_Newtype.wrap(newtypeIcons)("subtitles");
  var title = Data_Newtype.wrap(newtypeIcons)("title");        
  var undo = Data_Newtype.wrap(newtypeIcons)("undo");      
  var lowPriority = Data_Newtype.wrap(newtypeIcons)("low_priority");  
  var link = Data_Newtype.wrap(newtypeIcons)("link");                          
  var image = Data_Newtype.wrap(newtypeIcons)("image");   
  var home = Data_Newtype.wrap(newtypeIcons)("home");                   
  var close = Data_Newtype.wrap(newtypeIcons)("close");        
  var audiotrack = Data_Newtype.wrap(newtypeIcons)("audiotrack");
  var add = Data_Newtype.wrap(newtypeIcons)("add");
  exports["Icons"] = Icons;
  exports["add"] = add;
  exports["audiotrack"] = audiotrack;
  exports["close"] = close;
  exports["home"] = home;
  exports["image"] = image;
  exports["link"] = link;
  exports["lowPriority"] = lowPriority;
  exports["playArrow"] = playArrow;
  exports["shortText"] = shortText;
  exports["subtitles"] = subtitles;
  exports["title"] = title;
  exports["undo"] = undo;
  exports["newtypeIcons"] = newtypeIcons;
  exports["renderIcons"] = renderIcons;
})(PS["Materialize.Icons.Data"] = PS["Materialize.Icons.Data"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Data_Either_Nested = PS["Data.Either.Nested"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Materialize_Icons_Data = PS["Materialize.Icons.Data"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Dsl = PS["Materialize.Markup.Dsl"];
  var Materialize_Markup_Markupable = PS["Materialize.Markup.Markupable"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Overriden = PS["Materialize.Overriden"];
  var Materialize_Types = PS["Materialize.Types"];
  var Prelude = PS["Prelude"];
  var Text_Smolder_HTML = PS["Text.Smolder.HTML"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];
  var Type_Equality = PS["Type.Equality"];                 
  var Icon = function (x) {
      return x;
  }; 
  var prefixedInInputField = Data_Typelevel_Undefined["undefined"];
  var newtypeIcon = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Icon);
  var materialIcons = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("material-icons");
  };
  var markupableIcon = new Materialize_Markup_Markupable.Markupable(function (v) {
      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.i)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Markup_Variadic.liftVariadic(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render.renderMaybe(Materialize_Markup_Render.renderEither(Materialize_Overriden.renderTiny)(Materialize_Markup_Render.renderEither(Materialize_Overriden.renderSmall)(Materialize_Markup_Render.renderEither(Materialize_Overriden.renderMedium)(Materialize_Markup_Render.renderEither(Materialize_Overriden.renderLarge)(Materialize_Markup_Render.renderVoid))))))(Type_Equality.refl))(v.size))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(materialIcons(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl)))(function () {
              return Materialize_Markup_Variadic.liftVariadic(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render.renderMaybe(Materialize_Markup_Render["renderString'"]))(Type_Equality.refl))(Data_Functor.voidRight(Data_Maybe.functorMaybe)("prefix")(v.prefixedInInputField));
          });
      })))(Text_Smolder_Markup.text(Materialize_Markup_Render.renderString(Materialize_Icons_Data.renderIcons)(v.icon)));
  });
  var icon = function (dictVariadic) {
      return function (i) {
          return Materialize_Markup_Variadic.liftVariadic(dictVariadic)(Data_Newtype.wrap(newtypeIcon)({
              size: Data_Maybe.Nothing.value,
              icon: i,
              prefixedInInputField: Data_Maybe.Nothing.value
          }));
      };
  }; 
  var decorateIconPrefixed = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (p) {
          return Data_Newtype.wrap(newtypeIcon)({
              prefixedInInputField: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(p),
              icon: v.icon,
              size: v.size
          });
      };
  });
  exports["Icon"] = Icon;
  exports["icon"] = icon;
  exports["materialIcons"] = materialIcons;
  exports["prefixedInInputField"] = prefixedInInputField;
  exports["decorateIconPrefixed"] = decorateIconPrefixed;
  exports["markupableIcon"] = markupableIcon;
  exports["newtypeIcon"] = newtypeIcon;
})(PS["Materialize.Icons"] = PS["Materialize.Icons"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Overriden = PS["Materialize.Overriden"];
  var Prelude = PS["Prelude"];                 
  var Video = function (x) {
      return x;
  };                                                                                                                         
  var renderVideo = new Materialize_Markup_Render.Render(function (v) {
      var render$prime = function (v1) {
          if (v1) {
              return Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Markup_Render["renderString'"]))(Data_Functor.voidRight(Data_Maybe.functorMaybe)("video-container")(v.responsive));
          };
          return Materialize_Markup_Decorate.decorate(Materialize_Markup_Decorate.decorateFunctor(Data_List_Types.functorList)(Materialize_Markup_Decorate.decorateString))(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Overriden.renderResponsive))(v.responsive))("video");
      };
      return render$prime(v.embedded);
  });
  var newtypeVideo = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Video);
  var video = function (dictVariadic) {
      return function (r) {
          return function (e) {
              return Materialize_Markup_Variadic.liftVariadic(dictVariadic)(Data_Newtype.wrap(newtypeVideo)({
                  embedded: e,
                  responsive: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(r)
              }));
          };
      };
  };
  exports["Video"] = Video;
  exports["video"] = video;
  exports["renderVideo"] = renderVideo;
  exports["newtypeVideo"] = newtypeVideo;
})(PS["Materialize.Media.Videos"] = PS["Materialize.Media.Videos"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Materialize_Color = PS["Materialize.Color"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Overriden = PS["Materialize.Overriden"];
  var Prelude = PS["Prelude"];                 
  var Waves = function (x) {
      return x;
  };                                                                                                                         
  var renderLight = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("light");
  });
  var renderWaves = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Decorate.functorDecorate(Data_List_Types.functorList)(Materialize_Markup_Decorate.decorateString)("waves")(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("effect"))(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Markup_Render["renderString'"]))(Data_Functor.voidRight(Data_Maybe.functorMaybe)("circle")(v.circular)))(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Markup_Render["renderString'"]))(Data_Functor.voidRight(Data_Maybe.functorMaybe)("block")(v.displayBlock)))(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Markup_Render.renderEither(Materialize_Color.renderColor)(renderLight)))(v.color)))));
  });
  var newtypeWaves = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Waves);
  var waves = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)(Data_Newtype.wrap(newtypeWaves)({
          color: Data_Maybe.Nothing.value,
          circular: Data_Maybe.Nothing.value,
          displayBlock: Data_Maybe.Nothing.value
      }));
  };
  var light = Data_Typelevel_Undefined["undefined"];
  var displayBlock = Data_Typelevel_Undefined["undefined"];
  var decorateWavesLight = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (l) {
          return Data_Newtype.wrap(newtypeWaves)({
              color: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Either.Right(l)),
              circular: v.circular,
              displayBlock: v.displayBlock
          });
      };
  });
  var decorateWavesDisplayBlock = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (b) {
          return Data_Newtype.wrap(newtypeWaves)({
              displayBlock: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(b),
              circular: v.circular,
              color: v.color
          });
      };
  });
  var decorateWavesColor = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (c) {
          return Data_Newtype.wrap(newtypeWaves)({
              color: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Either.Left(c)),
              circular: v.circular,
              displayBlock: v.displayBlock
          });
      };
  });
  exports["Waves"] = Waves;
  exports["waves"] = waves;
  exports["displayBlock"] = displayBlock;
  exports["light"] = light;
  exports["decorateWavesColor"] = decorateWavesColor;
  exports["decorateWavesLight"] = decorateWavesLight;
  exports["decorateWavesDisplayBlock"] = decorateWavesDisplayBlock;
  exports["renderWaves"] = renderWaves;
  exports["renderLight"] = renderLight;
  exports["newtypeWaves"] = newtypeWaves;
})(PS["Materialize.Waves"] = PS["Materialize.Waves"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS = PS["CSS"];
  var CSS_Border = PS["CSS.Border"];
  var CSS_Geometry = PS["CSS.Geometry"];
  var CSS_Overflow = PS["CSS.Overflow"];
  var CSS_Size = PS["CSS.Size"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_Typelevel_Num = PS["Data.Typelevel.Num"];
  var Data_Typelevel_Num_Ops = PS["Data.Typelevel.Num.Ops"];
  var Data_Typelevel_Num_Reps = PS["Data.Typelevel.Num.Reps"];
  var Data_Typelevel_Num_Sets = PS["Data.Typelevel.Num.Sets"];
  var Data_Unit = PS["Data.Unit"];
  var Materialize_Alignment = PS["Materialize.Alignment"];
  var Materialize_Buttons = PS["Materialize.Buttons"];
  var Materialize_Cards = PS["Materialize.Cards"];
  var Materialize_Color = PS["Materialize.Color"];
  var Materialize_Grid = PS["Materialize.Grid"];
  var Materialize_Icons = PS["Materialize.Icons"];
  var Materialize_Icons_Data = PS["Materialize.Icons.Data"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Dsl = PS["Materialize.Markup.Dsl"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Media_Images = PS["Materialize.Media.Images"];
  var Materialize_Media_Videos = PS["Materialize.Media.Videos"];
  var Materialize_Overriden = PS["Materialize.Overriden"];
  var Materialize_Tooltips = PS["Materialize.Tooltips"];
  var Materialize_Types = PS["Materialize.Types"];
  var Materialize_Waves = PS["Materialize.Waves"];
  var Prelude = PS["Prelude"];
  var Pux_DOM_Events = PS["Pux.DOM.Events"];
  var Pux_DOM_HTML = PS["Pux.DOM.HTML"];
  var Pux_DOM_HTML_Attributes = PS["Pux.DOM.HTML.Attributes"];
  var Text_Smolder_HTML = PS["Text.Smolder.HTML"];
  var Text_Smolder_HTML_Attributes = PS["Text.Smolder.HTML.Attributes"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];
  var Type_Equality = PS["Type.Equality"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Yousort_Component_State = PS["Yousort.Component.State"];
  var Yousort_Component_Update = PS["Yousort.Component.Update"];
  var Yousort_Route = PS["Yousort.Route"];                 
  var title = function (t) {
      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.h1)(Materialize_Markup_Dsl.classList(Materialize_Alignment.align(Materialize_Alignment.decorateAlignmentHorizontalCenter)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Alignment.renderAlignment)(Type_Equality.refl))(Materialize_Alignment.horizontalCenter)))(Text_Smolder_Markup.text(t));
  };
  var textEmphasis = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("text-emphasis");
  };
  var textButton$prime = function (t) {
      return function (b) {
          return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.a)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Buttons.button(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Buttons.renderButton)(Type_Equality.refl)))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Markup_Variadic.variadicDecorate(Materialize_Waves.waves(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Waves.renderWaves)(Type_Equality.refl))(Materialize_Waves.decorateWavesLight)))(Materialize_Waves.light))(function () {
                  return Materialize_Markup_Variadic.liftVariadic(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Color.renderColor)(Type_Equality.refl))(b);
              });
          })))(Text_Smolder_Markup.text(t));
      };
  };
  var sectionRow = Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Grid.row(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl)))(function () {
      return Materialize_Grid.section(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl));
  })));
  var sectionHeader = function (h) {
      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.h4)(Materialize_Markup_Dsl.classList(Materialize_Alignment.align(Materialize_Alignment.decorateAlignmentHorizontalCenter)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Alignment.renderAlignment)(Type_Equality.refl))(Materialize_Alignment.horizontalCenter)))(Text_Smolder_Markup.text(h));
  };
  var section = Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Materialize_Grid.section(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl))));
  var row = Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Materialize_Grid.row(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl))));
  var primaryTextColor = Materialize_Color.background(Materialize_Color.variadicReturnColor)(Materialize_Color.white);
  var primaryColor = Materialize_Markup_Variadic.variadicDecorate(Materialize_Color.background(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Color.variadicReturnColor)(Materialize_Color.decorateColorShade))(Materialize_Color.blueGrey))(Materialize_Color.lighten(Data_Typelevel_Num_Sets.posD1)(Data_Typelevel_Num_Ops.trichLtEq(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD6)(Data_Typelevel_Num_Ops.isZeroD6)(Data_Typelevel_Num_Ops.divMod10D5D0)(Data_Typelevel_Num_Ops.succPxiD5xiD6)(Data_Typelevel_Num_Ops.divMod10D6D0))(Data_Typelevel_Num_Ops.trichD1D6))(Data_Typelevel_Num_Reps.d1));
  var textButton = Data_Function.flip(textButton$prime)(primaryColor);
  var onClickNotCanceled = function (f) {
      return Pux_DOM_Events.onClick(function (e) {
          var v = Web_Event_Event.defaultPrevented(e);
          if (v) {
              return Yousort_Component_Update.Noop.value;
          };
          return f(e);
      });
  };
  var onClickCancel = function (f) {
      var unsafeRunEffect = function (e$prime) {
          return Data_Function.flip(Data_Function["const"])(e$prime(Data_Unit.unit));
      };
      return Pux_DOM_Events.onClick(function (e) {
          return unsafeRunEffect(Web_Event_Event.preventDefault(e))(f(e));
      });
  };
  var nonInterruptiveColor = Materialize_Markup_Variadic.variadicDecorate(Materialize_Color.background(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Color.variadicReturnColor)(Materialize_Color.decorateColorShade))(Materialize_Color.blueGrey))(Materialize_Color.lighten(Data_Typelevel_Num_Sets.posD2)(Data_Typelevel_Num_Ops.trichLtEq(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD6)(Data_Typelevel_Num_Ops.isZeroD6)(Data_Typelevel_Num_Ops.divMod10D5D0)(Data_Typelevel_Num_Ops.succPxiD5xiD6)(Data_Typelevel_Num_Ops.divMod10D6D0))(Data_Typelevel_Num_Ops.trichD2D6))(Data_Typelevel_Num_Reps.d2));
  var monologue = function (m) {
      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.h3)(Materialize_Markup_Dsl.classList(Materialize_Alignment.align(Materialize_Alignment.decorateAlignmentHorizontalCenter)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Alignment.renderAlignment)(Type_Equality.refl))(Materialize_Alignment.horizontalCenter)))(Text_Smolder_Markup.text(m));
  };
  var mediaInfoCardContent = function (v) {
      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Text_Smolder_HTML_Attributes.className(Materialize_Cards.cardContent(Materialize_Markup_Variadic.variadicReturnString(Materialize_Markup_Render["renderString'"]))))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Text_Smolder_HTML_Attributes.className(Materialize_Cards.cardTitle(Materialize_Markup_Variadic.variadicReturnString(Materialize_Markup_Render["renderString'"]))))(Text_Smolder_Markup.text(v.caption)))(function () {
          var v1 = Data_String_Common["null"](v.description);
          if (v1) {
              return Text_Smolder_Markup.empty;
          };
          return Text_Smolder_HTML.p(Text_Smolder_Markup.text(v.description));
      }));
  };
  var key = function (dictShow) {
      return function ($37) {
          return Pux_DOM_HTML_Attributes.key(Data_Show.show(dictShow)($37));
      };
  };
  var interruptiveColor = Materialize_Color.background(Materialize_Color.variadicReturnColor)(Materialize_Color.red);
  var iconButton$prime = function (t) {
      return function (i) {
          return function (b) {
              return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.a)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Markup_Variadic.variadicDecorate(Materialize_Buttons.button(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Buttons.renderButton)(Type_Equality.refl))(Materialize_Buttons.decorateButtonType)))(Materialize_Buttons.floating))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Markup_Variadic.variadicDecorate(Materialize_Waves.waves(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Waves.renderWaves)(Type_Equality.refl))(Materialize_Waves.decorateWavesLight)))(Materialize_Waves.light))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Markup_Variadic.liftVariadic(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Color.renderColor)(Type_Equality.refl))(b))(function () {
                          return Materialize_Tooltips.tooltipped(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl));
                      });
                  });
              }))))(Materialize_Tooltips.dataTooltip(t))(Materialize_Icons.icon(Materialize_Markup_Variadic.variadicReturnMarkup(Materialize_Icons.markupableIcon)(Type_Equality.refl))(i));
          };
      };
  };
  var navigation = sectionRow(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.s1))(function () {
      return Materialize_Alignment.align(Materialize_Alignment.decorateAlignmentHorizontalCenter)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Alignment.renderAlignment)(Type_Equality.refl))(Materialize_Alignment.horizontalCenter);
  })))(Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkup)(iconButton$prime("Return to home")(Materialize_Icons_Data.home)(nonInterruptiveColor))(Pux_DOM_Events.onClick(Data_Function["const"](new Yousort_Component_Update["Navigate'"](Yousort_Route.Opening.value))))));
  var iconButton = function (t) {
      return function (i) {
          return iconButton$prime(t)(i)(primaryColor);
      };
  };
  var divider = section(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Materialize_Grid.divider(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl))))(Text_Smolder_Markup.empty));
  var description = function (p$prime) {
      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.p)(Materialize_Markup_Dsl.classList(Materialize_Alignment.align(Materialize_Alignment.decorateAlignmentHorizontalCenter)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Alignment.renderAlignment)(Type_Equality.refl))(Materialize_Alignment.horizontalCenter)))(Text_Smolder_Markup.text(p$prime));
  };
  var comparableCardBase = function (v) {
      if (v instanceof Yousort_Component_State.Text) {
          return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Text_Smolder_HTML_Attributes.className(Materialize_Cards.cardContent(Materialize_Markup_Variadic.variadicReturnString(Materialize_Markup_Render["renderString'"]))))((function () {
              var v1 = Data_String_Common["null"](v.value0.description);
              if (v1) {
                  return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Cards.cardTitle(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl)))(function () {
                      return Materialize_Alignment.align(Materialize_Alignment.decorateAlignmentHorizontalCenter)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Alignment.renderAlignment)(Type_Equality.refl))(Materialize_Alignment.horizontalCenter);
                  })))(Text_Smolder_Markup.text(v.value0.title));
              };
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Text_Smolder_HTML_Attributes.className(Materialize_Cards.cardTitle(Materialize_Markup_Variadic.variadicReturnString(Materialize_Markup_Render["renderString'"]))))(Text_Smolder_Markup.text(v.value0.title)))(function () {
                  return Text_Smolder_HTML.p(Text_Smolder_Markup.text(v.value0.description));
              });
          })());
      };
      if (v instanceof Yousort_Component_State.Image) {
          return mediaInfoCardContent(v.value0);
      };
      if (v instanceof Yousort_Component_State.Audio) {
          return mediaInfoCardContent(v.value0);
      };
      if (v instanceof Yousort_Component_State.YouTubeVideo) {
          return mediaInfoCardContent(v.value0);
      };
      throw new Error("Failed pattern match at Yousort.Component.View.Common line 167, column 1 - line 167, column 47: " + [ v.constructor.name ]);
  };
  var clickable = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("clickable");
  };
  var chipSuffixIcon = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("chip-suffix-icon");
  };
  var chipSuffix = function (i$prime) {
      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.i)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Icons.materialIcons(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl)))(function () {
          return chipSuffixIcon(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl));
      })))(Text_Smolder_Markup.text(Materialize_Markup_Render.renderString(Materialize_Icons_Data.renderIcons)(i$prime)));
  };
  var chipPrefixIcon = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("chip-prefix-icon");
  };
  var chipPrefix = function (i$prime) {
      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.i)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Icons.materialIcons(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl)))(function () {
          return chipPrefixIcon(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl));
      })))(Text_Smolder_Markup.text(Materialize_Markup_Render.renderString(Materialize_Icons_Data.renderIcons)(i$prime)));
  };
  var centered = Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Materialize_Alignment.align(Materialize_Alignment.decorateAlignmentHorizontalCenter)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Alignment.renderAlignment)(Type_Equality.refl))(Materialize_Alignment.horizontalCenter)));
  var cardActions = Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Cards.cardAction(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl)))(function () {
      return Materialize_Alignment.align(Materialize_Alignment.decorateAlignmentRight)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Alignment.renderAlignment)(Type_Equality.refl))(Materialize_Overriden.right);
  })));
  var booleanAttribute$prime = function (t) {
      return function (f) {
          return function (b) {
              return f((function () {
                  if (b) {
                      return t;
                  };
                  return "";
              })());
          };
      };
  };
  var toBooleanAttribute = booleanAttribute$prime("__DummyValue__");
  var checked = toBooleanAttribute(Text_Smolder_HTML_Attributes.checked);
  var controls = toBooleanAttribute(Text_Smolder_HTML_Attributes.controls);
  var disabled = toBooleanAttribute(Text_Smolder_HTML_Attributes.disabled);
  var booleanAttribute = function (a) {
      return booleanAttribute$prime(a)(Text_Smolder_Markup.attribute(a));
  };
  var autofocus = toBooleanAttribute(Text_Smolder_HTML_Attributes.autofocus);
  var anchor = Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.a)(Materialize_Markup_Dsl.classList(clickable(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl))));
  var allowfullscreen = booleanAttribute("allowfullscreen");
  var comparableCardMain = function (v) {
      if (v instanceof Yousort_Component_State.Text) {
          return Text_Smolder_Markup.empty;
      };
      if (v instanceof Yousort_Component_State.Image) {
          return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Cards.cardImage(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl)))(function () {
              return Materialize_Alignment.align(Materialize_Alignment.decorateAlignmentVerticalCenter)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Alignment.renderAlignment)(Type_Equality.refl))(Materialize_Alignment.verticalCenter);
          }))))(Pux_DOM_HTML_Attributes.style(CSS_Geometry.maxHeight(CSS_Size.vh(30.0))))(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Pux_DOM_HTML_Attributes.style(CSS_Geometry.width(CSS_Size.pct(100.0))))(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Text_Smolder_HTML.img)(Text_Smolder_HTML_Attributes.className(Materialize_Media_Images.image(Materialize_Media_Images.decorateImageMaterialBoxed)(Materialize_Markup_Variadic.variadicReturnString(Materialize_Media_Images.renderImage))(Materialize_Media_Images.materialBoxed))))(Text_Smolder_HTML_Attributes.src(v.value0.url)))(Text_Smolder_HTML_Attributes.alt(v.value0.caption))));
      };
      if (v instanceof Yousort_Component_State.Audio) {
          return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Grid.section(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl)))(function () {
              return Materialize_Alignment.align(Materialize_Alignment.decorateAlignmentHorizontalCenter)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Alignment.renderAlignment)(Type_Equality.refl))(Materialize_Alignment.horizontalCenter);
          }))))(Pux_DOM_HTML_Attributes.style(CSS_Overflow.overflow(CSS_Overflow.scroll)))(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.audio)(Text_Smolder_HTML_Attributes.src(v.value0.url)))(controls(true))(Text_Smolder_Markup.empty));
      };
      if (v instanceof Yousort_Component_State.YouTubeVideo) {
          return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Text_Smolder_HTML_Attributes.className(Materialize_Cards.cardImage(Materialize_Markup_Variadic.variadicReturnString(Materialize_Markup_Render["renderString'"]))))(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Text_Smolder_HTML_Attributes.className(Materialize_Media_Videos.video(Materialize_Markup_Variadic.variadicReturnString(Materialize_Media_Videos.renderVideo))(Materialize_Overriden.responsive)(true))))(Pux_DOM_HTML_Attributes.style(CSS_Border.borderRadius(CSS_Size.px(2.0))(CSS_Size.px(2.0))(CSS_Size.nil)(CSS_Size.nil)))((function () {
              var v1 = Yousort_Component_State.parseYouTubeVideoId(v.value0.url);
              if (v1 instanceof Data_Maybe.Just) {
                  return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.iframe)(Text_Smolder_HTML_Attributes.src("https://www.youtube.com/embed/" + (v1.value0 + "?rel=0"))))(Text_Smolder_Markup.attribute("frameborder")("0")))(Text_Smolder_Markup.attribute("allow")("autoplay; encrypted-media")))(allowfullscreen(true))(Text_Smolder_Markup.empty);
              };
              return Text_Smolder_Markup.empty;
          })()));
      };
      throw new Error("Failed pattern match at Yousort.Component.View.Common line 140, column 1 - line 140, column 47: " + [ v.constructor.name ]);
  };
  exports["navigation"] = navigation;
  exports["title"] = title;
  exports["monologue"] = monologue;
  exports["description"] = description;
  exports["sectionHeader"] = sectionHeader;
  exports["sectionRow"] = sectionRow;
  exports["section"] = section;
  exports["row"] = row;
  exports["centered"] = centered;
  exports["anchor"] = anchor;
  exports["textButton"] = textButton;
  exports["iconButton"] = iconButton;
  exports["iconButton'"] = iconButton$prime;
  exports["cardActions"] = cardActions;
  exports["comparableCardMain"] = comparableCardMain;
  exports["chipPrefix"] = chipPrefix;
  exports["chipSuffix"] = chipSuffix;
  exports["divider"] = divider;
  exports["autofocus"] = autofocus;
  exports["primaryColor"] = primaryColor;
  exports["nonInterruptiveColor"] = nonInterruptiveColor;
  exports["interruptiveColor"] = interruptiveColor;
  exports["primaryTextColor"] = primaryTextColor;
  exports["disabled"] = disabled;
  exports["checked"] = checked;
  exports["controls"] = controls;
  exports["allowfullscreen"] = allowfullscreen;
  exports["clickable"] = clickable;
  exports["textEmphasis"] = textEmphasis;
  exports["chipPrefixIcon"] = chipPrefixIcon;
  exports["chipSuffixIcon"] = chipSuffixIcon;
  exports["key"] = key;
  exports["onClickNotCanceled"] = onClickNotCanceled;
  exports["onClickCancel"] = onClickCancel;
  exports["comparableCardBase"] = comparableCardBase;
})(PS["Yousort.Component.View.Common"] = PS["Yousort.Component.View.Common"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Tournament = PS["Data.Tournament"];
  var Data_Unit = PS["Data.Unit"];
  var Materialize_Cards = PS["Materialize.Cards"];
  var Materialize_Grid = PS["Materialize.Grid"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Dsl = PS["Materialize.Markup.Dsl"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Prelude = PS["Prelude"];
  var Pux_DOM_HTML = PS["Pux.DOM.HTML"];
  var Text_Smolder_HTML = PS["Text.Smolder.HTML"];
  var Text_Smolder_HTML_Attributes = PS["Text.Smolder.HTML.Attributes"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];
  var Type_Equality = PS["Type.Equality"];
  var Yousort_Component_State = PS["Yousort.Component.State"];
  var Yousort_Component_Update = PS["Yousort.Component.Update"];
  var Yousort_Component_View_Common = PS["Yousort.Component.View.Common"];                 
  var suffixOrdinal = function (i) {
      var k = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(i)(100);
      var j = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(i)(10);
      return Data_Show.show(Data_Show.showInt)(i) + (function () {
          if (j === 1 && k !== 11) {
              return "st";
          };
          if (j === 2 && k !== 12) {
              return "nd";
          };
          if (j === 3 && k !== 13) {
              return "rd";
          };
          return "th";
      })();
  };
  var comparableCard = function (c) {
      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Text_Smolder_HTML_Attributes.className(Materialize_Markup_Variadic.variadicDecorate(Materialize_Cards.card(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnString(Materialize_Cards.renderCard))(Materialize_Cards.decorateCardHoverable)))(Materialize_Cards.hoverable)))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.comparableCardMain(c))(function () {
          return Yousort_Component_View_Common.comparableCardBase(c);
      }));
  };
  var prominentStandingCard = function (s) {
      return function (c) {
          return Text_Smolder_HTML.div(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.monologue(suffixOrdinal(s)))(function () {
              return comparableCard(c);
          }));
      };
  };
  var standingCard = function (s) {
      return function (c) {
          return Text_Smolder_HTML.div(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.sectionHeader(suffixOrdinal(s)))(function () {
              return comparableCard(c);
          }));
      };
  };
  var standingCards = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Data_List_Types.Nil) {
                  return Text_Smolder_Markup.empty;
              };
              if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.sectionRow(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(prominentStandingCard(v1)(v2.value0))(Materialize_Markup_Dsl.classList(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.decorateColumnOffset))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.decorateColumnOffset))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.s12))(Materialize_Grid.m8))(Materialize_Grid.offset(Materialize_Grid.m2)))(Materialize_Grid.xl6))(Materialize_Grid.offset(Materialize_Grid.xl3))))))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Control_Applicative.when(Control_Monad_Free.freeApplicative)(Data_Foldable["null"](Data_List_Types.foldableList)(v2.value1))(Yousort_Component_View_Common.section(Yousort_Component_View_Common.description("I am the only entry here, but I am also the best entry."))))(function () {
                          return standingCards(1)(v1 + 1 | 0)(v2.value1);
                      });
                  });
              };
              if (v === 1 && v2 instanceof Data_List_Types.Cons) {
                  return Yousort_Component_View_Common.section(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.row(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(standingCard(v1)(v2.value0))(Materialize_Markup_Dsl.classList(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.decorateColumnOffset))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.decorateColumnOffset))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.s6))(Materialize_Grid.m5))(Materialize_Grid.offset(Materialize_Grid.m1)))(Materialize_Grid.xl4))(Materialize_Grid.offset(Materialize_Grid.xl2)))))(function () {
                      if (v2.value1 instanceof Data_List_Types.Cons) {
                          return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(standingCard(v1 + 1 | 0)(v2.value1.value0))(Materialize_Markup_Dsl.classList(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.s6))(Materialize_Grid.m5))(Materialize_Grid.xl4)));
                      };
                      return Text_Smolder_Markup.empty;
                  })))(function () {
                      return standingCards(2)(v1 + 2 | 0)(Data_List.drop(1)(v2.value1));
                  }));
              };
              if (v === 2) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(standingCards(3)(v1)(Data_List.take(4)(v2)))(function () {
                      return standingCards(3)(v1 + 4 | 0)(Data_List.drop(4)(v2));
                  });
              };
              return Yousort_Component_View_Common.row(Data_FoldableWithIndex.forWithIndex_(Control_Monad_Free.freeApplicative)(Data_List_Types.foldableWithIndexList)(v2)(function (i) {
                  return function (c) {
                      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(standingCard(v1 + i | 0)(c))(Materialize_Markup_Dsl.classList(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.s6))(Materialize_Grid.m4))(Materialize_Grid.xl3)));
                  };
              }));
          };
      };
  };
  var award = function (v) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.navigation)(function () {
          return Yousort_Component_View_Common.section((function () {
              var v1 = Data_Tournament.ranked(v.tournament);
              if (v1 instanceof Data_List_Types.Nil) {
                  return Yousort_Component_View_Common.description("Nothing is sorted yet.");
              };
              return standingCards(0)(1)(Data_List.reverse(v1));
          })());
      });
  };
  exports["award"] = award;
})(PS["Yousort.Component.View.Award"] = PS["Yousort.Component.View.Award"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Data_Function = PS["Data.Function"];
  var Prelude = PS["Prelude"];
  var Pux_DOM_HTML = PS["Pux.DOM.HTML"];
  var Yousort_Component_Update = PS["Yousort.Component.Update"];
  var Yousort_Component_View_Common = PS["Yousort.Component.View.Common"];                 
  var notFound = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.navigation)(function () {
      return Yousort_Component_View_Common.section(Yousort_Component_View_Common.description("Nothing is here."));
  });
  exports["notFound"] = notFound;
})(PS["Yousort.Component.View.NotFound"] = PS["Yousort.Component.View.NotFound"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Types = PS["Materialize.Types"];                 
  var chip = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("chip");
  };
  exports["chip"] = chip;
})(PS["Materialize.Forms.Chips"] = PS["Materialize.Forms.Chips"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Types = PS["Materialize.Types"];
  var Prelude = PS["Prelude"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];                 
  var InputField = function (x) {
      return x;
  };
  var renderFile = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("file-field");
  });
  var renderInputField = new Materialize_Markup_Render.Render(function (v) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(renderFile))(v))(Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("input-field"));
  });
  var newtypeInputField = new Data_Newtype.Newtype(function (n) {
      return n;
  }, InputField);
  var invalid = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("invalid");
  };
  var inputField = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)(Data_Newtype.wrap(newtypeInputField)(Data_Maybe.Nothing.value));
  };
  var helperText = function (dictVariadic) {
      return Materialize_Markup_Variadic.liftVariadic(dictVariadic)("helper-text");
  };                                                                        
  var dataValidationError = Text_Smolder_Markup.attribute("data-error");
  exports["InputField"] = InputField;
  exports["inputField"] = inputField;
  exports["invalid"] = invalid;
  exports["dataValidationError"] = dataValidationError;
  exports["helperText"] = helperText;
  exports["renderInputField"] = renderInputField;
  exports["renderFile"] = renderFile;
  exports["newtypeInputField"] = newtypeInputField;
})(PS["Materialize.Forms.TextInputs"] = PS["Materialize.Forms.TextInputs"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Materialize_Color = PS["Materialize.Color"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Decorate = PS["Materialize.Markup.Decorate"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Prelude = PS["Prelude"];                 
  var Text = function (x) {
      return x;
  };                                                                                                                        
  var truncate = Data_Typelevel_Undefined["undefined"];
  var renderTruncate = new Materialize_Markup_Render.Render(function (v) {
      return Materialize_Markup_Render.render(Materialize_Markup_Render["renderString'"])("truncate");
  });
  var renderText = new Materialize_Markup_Render.Render(function (v) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(renderTruncate))(v.truncate))(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Markup_Render["renderString'"]))(Data_Functor.voidRight(Data_Maybe.functorMaybe)("flow-text")(v.flow)))(Data_Semigroup.append(Data_List_Types.semigroupList)(Materialize_Markup_Decorate.decorate(Materialize_Markup_Decorate.decorateFunctor(Data_List_Types.functorList)(Materialize_Markup_Decorate.decorateString))(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Color.renderHue))(v.hue))("text"))(Materialize_Markup_Decorate.functorDecorate(Data_List_Types.functorList)(Materialize_Markup_Decorate.decorateString)("text")(Materialize_Markup_Render.render(Materialize_Markup_Render.renderMaybe(Materialize_Color.renderShade))(v.shade)))));
  });
  var newtypeText = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Text);
  var text = function (dictDecorate) {
      return function (dictVariadic) {
          return function (a) {
              return Materialize_Markup_Variadic.liftVariadic(dictVariadic)(Materialize_Markup_Decorate.decorateFlipped(dictDecorate)(a)(Data_Newtype.wrap(newtypeText)({
                  hue: Data_Maybe.Nothing.value,
                  shade: Data_Maybe.Nothing.value,
                  flow: Data_Maybe.Nothing.value,
                  truncate: Data_Maybe.Nothing.value
              })));
          };
      };
  };
  var flow = Data_Typelevel_Undefined["undefined"];
  var decorateTextHue = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (h) {
          return Data_Newtype.wrap(newtypeText)({
              hue: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(h),
              flow: v.flow,
              shade: v.shade,
              truncate: v.truncate
          });
      };
  });
  var decorateTextColor = new Materialize_Markup_Decorate.Decorate(function (v) {
      return function (v1) {
          return Data_Newtype.wrap(newtypeText)({
              hue: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v1.value0),
              shade: v1.value1,
              flow: v.flow,
              truncate: v.truncate
          });
      };
  });
  exports["Text"] = Text;
  exports["text"] = text;
  exports["flow"] = flow;
  exports["truncate"] = truncate;
  exports["decorateTextHue"] = decorateTextHue;
  exports["decorateTextColor"] = decorateTextColor;
  exports["renderText"] = renderText;
  exports["renderTruncate"] = renderTruncate;
  exports["newtypeText"] = newtypeText;
})(PS["Materialize.Text"] = PS["Materialize.Text"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Prelude = PS["Prelude"];                 
  var GenericCtorEq = function (genericCtorEq$prime) {
      this["genericCtorEq'"] = genericCtorEq$prime;
  };
  var genericEqConstructor = new GenericCtorEq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var genericCtorEq$prime = function (dict) {
      return dict["genericCtorEq'"];
  };
  var genericEqSum = function (dictGenericCtorEq) {
      return function (dictGenericCtorEq1) {
          return new GenericCtorEq(function (v) {
              return function (v1) {
                  if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                      return genericCtorEq$prime(dictGenericCtorEq)(v.value0)(v1.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                      return genericCtorEq$prime(dictGenericCtorEq1)(v.value0)(v1.value0);
                  };
                  return false;
              };
          });
      };
  };
  var genericCtorEq = function (dictGeneric) {
      return function (dictGenericCtorEq) {
          return function (x) {
              return function ($14) {
                  return genericCtorEq$prime(dictGenericCtorEq)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)($14));
              };
          };
      };
  };
  exports["GenericCtorEq"] = GenericCtorEq;
  exports["genericCtorEq"] = genericCtorEq;
  exports["genericEqSum"] = genericEqSum;
  exports["genericEqConstructor"] = genericEqConstructor;
})(PS["Yousort.Component.Internal"] = PS["Yousort.Component.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var GitHub_Corners = PS["GitHub.Corners"];
  var Materialize_Alignment = PS["Materialize.Alignment"];
  var Materialize_Cards = PS["Materialize.Cards"];
  var Materialize_Color = PS["Materialize.Color"];
  var Materialize_Forms_Chips = PS["Materialize.Forms.Chips"];
  var Materialize_Forms_TextInputs = PS["Materialize.Forms.TextInputs"];
  var Materialize_Grid = PS["Materialize.Grid"];
  var Materialize_Icons = PS["Materialize.Icons"];
  var Materialize_Icons_Data = PS["Materialize.Icons.Data"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Dsl = PS["Materialize.Markup.Dsl"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Overriden = PS["Materialize.Overriden"];
  var Materialize_Text = PS["Materialize.Text"];
  var Materialize_Waves = PS["Materialize.Waves"];
  var Prelude = PS["Prelude"];
  var Pux_DOM_Events = PS["Pux.DOM.Events"];
  var Pux_DOM_HTML = PS["Pux.DOM.HTML"];
  var Text_Smolder_HTML = PS["Text.Smolder.HTML"];
  var Text_Smolder_HTML_Attributes = PS["Text.Smolder.HTML.Attributes"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];
  var Type_Equality = PS["Type.Equality"];
  var Yousort_Component_Internal = PS["Yousort.Component.Internal"];
  var Yousort_Component_State = PS["Yousort.Component.State"];
  var Yousort_Component_Update = PS["Yousort.Component.Update"];
  var Yousort_Component_View_Common = PS["Yousort.Component.View.Common"];
  var Yousort_Route = PS["Yousort.Route"];                 
  var textInput$prime = function (l) {
      return function (i) {
          return function (f) {
              return function (v) {
                  return function (a) {
                      return function (e) {
                          return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.s11))(function () {
                              return Materialize_Forms_TextInputs.inputField(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Forms_TextInputs.renderInputField)(Type_Equality.refl));
                          })))((function () {
                              var inputFieldId = "_generated_" + l;
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Materialize_Markup_Variadic.variadicDecorate(Materialize_Icons.icon(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnMarkup(Materialize_Icons.markupableIcon)(Type_Equality.refl))(Materialize_Icons.decorateIconPrefixed))(i))(Materialize_Icons.prefixedInInputField))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Text_Smolder_HTML.input)(Text_Smolder_HTML_Attributes["type'"]("text")))(Yousort_Component_View_Common.autofocus(a)))(Materialize_Markup_Dsl.classList(Control_Applicative.when(Materialize_Markup_Dsl.applicativeClassDsl)(Data_Maybe.isJust(e))(Materialize_Forms_TextInputs.invalid(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl))))))(Text_Smolder_HTML_Attributes.id(inputFieldId)))(Text_Smolder_HTML_Attributes.value(v)))(Pux_DOM_Events.onChange(Yousort_Component_Update.SetEditingEntryField.create(f))))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.label)(Text_Smolder_HTML_Attributes["for"](inputFieldId)))(Materialize_Markup_Dsl.classList(Control_Applicative.when(Materialize_Markup_Dsl.applicativeClassDsl)(!Data_String_Common["null"](v))(Materialize_Markup_Variadic.liftVariadic(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Overriden.renderActive)(Type_Equality.refl))(Materialize_Overriden.active))))(Text_Smolder_Markup.text(l)))(function () {
                                          return Data_Maybe.maybe(Text_Smolder_Markup.empty)(function (e$prime) {
                                              return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.span)(Text_Smolder_HTML_Attributes.className(Materialize_Forms_TextInputs.helperText(Materialize_Markup_Variadic.variadicReturnString(Materialize_Markup_Render["renderString'"])))))(Materialize_Forms_TextInputs.dataValidationError(e$prime))(Text_Smolder_Markup.empty);
                                          })(e);
                                      });
                                  });
                              });
                          })());
                      };
                  };
              };
          };
      };
  };
  var textInput = function (l) {
      return function (i) {
          return function (f) {
              return function (v) {
                  return textInput$prime(l)(i)(f)(v)(false)(Data_Maybe.Nothing.value);
              };
          };
      };
  };
  var radio = function (l) {
      return function (c) {
          return function (newC) {
              return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Materialize_Markup_Variadic.variadicDecorate(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.s6))(Materialize_Grid.m3)))(Text_Smolder_HTML.label(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Text_Smolder_HTML.input)(Text_Smolder_HTML_Attributes["type'"]("radio")))(Yousort_Component_View_Common.checked(Yousort_Component_Internal.genericCtorEq(Yousort_Component_State.genericComparable)(Yousort_Component_Internal.genericEqSum(Yousort_Component_Internal.genericEqConstructor)(Yousort_Component_Internal.genericEqSum(Yousort_Component_Internal.genericEqConstructor)(Yousort_Component_Internal.genericEqSum(Yousort_Component_Internal.genericEqConstructor)(Yousort_Component_Internal.genericEqConstructor))))(c)(newC))))(Pux_DOM_Events.onChange(Data_Function["const"](new Yousort_Component_Update.SetEditingEntry(newC)))))(function () {
                  return Text_Smolder_HTML.span(Text_Smolder_Markup.text(l));
              })));
          };
      };
  };
  var mediaInputFields = function (v) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(textInput$prime("Caption")(Materialize_Icons_Data.subtitles)(Yousort_Component_Update.Caption.value)(v.caption)(true)(Data_Maybe.Nothing.value))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(textInput("URL")(Materialize_Icons_Data.link)(Yousort_Component_Update.Url.value)(v.url))(function () {
              return textInput("Description (optional)")(Materialize_Icons_Data.subtitles)(Yousort_Component_Update.Description.value)(v.description);
          });
      });
  };
  var inputFields = function (v) {
      if (v instanceof Yousort_Component_State.Text) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(textInput$prime("Title")(Materialize_Icons_Data.title)(Yousort_Component_Update.Title.value)(v.value0.title)(true)(Data_Maybe.Nothing.value))(function () {
              return textInput("Description (optional)")(Materialize_Icons_Data.subtitles)(Yousort_Component_Update.Description.value)(v.value0.description);
          });
      };
      if (v instanceof Yousort_Component_State.Image) {
          return mediaInputFields(v.value0);
      };
      if (v instanceof Yousort_Component_State.Audio) {
          return mediaInputFields(v.value0);
      };
      if (v instanceof Yousort_Component_State.YouTubeVideo) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(textInput$prime("Caption")(Materialize_Icons_Data.subtitles)(Yousort_Component_Update.Caption.value)(v.value0.caption)(true)(Data_Maybe.Nothing.value))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(textInput$prime("URL")(Materialize_Icons_Data.link)(Yousort_Component_Update.Url.value)(v.value0.url)(false)((function () {
                  var v1 = Data_String_Common["null"](v.value0.url);
                  if (v1) {
                      return Data_Maybe.Nothing.value;
                  };
                  return Data_Maybe.maybe(Control_Applicative.pure(Data_Maybe.applicativeMaybe)("Invalid YouTube URL"))(Data_Function["const"](Data_Maybe.Nothing.value))(Yousort_Component_State.parseYouTubeVideoId(v.value0.url));
              })()))(function () {
                  return textInput("Description (optional)")(Materialize_Icons_Data.subtitles)(Yousort_Component_Update.Description.value)(v.value0.description);
              });
          });
      };
      throw new Error("Failed pattern match at Yousort.Component.View.Opening line 140, column 1 - line 140, column 40: " + [ v.constructor.name ]);
  };
  var emphasize = function (t) {
      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.span)(Materialize_Markup_Dsl.classList(Yousort_Component_View_Common.textEmphasis(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl))))(Text_Smolder_Markup.text(t));
  };
  var opening = function (v) {
      var editingEntry = function (c) {
          return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.decorateColumnOffset))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.decorateColumnOffset))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.s12))(Materialize_Grid.m10))(Materialize_Grid.offset(Materialize_Grid.m1)))(Materialize_Grid.xl8))(Materialize_Grid.offset(Materialize_Grid.xl2))))(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Text_Smolder_HTML_Attributes.className(Materialize_Cards.card(Materialize_Markup_Variadic.variadicReturnString(Materialize_Cards.renderCard))))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Text_Smolder_HTML_Attributes.className(Materialize_Cards.cardContent(Materialize_Markup_Variadic.variadicReturnString(Materialize_Markup_Render["renderString'"]))))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_HTML.div(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Text_Smolder_HTML_Attributes.className(Materialize_Cards.cardTitle(Materialize_Markup_Variadic.variadicReturnString(Materialize_Markup_Render["renderString'"]))))(Text_Smolder_Markup.text("Type")))(function () {
              return Yousort_Component_View_Common.sectionRow(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(radio("Text")(c)(Yousort_Component_State.newText))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(radio("Image")(c)(Yousort_Component_State.newImage))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(radio("Audio")(c)(Yousort_Component_State.newAudio))(function () {
                          return radio("YouTube")(c)(Yousort_Component_State.newYouTubeVideo);
                      });
                  });
              }));
          })))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.divider)(function () {
                  return Yousort_Component_View_Common.row(inputFields(c));
              });
          })))(function () {
              return Yousort_Component_View_Common.cardActions(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkupMF)(Yousort_Component_View_Common.anchor)(Pux_DOM_Events.onClick(Data_Function["const"](Yousort_Component_Update.AbortEditing.value)))(Text_Smolder_Markup.text("Cancel")))(function () {
                  return Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkup)((function () {
                      if (v.targetEntryIndex instanceof Data_Maybe.Just) {
                          return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Yousort_Component_View_Common.anchor)(Yousort_Component_View_Common.disabled(!Yousort_Component_Update.validateModification(v.targetEntryIndex.value0)(v.inputEntries)(c)))(emphasize("Save"));
                      };
                      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Yousort_Component_View_Common.anchor)(Yousort_Component_View_Common.disabled(!Yousort_Component_State.validateComparable(c)))(emphasize("Add"));
                  })())(Pux_DOM_Events.onClick(Data_Function["const"](Yousort_Component_Update.CommitEditing.value)));
              }));
          })));
      };
      return Text_Smolder_HTML.div(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(GitHub_Corners.defaultCorner("https://github.com/yehzhang/Yousort"))(Text_Smolder_HTML_Attributes.target("_blank")))(function () {
          var nEntriesLeft = Yousort_Component_Update.minimumPlayersCount - Data_Foldable.length(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(v.inputEntries) | 0;
          var canStart = nEntriesLeft <= 0;
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.section(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.title("Yousort"))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.description("Add any kind of entries, compare them, and see them ordered automatically."))(function () {
                  var startTournament = (function () {
                      if (canStart) {
                          return Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkup)(Yousort_Component_View_Common.textButton((function () {
                              if (v.canResume) {
                                  return "Start new run";
                              };
                              return "Start comparing";
                          })()))(Pux_DOM_Events.onClick(Data_Function["const"](Yousort_Component_Update.NewTournament.value)));
                      };
                      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Yousort_Component_View_Common.textButton(Data_Show.show(Data_Show.showInt)(nEntriesLeft) + " entries left"))(Yousort_Component_View_Common.disabled(true));
                  })();
                  return Yousort_Component_View_Common.sectionRow((function () {
                      if (v.canResume) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.s6))(function () {
                              return Materialize_Alignment.align(Materialize_Alignment.decorateAlignmentRight)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Alignment.renderAlignment)(Type_Equality.refl))(Materialize_Overriden.right);
                          })))(startTournament))(function () {
                              return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.s6)))(Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkup)(Yousort_Component_View_Common.textButton("Resume last run"))(Pux_DOM_Events.onClick(Data_Function["const"](new Yousort_Component_Update["Navigate'"](Yousort_Route.Tournament.value)))));
                          });
                      };
                      return Yousort_Component_View_Common.centered(startTournament);
                  })());
              });
          })))(function () {
              return Yousort_Component_View_Common.section(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.sectionHeader("Entries"))(function () {
                  return Yousort_Component_View_Common.sectionRow(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.centered(Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Yousort_Component_View_Common["iconButton'"]("Add an entry")(Materialize_Icons_Data.add)((function () {
                      if (canStart) {
                          return Yousort_Component_View_Common.primaryColor;
                      };
                      return Yousort_Component_View_Common.interruptiveColor;
                  })()))(Yousort_Component_View_Common.disabled(Data_Maybe.isJust(v.editingEntry))))(Pux_DOM_Events.onClick(Data_Function["const"](Yousort_Component_Update.InitEditing.value)))))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Data_Maybe.maybe(Text_Smolder_Markup.empty)(function ($39) {
                          return Yousort_Component_View_Common.sectionRow(editingEntry($39));
                      })(v.editingEntry))(function () {
                          return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Text_Smolder_HTML_Attributes.className(Materialize_Grid.container(Materialize_Markup_Variadic.variadicReturnString(Materialize_Markup_Render["renderString'"]))))(Yousort_Component_View_Common.sectionRow(Data_FoldableWithIndex.forWithIndex_(Control_Monad_Free.freeApplicative)(Data_List_Types.foldableWithIndexList)(v.inputEntries)(function (i$prime) {
                              return function (c) {
                                  var selected = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(i$prime))(v.targetEntryIndex);
                                  return Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkupMF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.a)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Forms_Chips.chip(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Yousort_Component_View_Common.clickable(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl)))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Markup_Variadic.variadicDecorate(Materialize_Waves.waves(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Waves.renderWaves)(Type_Equality.refl))(Materialize_Waves.decorateWavesColor)))(Yousort_Component_View_Common.primaryColor))(function () {
                                              return Control_Applicative.when(Materialize_Markup_Dsl.applicativeClassDsl)(selected)(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Markup_Variadic.liftVariadic(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Color.renderColor)(Type_Equality.refl))(Yousort_Component_View_Common.primaryColor))(function () {
                                                  return Materialize_Text.text(Materialize_Text.decorateTextColor)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Text.renderText)(Type_Equality.refl))(Yousort_Component_View_Common.primaryTextColor);
                                              }));
                                          });
                                      });
                                  }))))(Yousort_Component_View_Common.key(Yousort_Component_State.showComparable)(c)))(Yousort_Component_View_Common.onClickNotCanceled(Data_Function["const"](new Yousort_Component_Update.AtomicallyUpdateState([ new Yousort_Component_Update.SetTargetEntryIndex(i$prime), new Yousort_Component_Update.SetEditingEntry(c) ]))))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)((function () {
                                      if (c instanceof Yousort_Component_State.Text) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.chipPrefix(Materialize_Icons_Data.shortText))(function () {
                                              return Text_Smolder_Markup.text(c.value0.title);
                                          });
                                      };
                                      if (c instanceof Yousort_Component_State.Image) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.chipPrefix(Materialize_Icons_Data.image))(function () {
                                              return Text_Smolder_Markup.text(c.value0.caption);
                                          });
                                      };
                                      if (c instanceof Yousort_Component_State.Audio) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.chipPrefix(Materialize_Icons_Data.audiotrack))(function () {
                                              return Text_Smolder_Markup.text(c.value0.caption);
                                          });
                                      };
                                      if (c instanceof Yousort_Component_State.YouTubeVideo) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.chipPrefix(Materialize_Icons_Data.playArrow))(function () {
                                              return Text_Smolder_Markup.text(c.value0.caption);
                                          });
                                      };
                                      throw new Error("Failed pattern match at Yousort.Component.View.Opening line 99, column 25 - line 111, column 40: " + [ c.constructor.name ]);
                                  })())(function () {
                                      return Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkupMF)(Text_Smolder_HTML.span)(Yousort_Component_View_Common.onClickCancel(Data_Function["const"](new Yousort_Component_Update.DeleteChipAt(i$prime))))(Yousort_Component_View_Common.chipSuffix(Materialize_Icons_Data.close));
                                  }));
                              };
                          })));
                      });
                  }));
              }));
          });
      }));
  };
  exports["opening"] = opening;
})(PS["Yousort.Component.View.Opening"] = PS["Yousort.Component.View.Opening"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS = PS["CSS"];
  var CSS_Display = PS["CSS.Display"];
  var CSS_Flexbox = PS["CSS.Flexbox"];
  var CSS_Geometry = PS["CSS.Geometry"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tournament = PS["Data.Tournament"];
  var Data_Tuple = PS["Data.Tuple"];
  var Materialize_Alignment = PS["Materialize.Alignment"];
  var Materialize_Cards = PS["Materialize.Cards"];
  var Materialize_Color = PS["Materialize.Color"];
  var Materialize_Grid = PS["Materialize.Grid"];
  var Materialize_Icons_Data = PS["Materialize.Icons.Data"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Dsl = PS["Materialize.Markup.Dsl"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Text = PS["Materialize.Text"];
  var Materialize_Waves = PS["Materialize.Waves"];
  var Prelude = PS["Prelude"];
  var Pux_DOM_Events = PS["Pux.DOM.Events"];
  var Pux_DOM_HTML = PS["Pux.DOM.HTML"];
  var Pux_DOM_HTML_Attributes = PS["Pux.DOM.HTML.Attributes"];
  var Text_Smolder_HTML = PS["Text.Smolder.HTML"];
  var Text_Smolder_HTML_Attributes = PS["Text.Smolder.HTML.Attributes"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];
  var Type_Equality = PS["Type.Equality"];
  var Yousort_Component_State = PS["Yousort.Component.State"];
  var Yousort_Component_Update = PS["Yousort.Component.Update"];
  var Yousort_Component_View_Common = PS["Yousort.Component.View.Common"];
  var Yousort_Route = PS["Yousort.Route"];                 
  var competitor = function (o) {
      return function (c) {
          return Text_Smolder_HTML.div(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Text_Smolder_HTML_Attributes.className(Materialize_Markup_Variadic.variadicDecorate(Materialize_Cards.card(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnString(Materialize_Cards.renderCard))(Materialize_Cards.decorateCardHoverable)))(Materialize_Cards.hoverable))))(Yousort_Component_View_Common.key(Yousort_Component_State.showComparable)(c))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.comparableCardMain(c))(function () {
              return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.a)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Text.text(Materialize_Text.decorateTextHue)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Text.renderText)(Type_Equality.refl))(Materialize_Color.black))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Yousort_Component_View_Common.clickable(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl)))(function () {
                      return Materialize_Markup_Variadic.variadicDecorate(Materialize_Waves.waves(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Waves.renderWaves)(Type_Equality.refl))(Materialize_Waves.decorateWavesDisplayBlock)))(Materialize_Waves.displayBlock);
                  });
              })))(Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkup)(Yousort_Component_View_Common.comparableCardBase(c))(Pux_DOM_Events.onClick(Data_Function["const"](Yousort_Component_Update.Forward.create(new Yousort_Component_State.Choose(o))))));
          })));
      };
  };
  var tournament = function (v) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.navigation)(function () {
          var nextPlayers = Data_Tournament.next(v.tournament);
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.section((function () {
              if (nextPlayers instanceof Data_Maybe.Just) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.description("Which goes first?"))(function () {
                      return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Yousort_Component_View_Common.sectionRow)(Pux_DOM_HTML_Attributes.style(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Display.display(CSS_Display.flex))(function () {
                          return CSS_Geometry.minHeight(CSS_Size.vh(45.0));
                      })))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(competitor(Data_Tournament.Left.value)(nextPlayers.value0.value0))(Materialize_Markup_Dsl.classList(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.decorateColumnOffset))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.s6))(Materialize_Grid.xl5))(Materialize_Grid.offset(Materialize_Grid.xl1)))))(Pux_DOM_HTML_Attributes.style(CSS_Flexbox.alignSelf(CSS_Flexbox.flexEnd(CSS_Flexbox.flexEndAlignSelfValue)))))(function () {
                          return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(competitor(Data_Tournament.Right.value)(nextPlayers.value0.value1))(Materialize_Markup_Dsl.classList(Materialize_Markup_Variadic.variadicDecorate(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.s6))(Materialize_Grid.xl5))))(Pux_DOM_HTML_Attributes.style(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Flexbox.alignSelf(CSS_Flexbox.flexEnd(CSS_Flexbox.flexEndAlignSelfValue)))(function () {
                              return CSS_Geometry.marginLeft(CSS_Size.nil);
                          })));
                      }));
                  });
              };
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.description("Comparison completed."))(function () {
                  return Yousort_Component_View_Common.section(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Yousort_Component_View_Common.sectionHeader("See results?"))(function () {
                      return Yousort_Component_View_Common.section(Yousort_Component_View_Common.centered(Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkup)(Yousort_Component_View_Common.textButton("Yes!"))(Pux_DOM_Events.onClick(Data_Function["const"](new Yousort_Component_Update["Navigate'"](Yousort_Route.Award.value))))));
                  }));
              });
          })()))(function () {
              return Yousort_Component_View_Common.sectionRow(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.decorateColumnOffset))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.decorateColumnOffset))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.decorateColumnOffset))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.decorateColumnOffset))(Materialize_Grid.s5))(Materialize_Grid.offset(Materialize_Grid.s1)))(Materialize_Grid.m3))(Materialize_Grid.offset(Materialize_Grid.m3)))(Materialize_Grid.l2))(Materialize_Grid.offset(Materialize_Grid.l4)))(Materialize_Grid.xl1))(Materialize_Grid.offset(Materialize_Grid.xl5)))(function () {
                  return Materialize_Alignment.align(Materialize_Alignment.decorateAlignmentHorizontalCenter)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Alignment.renderAlignment)(Type_Equality.refl))(Materialize_Alignment.horizontalCenter);
              })))(Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Yousort_Component_View_Common.iconButton("Undo")(Materialize_Icons_Data.undo))(Yousort_Component_View_Common.disabled(Data_Foldable["null"](Data_List_Types.foldableList)(v.history))))(Pux_DOM_Events.onClick(Data_Function["const"](Yousort_Component_Update.Backward.value)))))(function () {
                  return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Grid.column(Materialize_Grid.decorateColumnWidth)(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Grid.renderColumn)(Type_Equality.refl))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.decorateColumnWidth))(Materialize_Grid.s5))(Materialize_Grid.m3))(Materialize_Grid.l2))(Materialize_Grid.xl1))(function () {
                      return Materialize_Alignment.align(Materialize_Alignment.decorateAlignmentHorizontalCenter)(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Alignment.renderAlignment)(Type_Equality.refl))(Materialize_Alignment.horizontalCenter);
                  })))(Text_Smolder_Markup.withEvent(Text_Smolder_Markup.eventableMarkup)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkup)(Yousort_Component_View_Common.iconButton("Ask me later")(Materialize_Icons_Data.lowPriority))(Yousort_Component_View_Common.disabled(Data_Maybe.isNothing(nextPlayers))))(Pux_DOM_Events.onClick(Data_Function["const"](new Yousort_Component_Update.Forward(Yousort_Component_State.Hold.value)))));
              }));
          });
      });
  };
  exports["tournament"] = tournament;
})(PS["Yousort.Component.View.Tournament"] = PS["Yousort.Component.View.Tournament"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var CSS = PS["CSS"];
  var CSS_Background = PS["CSS.Background"];
  var CSS_Border = PS["CSS.Border"];
  var CSS_Box = PS["CSS.Box"];
  var CSS_Display = PS["CSS.Display"];
  var CSS_Font = PS["CSS.Font"];
  var CSS_Geometry = PS["CSS.Geometry"];
  var CSS_Overflow = PS["CSS.Overflow"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Selector = PS["CSS.Selector"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Color = PS["Color"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Data_Function = PS["Data.Function"];
  var Materialize_Grid = PS["Materialize.Grid"];
  var Materialize_Markup = PS["Materialize.Markup"];
  var Materialize_Markup_Dsl = PS["Materialize.Markup.Dsl"];
  var Materialize_Markup_Render = PS["Materialize.Markup.Render"];
  var Materialize_Markup_Variadic = PS["Materialize.Markup.Variadic"];
  var Materialize_Overriden = PS["Materialize.Overriden"];
  var Materialize_Visibility = PS["Materialize.Visibility"];
  var Prelude = PS["Prelude"];
  var Pux_DOM_HTML = PS["Pux.DOM.HTML"];
  var Text_Smolder_HTML = PS["Text.Smolder.HTML"];
  var Text_Smolder_Markup = PS["Text.Smolder.Markup"];
  var Type_Equality = PS["Type.Equality"];
  var Yousort_Component_State = PS["Yousort.Component.State"];
  var Yousort_Component_Update = PS["Yousort.Component.Update"];
  var Yousort_Component_View_Award = PS["Yousort.Component.View.Award"];
  var Yousort_Component_View_Common = PS["Yousort.Component.View.Common"];
  var Yousort_Component_View_NotFound = PS["Yousort.Component.View.NotFound"];
  var Yousort_Component_View_Opening = PS["Yousort.Component.View.Opening"];
  var Yousort_Component_View_Tournament = PS["Yousort.Component.View.Tournament"];
  var Yousort_Route = PS["Yousort.Route"];                 
  var view = function (v) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Control_Applicative.when(Control_Monad_Free.freeApplicative)(false)(Yousort_Component_View_Common.section(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Visibility.hide(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Visibility.renderVisibility)(Type_Equality.refl))(Materialize_Visibility.decorateVisibilityOnLarge))(Materialize_Visibility.decorateVisibilityOnMedium)))(Materialize_Visibility.on(Materialize_Overriden.medium)))(Materialize_Visibility.on(Materialize_Overriden.large))))(Text_Smolder_Markup.text("Small")))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Visibility.hide(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Visibility.renderVisibility)(Type_Equality.refl))(Materialize_Visibility.decorateVisibilityOnLarge))(Materialize_Visibility.decorateVisibilityOnSmall)))(Materialize_Visibility.on(Materialize_Overriden.small)))(Materialize_Visibility.on(Materialize_Overriden.large))))(Text_Smolder_Markup.text("Medium")))(function () {
              return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Materialize_Markup_Variadic.variadicDecorate(Materialize_Markup_Variadic.variadicDecorate(Materialize_Visibility.hide(Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic["variadicDecorate'"](Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Visibility.renderVisibility)(Type_Equality.refl))(Materialize_Visibility.decorateVisibilityOnMedium))(Materialize_Visibility.decorateVisibilityOnSmall)))(Materialize_Visibility.on(Materialize_Overriden.small)))(Materialize_Visibility.on(Materialize_Overriden.medium)))(function () {
                  return Materialize_Markup_Variadic.liftVariadic(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl))("hide-on-extra-large-only");
              })))(Text_Smolder_Markup.text("Large"));
          });
      }))))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Pux_DOM_HTML.style((function () {
              var cursor = CSS_Stylesheet.key(CSS_Property.valString)(CSS_String.fromString(CSS_Property.isStringKey)("cursor"));
              return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".clickable"))(cursor("pointer")))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".row"))(CSS_Geometry.marginBottom(CSS_Size.nil)))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".app-view"))(CSS_Geometry.maxWidth(CSS_Size.px(1080.0))))(function () {
                          var primaryColor = Color.fromInt(7901340);
                          var primaryColorDarkVariant = Color.fromInt(6323595);
                          var primaryColorLightVariant = Color.fromInt(11583173);
                          var redColor = Color.fromInt(16007990);
                          return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)("input[type=\"radio\"]:checked + span:after,\x0a                      input[type=\"radio\"].with-gap:checked + span:before,\x0a                      input[type=\"radio\"].with-gap:checked + span:after\x0a                      "))(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Background.backgroundColor(primaryColorDarkVariant))(function () {
                              return CSS_Border.border(CSS_Border.solid)(CSS_Size.px(2.0))(primaryColorDarkVariant);
                          })))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".input-field input[type=\"text\"]:not(.browser-default):focus:not([readonly]) + label,\x0a                      .input-field .prefix.active"))(CSS_Font.color(primaryColorDarkVariant)))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".input-field input[type=\"text\"]:not(.browser-default):focus:not([readonly])"))(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Border.borderBottom(CSS_Border.solid)(CSS_Size.px(1.0))(primaryColorDarkVariant))(function () {
                                      return CSS_Box.boxShadow(CSS_Size.nil)(CSS_Size.px(1.0))(CSS_Size.nil)(primaryColorDarkVariant);
                                  })))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".input-field input[type=text].invalid:not(.browser-default),\x0a                      .input-field input[type=text].invalid:not(.browser-default):focus"))(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Border.borderBottom(CSS_Border.solid)(CSS_Size.px(1.0))(redColor))(function () {
                                          return CSS_Box.boxShadow(CSS_Size.nil)(CSS_Size.px(1.0))(CSS_Size.nil)(redColor);
                                      })))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".card .card-action a:not(.btn):not(.btn-large):not(.btn-small):not(.btn-large):not(.btn-floating)"))(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.marginRight(CSS_Size.nil))(function () {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.marginLeft(CSS_Size.px(24.0)))(function () {
                                                  return CSS_Font.color(primaryColorDarkVariant);
                                              });
                                          })))(function () {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".card .card-action a:not(.btn):not(.btn-large):not(.btn-small):not(.btn-large):not(.btn-floating):hover"))(CSS_Font.color(primaryColorLightVariant)))(function () {
                                                  var pointerEvents = CSS_Stylesheet.key(CSS_Property.valString)(CSS_String.fromString(CSS_Property.isStringKey)("pointer-events"));
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".card-action a[disabled]:not(.btn):not(.btn-large):not(.btn-small):not(.btn-large):not(.btn-floating),\x0a                      .card-action a[disabled]:not(.btn):not(.btn-large):not(.btn-small):not(.btn-large):not(.btn-floating):hover"))(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(pointerEvents("none"))(function () {
                                                      return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Font.color(Color.fromInt(14671839)))(function () {
                                                          return cursor("default");
                                                      });
                                                  })))(function () {
                                                      return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".text-emphasis"))(CSS_Font.fontWeight(CSS_Font.weight(600.0))))(function () {
                                                          var interruptiveColor = Color.fromInt(16007990);
                                                          return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".chip-prefix-icon"))(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Display["float"](CSS_Display.floatLeft))(function () {
                                                              return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Font.fontSize(CSS_Size.px(18.0)))(function () {
                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.lineHeight(CSS_Size.px(32.0)))(function () {
                                                                      return CSS_Geometry.paddingRight(CSS_Size.px(2.0));
                                                                  });
                                                              });
                                                          })))(function () {
                                                              return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".chip-suffix-icon"))(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Display["float"](CSS_Display.floatRight))(function () {
                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Font.fontSize(CSS_Size.px(16.0)))(function () {
                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.lineHeight(CSS_Size.px(32.0)))(function () {
                                                                          return CSS_Geometry.paddingLeft(CSS_Size.px(8.0));
                                                                      });
                                                                  });
                                                              })))(function () {
                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".chip-suffix-icon:hover"))(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Font.color(interruptiveColor))(function () {
                                                                      return CSS_Font.fontWeight(CSS_Font.weight(600.0));
                                                                  })))(function () {
                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".waves-effect.waves-blue-grey.waves-lighten-1 .waves-ripple"))(CSS_Background.backgroundColor(primaryColor)))(function () {
                                                                          return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".material-placeholder"))(CSS_Geometry.width(CSS_Size.pct(100.0))))(function () {
                                                                              return CSS_Stylesheet.select(CSS_String.fromString(CSS_Selector.isStringSelector)(".card-image.valign-wrapper"))(CSS_Overflow.overflow(CSS_Overflow.hidden));
                                                                          });
                                                                      });
                                                                  });
                                                              });
                                                          });
                                                      });
                                                  });
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          })()))(function () {
              return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupF)(Text_Smolder_HTML.div)(Materialize_Markup_Dsl.classList(Control_Bind.discard(Control_Bind.discardUnit)(Materialize_Markup_Dsl.bindClassDsl)(Yousort_Component_Update.viewCssClass(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl)))(function () {
                  return Materialize_Grid.container(Materialize_Markup_Variadic.variadicReturnClassDsl(Materialize_Markup_Render["renderString'"])(Type_Equality.refl));
              })))((function () {
                  if (v.route instanceof Yousort_Route.Opening) {
                      return Yousort_Component_View_Opening.opening(v);
                  };
                  if (v.route instanceof Yousort_Route.Tournament) {
                      return Yousort_Component_View_Tournament.tournament(v);
                  };
                  if (v.route instanceof Yousort_Route.Award) {
                      return Yousort_Component_View_Award.award(v);
                  };
                  if (v.route instanceof Yousort_Route.NotFound) {
                      return Yousort_Component_View_NotFound.notFound;
                  };
                  throw new Error("Failed pattern match at Yousort.Component.View line 117, column 11 - line 121, column 27: " + [ v.route.constructor.name ]);
              })());
          });
      });
  };
  exports["view"] = view;
})(PS["Yousort.Component.View"] = PS["Yousort.Component.View"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Pux = PS["Pux"];
  var Pux_Renderer_React = PS["Pux.Renderer.React"];
  var Signal = PS["Signal"];
  var Signal_Channel = PS["Signal.Channel"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_HTML = PS["Web.HTML"];
  var Web_HTML_HTMLDocument = PS["Web.HTML.HTMLDocument"];
  var Web_HTML_Location = PS["Web.HTML.Location"];
  var Web_HTML_Window = PS["Web.HTML.Window"];
  var Web_UIEvent_KeyboardEvent = PS["Web.UIEvent.KeyboardEvent"];
  var Yousort_Component_State = PS["Yousort.Component.State"];
  var Yousort_Component_Update = PS["Yousort.Component.Update"];
  var Yousort_Component_View = PS["Yousort.Component.View"];
  var Yousort_Route = PS["Yousort.Route"];                 
  var initialState = {
      route: Yousort_Component_State.defaultState.route,
      history: Yousort_Component_State.defaultState.history,
      tournament: Yousort_Component_State.defaultState.tournament,
      inputEntries: Data_List.fromFoldable(Data_Foldable.foldableArray)([ new Yousort_Component_State.Image({
          caption: "Java",
          url: "https://sdtimes.com/wp-content/uploads/2018/03/jW4dnFtA_400x400.jpg",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "C",
          url: "https://upload.wikimedia.org/wikipedia/commons/3/35/The_C_Programming_Language_logo.svg",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "C++",
          url: "https://upload.wikimedia.org/wikipedia/commons/1/18/ISO_C%2B%2B_Logo.svg",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "Python",
          url: "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Python-logo-notext.svg/1024px-Python-logo-notext.svg.png",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Text({
          title: "Visual Basic",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "C#",
          url: "https://pluralsight.imgix.net/paths/path-icons/csharp-e7b8fcd4ce.png",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "PHP",
          url: "https://upload.wikimedia.org/wikipedia/commons/2/27/PHP-logo.svg",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "JavaScript",
          url: "https://pluralsight.imgix.net/paths/path-icons/javascript-36f5949a45.png",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Text({
          title: "SQL",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "Swift",
          url: "https://developer.apple.com/assets/elements/icons/swift/swift-64x64_2x.png",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "MATLAB",
          url: "https://upload.wikimedia.org/wikipedia/commons/2/21/Matlab_Logo.png",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "Go",
          url: "https://golang.org/doc/gopher/frontpage.png",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Text({
          title: "Assembly language",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "R",
          url: "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/R_logo.svg/1448px-R_logo.svg.png",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "Objective-C",
          url: "https://woboq.com/blog/objective-c-for-qt-developers-meme.jpg",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Text({
          title: "Perl",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "Ruby",
          url: "https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Ruby_logo.svg/480px-Ruby_logo.svg.png",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "Scala",
          url: "https://www.scala-lang.org/resources/img/frontpage/scala-spiral.png",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "F#",
          url: "https://fsharp.org/img/logo/fsharp256.png",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "Lua",
          url: "https://www.lua.org/images/logo.gif",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "Haskell",
          url: "https://www.fpcomplete.com/hubfs/haskell_logo.svg",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }), new Yousort_Component_State.Image({
          caption: "PureScript",
          url: "https://upload.wikimedia.org/wikipedia/commons/6/64/PureScript_Logo.png",
          description: Data_Monoid.mempty(Data_Monoid.monoidString)
      }) ]),
      canResume: Yousort_Component_State.defaultState.canResume,
      editingEntry: Yousort_Component_State.defaultState.editingEntry,
      targetEntryIndex: Yousort_Component_State.defaultState.targetEntryIndex
  };
  var main = (function () {
      var sampleKeydown = function (d) {
          return function __do() {
              var v = Signal_Channel.channel("_Init")();
              var v1 = Web_Event_EventTarget.eventListener(function (e) {
                  var v1 = Web_UIEvent_KeyboardEvent.fromEvent(e);
                  if (v1 instanceof Data_Maybe.Just) {
                      return Signal_Channel.send(v)(Web_UIEvent_KeyboardEvent.key(v1.value0));
                  };
                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
              })();
              Web_Event_EventTarget.addEventListener("keydown")(v1)(false)(Web_HTML_HTMLDocument.toEventTarget(d))();
              return Signal_Channel.subscribe(v);
          };
      };
      var sampleHash = function (w) {
          return function __do() {
              var v = Web_HTML_Window.location(w)();
              var v1 = Control_Bind.bind(Effect.bindEffect)(Web_HTML_Location.hash(v))(Signal_Channel.channel)();
              var v2 = Web_Event_EventTarget.eventListener(function (v2) {
                  return Control_Bind.bind(Effect.bindEffect)(Web_HTML_Location.hash(v))(Signal_Channel.send(v1));
              })();
              Web_Event_EventTarget.addEventListener("popstate")(v2)(false)(Web_HTML_Window.toEventTarget(w))();
              return Signal_Channel.subscribe(v1);
          };
      };
      return function __do() {
          var v = Web_HTML.window();
          var v1 = sampleHash(v)();
          var routeSignal = Signal.flippedMap(Signal.functorSignal)(v1)(function ($25) {
              return Yousort_Component_Update.View.create(Yousort_Route.fromHash($25));
          });
          var v2 = Web_HTML_Window.document(v)();
          var v3 = sampleKeydown(v2)();
          var keydownSignal$prime = Signal.flippedMap(Signal.functorSignal)(v3)(Yousort_Component_Update.KeyDown.create);
          var v4 = Pux.start({
              initialState: initialState,
              view: Yousort_Component_View.view,
              foldp: Yousort_Component_Update.foldp,
              inputs: [ routeSignal, keydownSignal$prime ]
          })();
          return Pux_Renderer_React.renderToDOM("#app")(v4.markup)(v4.input)();
      };
  })();
  exports["main"] = main;
  exports["initialState"] = initialState;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();